WORK=/tmp/go-build2060988676
mkdir -p $WORK/b001/
cd $WORK
/my/install/dir/bin/llvm-goc -fgo-importcfg=/dev/null -c -x c - -o /dev/null || true
mkdir -p $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go/pkg
ln -s /home/ming/.cache/go-build/6f/6f875a06430e419a31221a110c47eb12653fc65d126b925ae40247b5661316ca-d $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go/pkg/libstatebased.a
mkdir -p $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go
ln -s /home/ming/.cache/go-build/78/78e4c47b769d07c859c68a764af671885ee729e23c851fc0c55a5443b842b287-d $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go/libshim.a
mkdir -p $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-contract-api-go
ln -s /home/ming/.cache/go-build/2a/2a44ecd8c43833897ccff269538bbc9e0f2bc2b99ed064c4ecc26efc13db50c2-d $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-contract-api-go/libcontractapi.a
/my/install/dir/bin/llvm-goc -ffile-prefix-map=a=b -c -x c - -o /dev/null || true
cd /home/ming/go/src/chaincode_repo/github/81
/my/install/dir/bin/llvm-goc -c -O2 -g -m64 -fdebug-prefix-map=$WORK=/tmp/go-build -gno-record-gcc-switches -fgo-pkgpath=command-line-arguments -o $WORK/b001/_go_.o -I $WORK/b001/_importcfgroot_ ./81.go
echo '	.section .go.buildid,"e"' >> $WORK/b001/_buildid.s
echo '	.byte 0x79,0x36,0x6d,0x74,0x6b,0x5f,0x31,0x6c' >> $WORK/b001/_buildid.s
echo '	.byte 0x5f,0x38,0x4b,0x67,0x4b,0x52,0x50,0x4c' >> $WORK/b001/_buildid.s
echo '	.byte 0x58,0x43,0x66,0x32,0x2f,0x79,0x36,0x6d' >> $WORK/b001/_buildid.s
echo '	.byte 0x74,0x6b,0x5f,0x31,0x6c,0x5f,0x38,0x4b' >> $WORK/b001/_buildid.s
echo '	.byte 0x67,0x4b,0x52,0x50,0x4c,0x58,0x43,0x66' >> $WORK/b001/_buildid.s
echo '	.byte 0x32' >> $WORK/b001/_buildid.s
echo '	.section .note.GNU-stack,"",@progbits' >> $WORK/b001/_buildid.s
echo '	.section .note.GNU-split-stack,"",@progbits' >> $WORK/b001/_buildid.s
echo '' >> $WORK/b001/_buildid.s
/my/install/dir/bin/llvm-goc -xassembler-with-cpp -I $WORK/b001/ -c -o $WORK/b001/_buildid.o -D GOOS_linux -D GOARCH_amd64 -D GOPKGPATH=command_x2dline_x2darguments -m64 $WORK/b001/_buildid.s
ar rcD $WORK/b001/_pkg_.a $WORK/b001/_go_.o $WORK/b001/_buildid.o
/my/install/dir/tools/buildid -w $WORK/b001/_pkg_.a # internal
cp $WORK/b001/_pkg_.a /home/ming/.cache/go-build/0d/0d8648206e0b8d64f362447430190f508e073771d5c2484d8626ed3e30a946d5-d # internal
