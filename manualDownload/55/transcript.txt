WORK=/tmp/go-build2164967994
mkdir -p $WORK/b001/
cd $WORK
/my/install/dir/bin/llvm-goc -fgo-importcfg=/dev/null -c -x c - -o /dev/null || true
mkdir -p $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go/pkg
ln -s /home/ming/.cache/go-build/a0/a0a4ca1bb4fea38bfce7f6cbbb172bf5f91337cfab32971bd49716969431cd38-d $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go/pkg/libstatebased.a
mkdir -p $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go
ln -s /home/ming/.cache/go-build/e8/e89ec39fee26da3dfbea9d0453dce0e668a368779288947241ea8117b5321d17-d $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-chaincode-go/libshim.a
mkdir -p $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-protos-go
ln -s /home/ming/.cache/go-build/84/84a0ac84d651e8ab3d3c0a31abddd16fe4dc84ebb3210188bd24073877bd4e65-d $WORK/b001/_importcfgroot_/github.com/hyperledger/fabric-protos-go/libpeer.a
/my/install/dir/bin/llvm-goc -ffile-prefix-map=a=b -c -x c - -o /dev/null || true
cd /home/ming/go/src/chaincode_repo/github/55
/my/install/dir/bin/llvm-goc -c -O2 -g -m64 -fdebug-prefix-map=$WORK=/tmp/go-build -gno-record-gcc-switches -fgo-pkgpath=command-line-arguments -o $WORK/b001/_go_.o -I $WORK/b001/_importcfgroot_ ./55.go
echo '	.section .go.buildid,"e"' >> $WORK/b001/_buildid.s
echo '	.byte 0x6b,0x58,0x6a,0x44,0x5a,0x36,0x4b,0x7a' >> $WORK/b001/_buildid.s
echo '	.byte 0x67,0x77,0x34,0x54,0x5a,0x42,0x70,0x34' >> $WORK/b001/_buildid.s
echo '	.byte 0x37,0x2d,0x31,0x6f,0x2f,0x6b,0x58,0x6a' >> $WORK/b001/_buildid.s
echo '	.byte 0x44,0x5a,0x36,0x4b,0x7a,0x67,0x77,0x34' >> $WORK/b001/_buildid.s
echo '	.byte 0x54,0x5a,0x42,0x70,0x34,0x37,0x2d,0x31' >> $WORK/b001/_buildid.s
echo '	.byte 0x6f' >> $WORK/b001/_buildid.s
echo '	.section .note.GNU-stack,"",@progbits' >> $WORK/b001/_buildid.s
echo '	.section .note.GNU-split-stack,"",@progbits' >> $WORK/b001/_buildid.s
echo '' >> $WORK/b001/_buildid.s
/my/install/dir/bin/llvm-goc -xassembler-with-cpp -I $WORK/b001/ -c -o $WORK/b001/_buildid.o -D GOOS_linux -D GOARCH_amd64 -D GOPKGPATH=command_x2dline_x2darguments -m64 $WORK/b001/_buildid.s
ar rcD $WORK/b001/_pkg_.a $WORK/b001/_go_.o $WORK/b001/_buildid.o
/my/install/dir/tools/buildid -w $WORK/b001/_pkg_.a # internal
cp $WORK/b001/_pkg_.a /home/ming/.cache/go-build/23/23f480f2b2df0ddc142faaebcf25b20a7593d2c22a9f598d24db2ed8760550c6-d # internal
