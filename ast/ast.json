抽象语法树 (AST) 结构：
     0  *ast.File {
     1  .  Package: source.go:1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: source.go:1:9
     4  .  .  Name: "fixtures"
     5  .  }
     6  .  Decls: []ast.Decl (len = 7) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: source.go:3:1
     9  .  .  .  Tok: import
    10  .  .  .  Lparen: source.go:3:8
    11  .  .  .  Specs: []ast.Spec (len = 6) {
    12  .  .  .  .  0: *ast.ImportSpec {
    13  .  .  .  .  .  Path: *ast.BasicLit {
    14  .  .  .  .  .  .  ValuePos: source.go:4:2
    15  .  .  .  .  .  .  Kind: STRING
    16  .  .  .  .  .  .  Value: "\"encoding/base64\""
    17  .  .  .  .  .  }
    18  .  .  .  .  .  EndPos: -
    19  .  .  .  .  }
    20  .  .  .  .  1: *ast.ImportSpec {
    21  .  .  .  .  .  Path: *ast.BasicLit {
    22  .  .  .  .  .  .  ValuePos: source.go:5:2
    23  .  .  .  .  .  .  Kind: STRING
    24  .  .  .  .  .  .  Value: "\"encoding/json\""
    25  .  .  .  .  .  }
    26  .  .  .  .  .  EndPos: -
    27  .  .  .  .  }
    28  .  .  .  .  2: *ast.ImportSpec {
    29  .  .  .  .  .  Path: *ast.BasicLit {
    30  .  .  .  .  .  .  ValuePos: source.go:6:2
    31  .  .  .  .  .  .  Kind: STRING
    32  .  .  .  .  .  .  Value: "\"fmt\""
    33  .  .  .  .  .  }
    34  .  .  .  .  .  EndPos: -
    35  .  .  .  .  }
    36  .  .  .  .  3: *ast.ImportSpec {
    37  .  .  .  .  .  Path: *ast.BasicLit {
    38  .  .  .  .  .  .  ValuePos: source.go:8:2
    39  .  .  .  .  .  .  Kind: STRING
    40  .  .  .  .  .  .  Value: "\"github.com/hyperledger/fabric-chaincode-go/shim\""
    41  .  .  .  .  .  }
    42  .  .  .  .  .  EndPos: -
    43  .  .  .  .  }
    44  .  .  .  .  4: *ast.ImportSpec {
    45  .  .  .  .  .  Name: *ast.Ident {
    46  .  .  .  .  .  .  NamePos: source.go:9:2
    47  .  .  .  .  .  .  Name: "pb"
    48  .  .  .  .  .  }
    49  .  .  .  .  .  Path: *ast.BasicLit {
    50  .  .  .  .  .  .  ValuePos: source.go:9:5
    51  .  .  .  .  .  .  Kind: STRING
    52  .  .  .  .  .  .  Value: "\"github.com/hyperledger/fabric-protos-go/peer\""
    53  .  .  .  .  .  }
    54  .  .  .  .  .  EndPos: -
    55  .  .  .  .  }
    56  .  .  .  .  5: *ast.ImportSpec {
    57  .  .  .  .  .  Path: *ast.BasicLit {
    58  .  .  .  .  .  .  ValuePos: source.go:10:2
    59  .  .  .  .  .  .  Kind: STRING
    60  .  .  .  .  .  .  Value: "\"github.com/pkg/errors\""
    61  .  .  .  .  .  }
    62  .  .  .  .  .  EndPos: -
    63  .  .  .  .  }
    64  .  .  .  }
    65  .  .  .  Rparen: source.go:11:1
    66  .  .  }
    67  .  .  1: *ast.GenDecl {
    68  .  .  .  TokPos: source.go:16:1
    69  .  .  .  Tok: type
    70  .  .  .  Lparen: -
    71  .  .  .  Specs: []ast.Spec (len = 1) {
    72  .  .  .  .  0: *ast.TypeSpec {
    73  .  .  .  .  .  Name: *ast.Ident {
    74  .  .  .  .  .  .  NamePos: source.go:16:6
    75  .  .  .  .  .  .  Name: "KVExecutor"
    76  .  .  .  .  .  .  Obj: *ast.Object {
    77  .  .  .  .  .  .  .  Kind: type
    78  .  .  .  .  .  .  .  Name: "KVExecutor"
    79  .  .  .  .  .  .  .  Decl: *(obj @ 72)
    80  .  .  .  .  .  .  }
    81  .  .  .  .  .  }
    82  .  .  .  .  .  Assign: -
    83  .  .  .  .  .  Type: *ast.StructType {
    84  .  .  .  .  .  .  Struct: source.go:16:17
    85  .  .  .  .  .  .  Fields: *ast.FieldList {
    86  .  .  .  .  .  .  .  Opening: source.go:16:23
    87  .  .  .  .  .  .  .  Closing: source.go:16:24
    88  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  Incomplete: false
    90  .  .  .  .  .  }
    91  .  .  .  .  }
    92  .  .  .  }
    93  .  .  .  Rparen: -
    94  .  .  }
    95  .  .  2: *ast.GenDecl {
    96  .  .  .  TokPos: source.go:22:1
    97  .  .  .  Tok: type
    98  .  .  .  Lparen: -
    99  .  .  .  Specs: []ast.Spec (len = 1) {
   100  .  .  .  .  0: *ast.TypeSpec {
   101  .  .  .  .  .  Name: *ast.Ident {
   102  .  .  .  .  .  .  NamePos: source.go:22:6
   103  .  .  .  .  .  .  Name: "KVData"
   104  .  .  .  .  .  .  Obj: *ast.Object {
   105  .  .  .  .  .  .  .  Kind: type
   106  .  .  .  .  .  .  .  Name: "KVData"
   107  .  .  .  .  .  .  .  Decl: *(obj @ 100)
   108  .  .  .  .  .  .  }
   109  .  .  .  .  .  }
   110  .  .  .  .  .  Assign: -
   111  .  .  .  .  .  Type: *ast.StructType {
   112  .  .  .  .  .  .  Struct: source.go:22:13
   113  .  .  .  .  .  .  Fields: *ast.FieldList {
   114  .  .  .  .  .  .  .  Opening: source.go:22:20
   115  .  .  .  .  .  .  .  List: []*ast.Field (len = 3) {
   116  .  .  .  .  .  .  .  .  0: *ast.Field {
   117  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   118  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   119  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:23:2
   120  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
   121  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   122  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   123  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
   124  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 116)
   125  .  .  .  .  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   129  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:23:13
   130  .  .  .  .  .  .  .  .  .  .  Name: "string"
   131  .  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   133  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:23:20
   134  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   135  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"collection\"`"
   136  .  .  .  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  .  .  1: *ast.Field {
   139  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   140  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   141  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:24:2
   142  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
   143  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   144  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   145  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
   146  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 138)
   147  .  .  .  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  .  .  .  }
   150  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   151  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:24:13
   152  .  .  .  .  .  .  .  .  .  .  Name: "string"
   153  .  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   155  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:24:20
   156  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   157  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"key\"`"
   158  .  .  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  2: *ast.Field {
   161  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   162  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   163  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:25:2
   164  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
   165  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   166  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   167  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
   168  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 160)
   169  .  .  .  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  .  .  }
   172  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   173  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:25:13
   174  .  .  .  .  .  .  .  .  .  .  Name: "string"
   175  .  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   177  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:25:20
   178  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   179  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"value\"`"
   180  .  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  .  Closing: source.go:26:1
   184  .  .  .  .  .  .  }
   185  .  .  .  .  .  .  Incomplete: false
   186  .  .  .  .  .  }
   187  .  .  .  .  }
   188  .  .  .  }
   189  .  .  .  Rparen: -
   190  .  .  }
   191  .  .  3: *ast.FuncDecl {
   192  .  .  .  Recv: *ast.FieldList {
   193  .  .  .  .  Opening: source.go:30:6
   194  .  .  .  .  List: []*ast.Field (len = 1) {
   195  .  .  .  .  .  0: *ast.Field {
   196  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   197  .  .  .  .  .  .  .  0: *ast.Ident {
   198  .  .  .  .  .  .  .  .  NamePos: source.go:30:7
   199  .  .  .  .  .  .  .  .  Name: "t"
   200  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   201  .  .  .  .  .  .  .  .  .  Kind: var
   202  .  .  .  .  .  .  .  .  .  Name: "t"
   203  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 195)
   204  .  .  .  .  .  .  .  .  }
   205  .  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  Type: *ast.StarExpr {
   208  .  .  .  .  .  .  .  Star: source.go:30:9
   209  .  .  .  .  .  .  .  X: *ast.Ident {
   210  .  .  .  .  .  .  .  .  NamePos: source.go:30:10
   211  .  .  .  .  .  .  .  .  Name: "KVExecutor"
   212  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
   213  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  }
   215  .  .  .  .  .  }
   216  .  .  .  .  }
   217  .  .  .  .  Closing: source.go:30:20
   218  .  .  .  }
   219  .  .  .  Name: *ast.Ident {
   220  .  .  .  .  NamePos: source.go:30:22
   221  .  .  .  .  Name: "Init"
   222  .  .  .  }
   223  .  .  .  Type: *ast.FuncType {
   224  .  .  .  .  Func: source.go:30:1
   225  .  .  .  .  Params: *ast.FieldList {
   226  .  .  .  .  .  Opening: source.go:30:26
   227  .  .  .  .  .  List: []*ast.Field (len = 1) {
   228  .  .  .  .  .  .  0: *ast.Field {
   229  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   230  .  .  .  .  .  .  .  .  0: *ast.Ident {
   231  .  .  .  .  .  .  .  .  .  NamePos: source.go:30:27
   232  .  .  .  .  .  .  .  .  .  Name: "stub"
   233  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   234  .  .  .  .  .  .  .  .  .  .  Kind: var
   235  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   236  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 228)
   237  .  .  .  .  .  .  .  .  .  }
   238  .  .  .  .  .  .  .  .  }
   239  .  .  .  .  .  .  .  }
   240  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   241  .  .  .  .  .  .  .  .  X: *ast.Ident {
   242  .  .  .  .  .  .  .  .  .  NamePos: source.go:30:32
   243  .  .  .  .  .  .  .  .  .  Name: "shim"
   244  .  .  .  .  .  .  .  .  }
   245  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   246  .  .  .  .  .  .  .  .  .  NamePos: source.go:30:37
   247  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
   248  .  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  }
   251  .  .  .  .  .  }
   252  .  .  .  .  .  Closing: source.go:30:59
   253  .  .  .  .  }
   254  .  .  .  .  Results: *ast.FieldList {
   255  .  .  .  .  .  Opening: -
   256  .  .  .  .  .  List: []*ast.Field (len = 1) {
   257  .  .  .  .  .  .  0: *ast.Field {
   258  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   259  .  .  .  .  .  .  .  .  X: *ast.Ident {
   260  .  .  .  .  .  .  .  .  .  NamePos: source.go:30:61
   261  .  .  .  .  .  .  .  .  .  Name: "pb"
   262  .  .  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   264  .  .  .  .  .  .  .  .  .  NamePos: source.go:30:64
   265  .  .  .  .  .  .  .  .  .  Name: "Response"
   266  .  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  }
   268  .  .  .  .  .  .  }
   269  .  .  .  .  .  }
   270  .  .  .  .  .  Closing: -
   271  .  .  .  .  }
   272  .  .  .  }
   273  .  .  .  Body: *ast.BlockStmt {
   274  .  .  .  .  Lbrace: source.go:30:73
   275  .  .  .  .  List: []ast.Stmt (len = 1) {
   276  .  .  .  .  .  0: *ast.ReturnStmt {
   277  .  .  .  .  .  .  Return: source.go:31:2
   278  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   279  .  .  .  .  .  .  .  0: *ast.CallExpr {
   280  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   281  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   282  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:31:9
   283  .  .  .  .  .  .  .  .  .  .  Name: "shim"
   284  .  .  .  .  .  .  .  .  .  }
   285  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   286  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:31:14
   287  .  .  .  .  .  .  .  .  .  .  Name: "Success"
   288  .  .  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  .  }
   290  .  .  .  .  .  .  .  .  Lparen: source.go:31:21
   291  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   292  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   293  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:31:22
   294  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   295  .  .  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  .  .  }
   297  .  .  .  .  .  .  .  .  Ellipsis: -
   298  .  .  .  .  .  .  .  .  Rparen: source.go:31:25
   299  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  }
   301  .  .  .  .  .  }
   302  .  .  .  .  }
   303  .  .  .  .  Rbrace: source.go:32:1
   304  .  .  .  }
   305  .  .  }
   306  .  .  4: *ast.FuncDecl {
   307  .  .  .  Recv: *ast.FieldList {
   308  .  .  .  .  Opening: source.go:36:6
   309  .  .  .  .  List: []*ast.Field (len = 1) {
   310  .  .  .  .  .  0: *ast.Field {
   311  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   312  .  .  .  .  .  .  .  0: *ast.Ident {
   313  .  .  .  .  .  .  .  .  NamePos: source.go:36:7
   314  .  .  .  .  .  .  .  .  Name: "t"
   315  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   316  .  .  .  .  .  .  .  .  .  Kind: var
   317  .  .  .  .  .  .  .  .  .  Name: "t"
   318  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 310)
   319  .  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  Type: *ast.StarExpr {
   323  .  .  .  .  .  .  .  Star: source.go:36:9
   324  .  .  .  .  .  .  .  X: *ast.Ident {
   325  .  .  .  .  .  .  .  .  NamePos: source.go:36:10
   326  .  .  .  .  .  .  .  .  Name: "KVExecutor"
   327  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
   328  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  }
   330  .  .  .  .  .  }
   331  .  .  .  .  }
   332  .  .  .  .  Closing: source.go:36:20
   333  .  .  .  }
   334  .  .  .  Name: *ast.Ident {
   335  .  .  .  .  NamePos: source.go:36:22
   336  .  .  .  .  Name: "Invoke"
   337  .  .  .  }
   338  .  .  .  Type: *ast.FuncType {
   339  .  .  .  .  Func: source.go:36:1
   340  .  .  .  .  Params: *ast.FieldList {
   341  .  .  .  .  .  Opening: source.go:36:28
   342  .  .  .  .  .  List: []*ast.Field (len = 1) {
   343  .  .  .  .  .  .  0: *ast.Field {
   344  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   345  .  .  .  .  .  .  .  .  0: *ast.Ident {
   346  .  .  .  .  .  .  .  .  .  NamePos: source.go:36:29
   347  .  .  .  .  .  .  .  .  .  Name: "stub"
   348  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   349  .  .  .  .  .  .  .  .  .  .  Kind: var
   350  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   351  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 343)
   352  .  .  .  .  .  .  .  .  .  }
   353  .  .  .  .  .  .  .  .  }
   354  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   356  .  .  .  .  .  .  .  .  X: *ast.Ident {
   357  .  .  .  .  .  .  .  .  .  NamePos: source.go:36:34
   358  .  .  .  .  .  .  .  .  .  Name: "shim"
   359  .  .  .  .  .  .  .  .  }
   360  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   361  .  .  .  .  .  .  .  .  .  NamePos: source.go:36:39
   362  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
   363  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  }
   365  .  .  .  .  .  .  }
   366  .  .  .  .  .  }
   367  .  .  .  .  .  Closing: source.go:36:61
   368  .  .  .  .  }
   369  .  .  .  .  Results: *ast.FieldList {
   370  .  .  .  .  .  Opening: -
   371  .  .  .  .  .  List: []*ast.Field (len = 1) {
   372  .  .  .  .  .  .  0: *ast.Field {
   373  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   374  .  .  .  .  .  .  .  .  X: *ast.Ident {
   375  .  .  .  .  .  .  .  .  .  NamePos: source.go:36:63
   376  .  .  .  .  .  .  .  .  .  Name: "pb"
   377  .  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   379  .  .  .  .  .  .  .  .  .  NamePos: source.go:36:66
   380  .  .  .  .  .  .  .  .  .  Name: "Response"
   381  .  .  .  .  .  .  .  .  }
   382  .  .  .  .  .  .  .  }
   383  .  .  .  .  .  .  }
   384  .  .  .  .  .  }
   385  .  .  .  .  .  Closing: -
   386  .  .  .  .  }
   387  .  .  .  }
   388  .  .  .  Body: *ast.BlockStmt {
   389  .  .  .  .  Lbrace: source.go:36:75
   390  .  .  .  .  List: []ast.Stmt (len = 3) {
   391  .  .  .  .  .  0: *ast.AssignStmt {
   392  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   393  .  .  .  .  .  .  .  0: *ast.Ident {
   394  .  .  .  .  .  .  .  .  NamePos: source.go:37:2
   395  .  .  .  .  .  .  .  .  Name: "function"
   396  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   397  .  .  .  .  .  .  .  .  .  Kind: var
   398  .  .  .  .  .  .  .  .  .  Name: "function"
   399  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 391)
   400  .  .  .  .  .  .  .  .  }
   401  .  .  .  .  .  .  .  }
   402  .  .  .  .  .  .  .  1: *ast.Ident {
   403  .  .  .  .  .  .  .  .  NamePos: source.go:37:12
   404  .  .  .  .  .  .  .  .  Name: "args"
   405  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   406  .  .  .  .  .  .  .  .  .  Kind: var
   407  .  .  .  .  .  .  .  .  .  Name: "args"
   408  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 391)
   409  .  .  .  .  .  .  .  .  }
   410  .  .  .  .  .  .  .  }
   411  .  .  .  .  .  .  }
   412  .  .  .  .  .  .  TokPos: source.go:37:17
   413  .  .  .  .  .  .  Tok: :=
   414  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   415  .  .  .  .  .  .  .  0: *ast.CallExpr {
   416  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   417  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   418  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:37:20
   419  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   420  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 348)
   421  .  .  .  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   423  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:37:25
   424  .  .  .  .  .  .  .  .  .  .  Name: "GetFunctionAndParameters"
   425  .  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  }
   427  .  .  .  .  .  .  .  .  Lparen: source.go:37:49
   428  .  .  .  .  .  .  .  .  Ellipsis: -
   429  .  .  .  .  .  .  .  .  Rparen: source.go:37:50
   430  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  }
   432  .  .  .  .  .  }
   433  .  .  .  .  .  1: *ast.ExprStmt {
   434  .  .  .  .  .  .  X: *ast.CallExpr {
   435  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   436  .  .  .  .  .  .  .  .  X: *ast.Ident {
   437  .  .  .  .  .  .  .  .  .  NamePos: source.go:38:2
   438  .  .  .  .  .  .  .  .  .  Name: "fmt"
   439  .  .  .  .  .  .  .  .  }
   440  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   441  .  .  .  .  .  .  .  .  .  NamePos: source.go:38:6
   442  .  .  .  .  .  .  .  .  .  Name: "Println"
   443  .  .  .  .  .  .  .  .  }
   444  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  .  Lparen: source.go:38:13
   446  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   447  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   448  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   449  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:38:14
   450  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   451  .  .  .  .  .  .  .  .  .  .  Value: "\"invoke is running \""
   452  .  .  .  .  .  .  .  .  .  }
   453  .  .  .  .  .  .  .  .  .  OpPos: source.go:38:35
   454  .  .  .  .  .  .  .  .  .  Op: +
   455  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   456  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:38:37
   457  .  .  .  .  .  .  .  .  .  .  Name: "function"
   458  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   459  .  .  .  .  .  .  .  .  .  }
   460  .  .  .  .  .  .  .  .  }
   461  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  .  Ellipsis: -
   463  .  .  .  .  .  .  .  Rparen: source.go:38:45
   464  .  .  .  .  .  .  }
   465  .  .  .  .  .  }
   466  .  .  .  .  .  2: *ast.SwitchStmt {
   467  .  .  .  .  .  .  Switch: source.go:40:2
   468  .  .  .  .  .  .  Tag: *ast.Ident {
   469  .  .  .  .  .  .  .  NamePos: source.go:40:9
   470  .  .  .  .  .  .  .  Name: "function"
   471  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   472  .  .  .  .  .  .  }
   473  .  .  .  .  .  .  Body: *ast.BlockStmt {
   474  .  .  .  .  .  .  .  Lbrace: source.go:40:18
   475  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   476  .  .  .  .  .  .  .  .  0: *ast.CaseClause {
   477  .  .  .  .  .  .  .  .  .  Case: source.go:41:2
   478  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   479  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   480  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:41:7
   481  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   482  .  .  .  .  .  .  .  .  .  .  .  Value: "\"readWriteKVs\""
   483  .  .  .  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  .  .  .  }
   485  .  .  .  .  .  .  .  .  .  Colon: source.go:41:21
   486  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   487  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   488  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:42:3
   489  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   490  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   491  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   492  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   493  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:42:10
   494  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 315)
   496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:42:12
   499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "readWriteKVs"
   500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   501  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:42:24
   503  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:42:25
   506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 348)
   508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:42:31
   511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 405)
   513  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   516  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:42:35
   517  .  .  .  .  .  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  .  .  .  .  }
   520  .  .  .  .  .  .  .  .  .  }
   521  .  .  .  .  .  .  .  .  }
   522  .  .  .  .  .  .  .  .  1: *ast.CaseClause {
   523  .  .  .  .  .  .  .  .  .  Case: source.go:43:2
   524  .  .  .  .  .  .  .  .  .  Colon: source.go:43:9
   525  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 2) {
   526  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   527  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   528  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   529  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:45:3
   531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   532  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:45:7
   535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   536  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   537  .  .  .  .  .  .  .  .  .  .  .  .  }
   538  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:45:14
   539  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:45:15
   543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"invoke did not find func: \""
   545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:45:44
   547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
   548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:45:46
   550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "function"
   551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 396)
   552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   556  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:45:54
   557  .  .  .  .  .  .  .  .  .  .  .  }
   558  .  .  .  .  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
   560  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:46:3
   561  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   562  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   563  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:46:10
   566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
   567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:46:15
   570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
   571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   572  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   573  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:46:20
   574  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   575  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:46:21
   577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Received unknown function invocation\""
   579  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   580  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   582  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:46:59
   583  .  .  .  .  .  .  .  .  .  .  .  .  }
   584  .  .  .  .  .  .  .  .  .  .  .  }
   585  .  .  .  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  .  Rbrace: source.go:47:2
   590  .  .  .  .  .  .  }
   591  .  .  .  .  .  }
   592  .  .  .  .  }
   593  .  .  .  .  Rbrace: source.go:48:1
   594  .  .  .  }
   595  .  .  }
   596  .  .  5: *ast.FuncDecl {
   597  .  .  .  Recv: *ast.FieldList {
   598  .  .  .  .  Opening: source.go:51:6
   599  .  .  .  .  List: []*ast.Field (len = 1) {
   600  .  .  .  .  .  0: *ast.Field {
   601  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   602  .  .  .  .  .  .  .  0: *ast.Ident {
   603  .  .  .  .  .  .  .  .  NamePos: source.go:51:7
   604  .  .  .  .  .  .  .  .  Name: "t"
   605  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   606  .  .  .  .  .  .  .  .  .  Kind: var
   607  .  .  .  .  .  .  .  .  .  Name: "t"
   608  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 600)
   609  .  .  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  .  }
   611  .  .  .  .  .  .  }
   612  .  .  .  .  .  .  Type: *ast.StarExpr {
   613  .  .  .  .  .  .  .  Star: source.go:51:9
   614  .  .  .  .  .  .  .  X: *ast.Ident {
   615  .  .  .  .  .  .  .  .  NamePos: source.go:51:10
   616  .  .  .  .  .  .  .  .  Name: "KVExecutor"
   617  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
   618  .  .  .  .  .  .  .  }
   619  .  .  .  .  .  .  }
   620  .  .  .  .  .  }
   621  .  .  .  .  }
   622  .  .  .  .  Closing: source.go:51:20
   623  .  .  .  }
   624  .  .  .  Name: *ast.Ident {
   625  .  .  .  .  NamePos: source.go:51:22
   626  .  .  .  .  Name: "readWriteKVs"
   627  .  .  .  }
   628  .  .  .  Type: *ast.FuncType {
   629  .  .  .  .  Func: source.go:51:1
   630  .  .  .  .  Params: *ast.FieldList {
   631  .  .  .  .  .  Opening: source.go:51:34
   632  .  .  .  .  .  List: []*ast.Field (len = 2) {
   633  .  .  .  .  .  .  0: *ast.Field {
   634  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   635  .  .  .  .  .  .  .  .  0: *ast.Ident {
   636  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:35
   637  .  .  .  .  .  .  .  .  .  Name: "stub"
   638  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   639  .  .  .  .  .  .  .  .  .  .  Kind: var
   640  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   641  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 633)
   642  .  .  .  .  .  .  .  .  .  }
   643  .  .  .  .  .  .  .  .  }
   644  .  .  .  .  .  .  .  }
   645  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   646  .  .  .  .  .  .  .  .  X: *ast.Ident {
   647  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:40
   648  .  .  .  .  .  .  .  .  .  Name: "shim"
   649  .  .  .  .  .  .  .  .  }
   650  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   651  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:45
   652  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
   653  .  .  .  .  .  .  .  .  }
   654  .  .  .  .  .  .  .  }
   655  .  .  .  .  .  .  }
   656  .  .  .  .  .  .  1: *ast.Field {
   657  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   658  .  .  .  .  .  .  .  .  0: *ast.Ident {
   659  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:69
   660  .  .  .  .  .  .  .  .  .  Name: "args"
   661  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   662  .  .  .  .  .  .  .  .  .  .  Kind: var
   663  .  .  .  .  .  .  .  .  .  .  Name: "args"
   664  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 656)
   665  .  .  .  .  .  .  .  .  .  }
   666  .  .  .  .  .  .  .  .  }
   667  .  .  .  .  .  .  .  }
   668  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   669  .  .  .  .  .  .  .  .  Lbrack: source.go:51:74
   670  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   671  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:76
   672  .  .  .  .  .  .  .  .  .  Name: "string"
   673  .  .  .  .  .  .  .  .  }
   674  .  .  .  .  .  .  .  }
   675  .  .  .  .  .  .  }
   676  .  .  .  .  .  }
   677  .  .  .  .  .  Closing: source.go:51:82
   678  .  .  .  .  }
   679  .  .  .  .  Results: *ast.FieldList {
   680  .  .  .  .  .  Opening: -
   681  .  .  .  .  .  List: []*ast.Field (len = 1) {
   682  .  .  .  .  .  .  0: *ast.Field {
   683  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   684  .  .  .  .  .  .  .  .  X: *ast.Ident {
   685  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:84
   686  .  .  .  .  .  .  .  .  .  Name: "pb"
   687  .  .  .  .  .  .  .  .  }
   688  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   689  .  .  .  .  .  .  .  .  .  NamePos: source.go:51:87
   690  .  .  .  .  .  .  .  .  .  Name: "Response"
   691  .  .  .  .  .  .  .  .  }
   692  .  .  .  .  .  .  .  }
   693  .  .  .  .  .  .  }
   694  .  .  .  .  .  }
   695  .  .  .  .  .  Closing: -
   696  .  .  .  .  }
   697  .  .  .  }
   698  .  .  .  Body: *ast.BlockStmt {
   699  .  .  .  .  Lbrace: source.go:51:96
   700  .  .  .  .  List: []ast.Stmt (len = 12) {
   701  .  .  .  .  .  0: *ast.IfStmt {
   702  .  .  .  .  .  .  If: source.go:52:2
   703  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   704  .  .  .  .  .  .  .  X: *ast.CallExpr {
   705  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   706  .  .  .  .  .  .  .  .  .  NamePos: source.go:52:5
   707  .  .  .  .  .  .  .  .  .  Name: "len"
   708  .  .  .  .  .  .  .  .  }
   709  .  .  .  .  .  .  .  .  Lparen: source.go:52:8
   710  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   711  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   712  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:52:9
   713  .  .  .  .  .  .  .  .  .  .  Name: "args"
   714  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 661)
   715  .  .  .  .  .  .  .  .  .  }
   716  .  .  .  .  .  .  .  .  }
   717  .  .  .  .  .  .  .  .  Ellipsis: -
   718  .  .  .  .  .  .  .  .  Rparen: source.go:52:13
   719  .  .  .  .  .  .  .  }
   720  .  .  .  .  .  .  .  OpPos: source.go:52:15
   721  .  .  .  .  .  .  .  Op: !=
   722  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   723  .  .  .  .  .  .  .  .  ValuePos: source.go:52:18
   724  .  .  .  .  .  .  .  .  Kind: INT
   725  .  .  .  .  .  .  .  .  Value: "2"
   726  .  .  .  .  .  .  .  }
   727  .  .  .  .  .  .  }
   728  .  .  .  .  .  .  Body: *ast.BlockStmt {
   729  .  .  .  .  .  .  .  Lbrace: source.go:52:20
   730  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   731  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   732  .  .  .  .  .  .  .  .  .  Return: source.go:53:3
   733  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   734  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   735  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   736  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   737  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:53:10
   738  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
   739  .  .  .  .  .  .  .  .  .  .  .  .  }
   740  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   741  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:53:15
   742  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
   743  .  .  .  .  .  .  .  .  .  .  .  .  }
   744  .  .  .  .  .  .  .  .  .  .  .  }
   745  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:53:20
   746  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   747  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   748  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:53:21
   749  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   750  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting 2 (readInputs and writeInputs)\""
   751  .  .  .  .  .  .  .  .  .  .  .  .  }
   752  .  .  .  .  .  .  .  .  .  .  .  }
   753  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   754  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:53:94
   755  .  .  .  .  .  .  .  .  .  .  }
   756  .  .  .  .  .  .  .  .  .  }
   757  .  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  .  }
   759  .  .  .  .  .  .  .  Rbrace: source.go:54:2
   760  .  .  .  .  .  .  }
   761  .  .  .  .  .  }
   762  .  .  .  .  .  1: *ast.AssignStmt {
   763  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   764  .  .  .  .  .  .  .  0: *ast.Ident {
   765  .  .  .  .  .  .  .  .  NamePos: source.go:55:2
   766  .  .  .  .  .  .  .  .  Name: "readInputs"
   767  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   768  .  .  .  .  .  .  .  .  .  Kind: var
   769  .  .  .  .  .  .  .  .  .  Name: "readInputs"
   770  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 762)
   771  .  .  .  .  .  .  .  .  }
   772  .  .  .  .  .  .  .  }
   773  .  .  .  .  .  .  .  1: *ast.Ident {
   774  .  .  .  .  .  .  .  .  NamePos: source.go:55:14
   775  .  .  .  .  .  .  .  .  Name: "err"
   776  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   777  .  .  .  .  .  .  .  .  .  Kind: var
   778  .  .  .  .  .  .  .  .  .  Name: "err"
   779  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 762)
   780  .  .  .  .  .  .  .  .  }
   781  .  .  .  .  .  .  .  }
   782  .  .  .  .  .  .  }
   783  .  .  .  .  .  .  TokPos: source.go:55:18
   784  .  .  .  .  .  .  Tok: :=
   785  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   786  .  .  .  .  .  .  .  0: *ast.CallExpr {
   787  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   788  .  .  .  .  .  .  .  .  .  NamePos: source.go:55:21
   789  .  .  .  .  .  .  .  .  .  Name: "parseArg"
   790  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   791  .  .  .  .  .  .  .  .  .  .  Kind: func
   792  .  .  .  .  .  .  .  .  .  .  Name: "parseArg"
   793  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
   794  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   795  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:97:6
   796  .  .  .  .  .  .  .  .  .  .  .  .  Name: "parseArg"
   797  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 790)
   798  .  .  .  .  .  .  .  .  .  .  .  }
   799  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   800  .  .  .  .  .  .  .  .  .  .  .  .  Func: source.go:97:1
   801  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   802  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:97:14
   803  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:97:15
   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputParam"
   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputParam"
   812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 804)
   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:97:26
   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:97:32
   823  .  .  .  .  .  .  .  .  .  .  .  .  }
   824  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   825  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:97:34
   826  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:97:35
   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: source.go:97:37
   832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:97:38
   834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "KVData"
   835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:97:46
   843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "error"
   844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   846  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   847  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:97:51
   848  .  .  .  .  .  .  .  .  .  .  .  .  }
   849  .  .  .  .  .  .  .  .  .  .  .  }
   850  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   851  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:97:53
   852  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 6) {
   853  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:98:2
   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "kvdata"
   858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "kvdata"
   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 853)
   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:98:9
   866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:98:12
   871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "make"
   872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:98:16
   874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:98:17
   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: source.go:98:19
   879  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   880  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:98:20
   881  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "KVData"
   882  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
   883  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   884  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:98:28
   888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   891  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   892  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   893  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:98:29
   894  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   895  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   896  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   897  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.AssignStmt {
   898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:99:2
   901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputBytes"
   902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   903  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   904  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputBytes"
   905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 897)
   906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   909  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:99:14
   910  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 897)
   915  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   916  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   917  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   918  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:99:18
   919  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   920  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   921  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   922  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   923  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   924  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   925  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:99:21
   926  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "base64"
   927  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   928  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   929  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:99:28
   930  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "StdEncoding"
   931  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   932  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   933  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   934  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:99:40
   935  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DecodeString"
   936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   938  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:99:52
   939  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   940  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:99:53
   942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputParam"
   943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 809)
   944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:99:63
   948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   950  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   951  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {
   952  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: source.go:100:2
   953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:100:5
   956  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputParam"
   957  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 809)
   958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:100:16
   960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==
   961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:100:19
   963  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:100:22
   969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:101:3
   972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
   973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:101:10
   975  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "kvdata"
   976  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 858)
   977  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   978  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   979  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:101:18
   980  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   981  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   982  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   983  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:102:2
   986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   987  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   988  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.IfStmt {
   989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: source.go:103:2
   990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:103:5
   993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 911)
   995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:103:9
   997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:103:12
  1000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:103:16
  1005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:104:3
  1008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
  1009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:104:10
  1011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  1014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:104:15
  1017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "errors"
  1018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:104:22
  1021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WithMessagef"
  1022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:104:34
  1025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:104:35
  1028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1029  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 911)
  1030  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:104:40
  1033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"failed to base64 decode input %s\""
  1035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  1037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:104:76
  1038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputParam"
  1039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 809)
  1040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:104:86
  1044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:105:2
  1049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1050  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1051  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.IfStmt {
  1052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: source.go:106:2
  1053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: *ast.AssignStmt {
  1054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:5
  1057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 911)
  1059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:106:9
  1062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
  1063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:11
  1068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "json"
  1069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:16
  1072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Unmarshal"
  1073  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1074  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1075  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:106:25
  1076  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1077  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1078  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:26
  1079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputBytes"
  1080  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 902)
  1081  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1082  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  1083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:106:38
  1084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: &
  1085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:39
  1087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "kvdata"
  1088  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 858)
  1089  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:106:45
  1094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:48
  1100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 911)
  1102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:106:52
  1104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  1106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:106:55
  1107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:106:59
  1112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:107:3
  1115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
  1116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:107:10
  1118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  1121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:107:15
  1124  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "errors"
  1125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:107:22
  1128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WithMessagef"
  1129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:107:34
  1132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:107:35
  1135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 911)
  1137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:107:40
  1140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"failed to unmarshal kvdata %s\""
  1142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.CallExpr {
  1144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:107:73
  1146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  1147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:107:79
  1149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:107:80
  1152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "inputBytes"
  1153  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 902)
  1154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1157  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:107:90
  1158  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1159  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1160  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1161  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:107:91
  1162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1165  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1166  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:108:2
  1167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1168  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1169  .  .  .  .  .  .  .  .  .  .  .  .  .  5: *ast.ReturnStmt {
  1170  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:109:2
  1171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
  1172  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1173  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:109:9
  1174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "kvdata"
  1175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 858)
  1176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:109:17
  1179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1182  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1183  .  .  .  .  .  .  .  .  .  .  .  .  }
  1184  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:110:1
  1185  .  .  .  .  .  .  .  .  .  .  .  }
  1186  .  .  .  .  .  .  .  .  .  .  }
  1187  .  .  .  .  .  .  .  .  .  }
  1188  .  .  .  .  .  .  .  .  }
  1189  .  .  .  .  .  .  .  .  Lparen: source.go:55:29
  1190  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1191  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  1192  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1193  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:55:30
  1194  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1195  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 661)
  1196  .  .  .  .  .  .  .  .  .  .  }
  1197  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:55:34
  1198  .  .  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  1199  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:55:35
  1200  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
  1201  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
  1202  .  .  .  .  .  .  .  .  .  .  }
  1203  .  .  .  .  .  .  .  .  .  .  Rbrack: source.go:55:36
  1204  .  .  .  .  .  .  .  .  .  }
  1205  .  .  .  .  .  .  .  .  }
  1206  .  .  .  .  .  .  .  .  Ellipsis: -
  1207  .  .  .  .  .  .  .  .  Rparen: source.go:55:37
  1208  .  .  .  .  .  .  .  }
  1209  .  .  .  .  .  .  }
  1210  .  .  .  .  .  }
  1211  .  .  .  .  .  2: *ast.IfStmt {
  1212  .  .  .  .  .  .  If: source.go:56:2
  1213  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1214  .  .  .  .  .  .  .  X: *ast.Ident {
  1215  .  .  .  .  .  .  .  .  NamePos: source.go:56:5
  1216  .  .  .  .  .  .  .  .  Name: "err"
  1217  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1218  .  .  .  .  .  .  .  }
  1219  .  .  .  .  .  .  .  OpPos: source.go:56:9
  1220  .  .  .  .  .  .  .  Op: !=
  1221  .  .  .  .  .  .  .  Y: *ast.Ident {
  1222  .  .  .  .  .  .  .  .  NamePos: source.go:56:12
  1223  .  .  .  .  .  .  .  .  Name: "nil"
  1224  .  .  .  .  .  .  .  }
  1225  .  .  .  .  .  .  }
  1226  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1227  .  .  .  .  .  .  .  Lbrace: source.go:56:16
  1228  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1229  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1230  .  .  .  .  .  .  .  .  .  Return: source.go:57:3
  1231  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1232  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1233  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1234  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1235  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:57:10
  1236  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1237  .  .  .  .  .  .  .  .  .  .  .  .  }
  1238  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1239  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:57:15
  1240  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1241  .  .  .  .  .  .  .  .  .  .  .  .  }
  1242  .  .  .  .  .  .  .  .  .  .  .  }
  1243  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:57:20
  1244  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1245  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1246  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:57:21
  1249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:57:25
  1254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1256  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1257  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:57:30
  1258  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1259  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:57:31
  1260  .  .  .  .  .  .  .  .  .  .  .  .  }
  1261  .  .  .  .  .  .  .  .  .  .  .  }
  1262  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1263  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:57:32
  1264  .  .  .  .  .  .  .  .  .  .  }
  1265  .  .  .  .  .  .  .  .  .  }
  1266  .  .  .  .  .  .  .  .  }
  1267  .  .  .  .  .  .  .  }
  1268  .  .  .  .  .  .  .  Rbrace: source.go:58:2
  1269  .  .  .  .  .  .  }
  1270  .  .  .  .  .  }
  1271  .  .  .  .  .  3: *ast.AssignStmt {
  1272  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  1273  .  .  .  .  .  .  .  0: *ast.Ident {
  1274  .  .  .  .  .  .  .  .  NamePos: source.go:59:2
  1275  .  .  .  .  .  .  .  .  Name: "writeInputs"
  1276  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1277  .  .  .  .  .  .  .  .  .  Kind: var
  1278  .  .  .  .  .  .  .  .  .  Name: "writeInputs"
  1279  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1271)
  1280  .  .  .  .  .  .  .  .  }
  1281  .  .  .  .  .  .  .  }
  1282  .  .  .  .  .  .  .  1: *ast.Ident {
  1283  .  .  .  .  .  .  .  .  NamePos: source.go:59:15
  1284  .  .  .  .  .  .  .  .  Name: "err"
  1285  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1286  .  .  .  .  .  .  .  }
  1287  .  .  .  .  .  .  }
  1288  .  .  .  .  .  .  TokPos: source.go:59:19
  1289  .  .  .  .  .  .  Tok: :=
  1290  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1291  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1292  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1293  .  .  .  .  .  .  .  .  .  NamePos: source.go:59:22
  1294  .  .  .  .  .  .  .  .  .  Name: "parseArg"
  1295  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 790)
  1296  .  .  .  .  .  .  .  .  }
  1297  .  .  .  .  .  .  .  .  Lparen: source.go:59:30
  1298  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1299  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  1300  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1301  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:59:31
  1302  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1303  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 661)
  1304  .  .  .  .  .  .  .  .  .  .  }
  1305  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:59:35
  1306  .  .  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  1307  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:59:36
  1308  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
  1309  .  .  .  .  .  .  .  .  .  .  .  Value: "1"
  1310  .  .  .  .  .  .  .  .  .  .  }
  1311  .  .  .  .  .  .  .  .  .  .  Rbrack: source.go:59:37
  1312  .  .  .  .  .  .  .  .  .  }
  1313  .  .  .  .  .  .  .  .  }
  1314  .  .  .  .  .  .  .  .  Ellipsis: -
  1315  .  .  .  .  .  .  .  .  Rparen: source.go:59:38
  1316  .  .  .  .  .  .  .  }
  1317  .  .  .  .  .  .  }
  1318  .  .  .  .  .  }
  1319  .  .  .  .  .  4: *ast.IfStmt {
  1320  .  .  .  .  .  .  If: source.go:60:2
  1321  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1322  .  .  .  .  .  .  .  X: *ast.Ident {
  1323  .  .  .  .  .  .  .  .  NamePos: source.go:60:5
  1324  .  .  .  .  .  .  .  .  Name: "err"
  1325  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1326  .  .  .  .  .  .  .  }
  1327  .  .  .  .  .  .  .  OpPos: source.go:60:9
  1328  .  .  .  .  .  .  .  Op: !=
  1329  .  .  .  .  .  .  .  Y: *ast.Ident {
  1330  .  .  .  .  .  .  .  .  NamePos: source.go:60:12
  1331  .  .  .  .  .  .  .  .  Name: "nil"
  1332  .  .  .  .  .  .  .  }
  1333  .  .  .  .  .  .  }
  1334  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1335  .  .  .  .  .  .  .  Lbrace: source.go:60:16
  1336  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1337  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1338  .  .  .  .  .  .  .  .  .  Return: source.go:61:3
  1339  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1340  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1341  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1342  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1343  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:61:10
  1344  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1345  .  .  .  .  .  .  .  .  .  .  .  .  }
  1346  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1347  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:61:15
  1348  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1349  .  .  .  .  .  .  .  .  .  .  .  .  }
  1350  .  .  .  .  .  .  .  .  .  .  .  }
  1351  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:61:20
  1352  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1353  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1354  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1356  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:61:21
  1357  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1358  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1359  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1360  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1361  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:61:25
  1362  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1363  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1364  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1365  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:61:30
  1366  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1367  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:61:31
  1368  .  .  .  .  .  .  .  .  .  .  .  .  }
  1369  .  .  .  .  .  .  .  .  .  .  .  }
  1370  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1371  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:61:32
  1372  .  .  .  .  .  .  .  .  .  .  }
  1373  .  .  .  .  .  .  .  .  .  }
  1374  .  .  .  .  .  .  .  .  }
  1375  .  .  .  .  .  .  .  }
  1376  .  .  .  .  .  .  .  Rbrace: source.go:62:2
  1377  .  .  .  .  .  .  }
  1378  .  .  .  .  .  }
  1379  .  .  .  .  .  5: *ast.AssignStmt {
  1380  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1381  .  .  .  .  .  .  .  0: *ast.Ident {
  1382  .  .  .  .  .  .  .  .  NamePos: source.go:64:2
  1383  .  .  .  .  .  .  .  .  Name: "results"
  1384  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1385  .  .  .  .  .  .  .  .  .  Kind: var
  1386  .  .  .  .  .  .  .  .  .  Name: "results"
  1387  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1379)
  1388  .  .  .  .  .  .  .  .  }
  1389  .  .  .  .  .  .  .  }
  1390  .  .  .  .  .  .  }
  1391  .  .  .  .  .  .  TokPos: source.go:64:10
  1392  .  .  .  .  .  .  Tok: :=
  1393  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1394  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1395  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1396  .  .  .  .  .  .  .  .  .  NamePos: source.go:64:13
  1397  .  .  .  .  .  .  .  .  .  Name: "make"
  1398  .  .  .  .  .  .  .  .  }
  1399  .  .  .  .  .  .  .  .  Lparen: source.go:64:17
  1400  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1401  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
  1402  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:64:18
  1403  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  1404  .  .  .  .  .  .  .  .  .  .  .  Star: source.go:64:20
  1405  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1406  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:64:21
  1407  .  .  .  .  .  .  .  .  .  .  .  .  Name: "KVData"
  1408  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
  1409  .  .  .  .  .  .  .  .  .  .  .  }
  1410  .  .  .  .  .  .  .  .  .  .  }
  1411  .  .  .  .  .  .  .  .  .  }
  1412  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1413  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:64:29
  1414  .  .  .  .  .  .  .  .  .  .  Kind: INT
  1415  .  .  .  .  .  .  .  .  .  .  Value: "0"
  1416  .  .  .  .  .  .  .  .  .  }
  1417  .  .  .  .  .  .  .  .  }
  1418  .  .  .  .  .  .  .  .  Ellipsis: -
  1419  .  .  .  .  .  .  .  .  Rparen: source.go:64:30
  1420  .  .  .  .  .  .  .  }
  1421  .  .  .  .  .  .  }
  1422  .  .  .  .  .  }
  1423  .  .  .  .  .  6: *ast.DeclStmt {
  1424  .  .  .  .  .  .  Decl: *ast.GenDecl {
  1425  .  .  .  .  .  .  .  TokPos: source.go:65:2
  1426  .  .  .  .  .  .  .  Tok: var
  1427  .  .  .  .  .  .  .  Lparen: -
  1428  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  1429  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  1430  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1431  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1432  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:65:6
  1433  .  .  .  .  .  .  .  .  .  .  .  Name: "val"
  1434  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1435  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1436  .  .  .  .  .  .  .  .  .  .  .  .  Name: "val"
  1437  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1429)
  1438  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  1439  .  .  .  .  .  .  .  .  .  .  .  }
  1440  .  .  .  .  .  .  .  .  .  .  }
  1441  .  .  .  .  .  .  .  .  .  }
  1442  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1443  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:65:10
  1444  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  1445  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:65:12
  1446  .  .  .  .  .  .  .  .  .  .  .  Name: "byte"
  1447  .  .  .  .  .  .  .  .  .  .  }
  1448  .  .  .  .  .  .  .  .  .  }
  1449  .  .  .  .  .  .  .  .  }
  1450  .  .  .  .  .  .  .  }
  1451  .  .  .  .  .  .  .  Rparen: -
  1452  .  .  .  .  .  .  }
  1453  .  .  .  .  .  }
  1454  .  .  .  .  .  7: *ast.RangeStmt {
  1455  .  .  .  .  .  .  For: source.go:66:2
  1456  .  .  .  .  .  .  Key: *ast.Ident {
  1457  .  .  .  .  .  .  .  NamePos: source.go:66:6
  1458  .  .  .  .  .  .  .  Name: "_"
  1459  .  .  .  .  .  .  .  Obj: *ast.Object {
  1460  .  .  .  .  .  .  .  .  Kind: var
  1461  .  .  .  .  .  .  .  .  Name: "_"
  1462  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  1463  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  1464  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 1456)
  1465  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1466  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:66:9
  1467  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1468  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1469  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1470  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1471  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1462)
  1472  .  .  .  .  .  .  .  .  .  .  .  }
  1473  .  .  .  .  .  .  .  .  .  .  }
  1474  .  .  .  .  .  .  .  .  .  }
  1475  .  .  .  .  .  .  .  .  .  TokPos: source.go:66:15
  1476  .  .  .  .  .  .  .  .  .  Tok: :=
  1477  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1478  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  1479  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  1480  .  .  .  .  .  .  .  .  .  .  .  Op: range
  1481  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1482  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:66:24
  1483  .  .  .  .  .  .  .  .  .  .  .  .  Name: "readInputs"
  1484  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 767)
  1485  .  .  .  .  .  .  .  .  .  .  .  }
  1486  .  .  .  .  .  .  .  .  .  .  }
  1487  .  .  .  .  .  .  .  .  .  }
  1488  .  .  .  .  .  .  .  .  }
  1489  .  .  .  .  .  .  .  }
  1490  .  .  .  .  .  .  }
  1491  .  .  .  .  .  .  Value: *(obj @ 1465)
  1492  .  .  .  .  .  .  TokPos: source.go:66:15
  1493  .  .  .  .  .  .  Tok: :=
  1494  .  .  .  .  .  .  Range: source.go:66:18
  1495  .  .  .  .  .  .  X: *(obj @ 1481)
  1496  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1497  .  .  .  .  .  .  .  Lbrace: source.go:66:35
  1498  .  .  .  .  .  .  .  List: []ast.Stmt (len = 4) {
  1499  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
  1500  .  .  .  .  .  .  .  .  .  If: source.go:67:3
  1501  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1502  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1503  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1504  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:67:6
  1505  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1506  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1507  .  .  .  .  .  .  .  .  .  .  .  }
  1508  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1509  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:67:12
  1510  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
  1511  .  .  .  .  .  .  .  .  .  .  .  }
  1512  .  .  .  .  .  .  .  .  .  .  }
  1513  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:67:23
  1514  .  .  .  .  .  .  .  .  .  .  Op: ==
  1515  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1516  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:67:26
  1517  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1518  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1519  .  .  .  .  .  .  .  .  .  .  }
  1520  .  .  .  .  .  .  .  .  .  }
  1521  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1522  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:67:29
  1523  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1524  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  1525  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  1526  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:68:4
  1528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "val"
  1529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1434)
  1530  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1531  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:68:9
  1533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1535  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1536  .  .  .  .  .  .  .  .  .  .  .  .  }
  1537  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:68:13
  1538  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
  1539  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1540  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:68:15
  1544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 638)
  1546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:68:20
  1549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "GetState"
  1550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:68:28
  1553  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1554  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1555  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:68:29
  1557  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1558  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:68:35
  1562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  1563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:68:38
  1568  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1569  .  .  .  .  .  .  .  .  .  .  .  .  }
  1570  .  .  .  .  .  .  .  .  .  .  .  }
  1571  .  .  .  .  .  .  .  .  .  .  }
  1572  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:69:3
  1573  .  .  .  .  .  .  .  .  .  }
  1574  .  .  .  .  .  .  .  .  .  Else: *ast.BlockStmt {
  1575  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:69:10
  1576  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1577  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  1578  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  1579  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:4
  1581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "val"
  1582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1434)
  1583  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1584  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:9
  1586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1588  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1589  .  .  .  .  .  .  .  .  .  .  .  .  }
  1590  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:70:13
  1591  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
  1592  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1593  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:15
  1597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 638)
  1599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:20
  1602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateData"
  1603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:70:34
  1606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:35
  1610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:41
  1615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
  1616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  1619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:53
  1621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:70:59
  1626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  1627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:70:62
  1632  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1633  .  .  .  .  .  .  .  .  .  .  .  .  }
  1634  .  .  .  .  .  .  .  .  .  .  .  }
  1635  .  .  .  .  .  .  .  .  .  .  }
  1636  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:71:3
  1637  .  .  .  .  .  .  .  .  .  }
  1638  .  .  .  .  .  .  .  .  }
  1639  .  .  .  .  .  .  .  .  1: *ast.IfStmt {
  1640  .  .  .  .  .  .  .  .  .  If: source.go:72:3
  1641  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1642  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1643  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:72:6
  1644  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1645  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1646  .  .  .  .  .  .  .  .  .  .  }
  1647  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:72:10
  1648  .  .  .  .  .  .  .  .  .  .  Op: !=
  1649  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  1650  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:72:13
  1651  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1652  .  .  .  .  .  .  .  .  .  .  }
  1653  .  .  .  .  .  .  .  .  .  }
  1654  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1655  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:72:17
  1656  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1657  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1658  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:73:4
  1659  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1660  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:73:11
  1664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:73:16
  1668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:73:21
  1672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:73:22
  1677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:73:26
  1681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Sprintf"
  1682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:73:33
  1685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  1686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:73:34
  1688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"failed to read data for %+v: %s\""
  1690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:73:69
  1693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  1697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:73:76
  1698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:73:79
  1704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:73:80
  1708  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1709  .  .  .  .  .  .  .  .  .  .  .  .  }
  1710  .  .  .  .  .  .  .  .  .  .  .  }
  1711  .  .  .  .  .  .  .  .  .  .  }
  1712  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:74:3
  1713  .  .  .  .  .  .  .  .  .  }
  1714  .  .  .  .  .  .  .  .  }
  1715  .  .  .  .  .  .  .  .  2: *ast.AssignStmt {
  1716  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1717  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1718  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:3
  1719  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
  1720  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1721  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1722  .  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
  1723  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1715)
  1724  .  .  .  .  .  .  .  .  .  .  .  }
  1725  .  .  .  .  .  .  .  .  .  .  }
  1726  .  .  .  .  .  .  .  .  .  }
  1727  .  .  .  .  .  .  .  .  .  TokPos: source.go:75:10
  1728  .  .  .  .  .  .  .  .  .  Tok: :=
  1729  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1730  .  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  1731  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1732  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:13
  1733  .  .  .  .  .  .  .  .  .  .  .  .  Name: "KVData"
  1734  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
  1735  .  .  .  .  .  .  .  .  .  .  .  }
  1736  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:75:19
  1737  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 3) {
  1738  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  1739  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  1740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:20
  1741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
  1742  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1743  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:75:30
  1744  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  1745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:32
  1747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:38
  1752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
  1753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1754  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1755  .  .  .  .  .  .  .  .  .  .  .  .  }
  1756  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.KeyValueExpr {
  1757  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  1758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:50
  1759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  1760  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1761  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:75:53
  1762  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  1763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:55
  1765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1468)
  1767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:61
  1770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  1771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1772  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1773  .  .  .  .  .  .  .  .  .  .  .  .  }
  1774  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.KeyValueExpr {
  1775  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  1776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:66
  1777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
  1778  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1779  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:75:71
  1780  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.CallExpr {
  1781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:73
  1783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  1784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:75:79
  1786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:75:80
  1789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "val"
  1790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1434)
  1791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:75:83
  1795  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1796  .  .  .  .  .  .  .  .  .  .  .  .  }
  1797  .  .  .  .  .  .  .  .  .  .  .  }
  1798  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:75:84
  1799  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  1800  .  .  .  .  .  .  .  .  .  .  }
  1801  .  .  .  .  .  .  .  .  .  }
  1802  .  .  .  .  .  .  .  .  }
  1803  .  .  .  .  .  .  .  .  3: *ast.AssignStmt {
  1804  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1805  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1806  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:76:3
  1807  .  .  .  .  .  .  .  .  .  .  .  Name: "results"
  1808  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1384)
  1809  .  .  .  .  .  .  .  .  .  .  }
  1810  .  .  .  .  .  .  .  .  .  }
  1811  .  .  .  .  .  .  .  .  .  TokPos: source.go:76:11
  1812  .  .  .  .  .  .  .  .  .  Tok: =
  1813  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1814  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1815  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1816  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:76:13
  1817  .  .  .  .  .  .  .  .  .  .  .  .  Name: "append"
  1818  .  .  .  .  .  .  .  .  .  .  .  }
  1819  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:76:19
  1820  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1821  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1822  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:76:20
  1823  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "results"
  1824  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1384)
  1825  .  .  .  .  .  .  .  .  .  .  .  .  }
  1826  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  1827  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:76:29
  1828  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: &
  1829  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:76:30
  1831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
  1832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1720)
  1833  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1834  .  .  .  .  .  .  .  .  .  .  .  .  }
  1835  .  .  .  .  .  .  .  .  .  .  .  }
  1836  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1837  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:76:36
  1838  .  .  .  .  .  .  .  .  .  .  }
  1839  .  .  .  .  .  .  .  .  .  }
  1840  .  .  .  .  .  .  .  .  }
  1841  .  .  .  .  .  .  .  }
  1842  .  .  .  .  .  .  .  Rbrace: source.go:77:2
  1843  .  .  .  .  .  .  }
  1844  .  .  .  .  .  }
  1845  .  .  .  .  .  8: *ast.RangeStmt {
  1846  .  .  .  .  .  .  For: source.go:79:2
  1847  .  .  .  .  .  .  Key: *ast.Ident {
  1848  .  .  .  .  .  .  .  NamePos: source.go:79:6
  1849  .  .  .  .  .  .  .  Name: "_"
  1850  .  .  .  .  .  .  .  Obj: *ast.Object {
  1851  .  .  .  .  .  .  .  .  Kind: var
  1852  .  .  .  .  .  .  .  .  Name: "_"
  1853  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  1854  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  1855  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 1847)
  1856  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1857  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:79:9
  1858  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1859  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1860  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1861  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1862  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1853)
  1863  .  .  .  .  .  .  .  .  .  .  .  }
  1864  .  .  .  .  .  .  .  .  .  .  }
  1865  .  .  .  .  .  .  .  .  .  }
  1866  .  .  .  .  .  .  .  .  .  TokPos: source.go:79:15
  1867  .  .  .  .  .  .  .  .  .  Tok: :=
  1868  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1869  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  1870  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  1871  .  .  .  .  .  .  .  .  .  .  .  Op: range
  1872  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1873  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:79:24
  1874  .  .  .  .  .  .  .  .  .  .  .  .  Name: "writeInputs"
  1875  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1276)
  1876  .  .  .  .  .  .  .  .  .  .  .  }
  1877  .  .  .  .  .  .  .  .  .  .  }
  1878  .  .  .  .  .  .  .  .  .  }
  1879  .  .  .  .  .  .  .  .  }
  1880  .  .  .  .  .  .  .  }
  1881  .  .  .  .  .  .  }
  1882  .  .  .  .  .  .  Value: *(obj @ 1856)
  1883  .  .  .  .  .  .  TokPos: source.go:79:15
  1884  .  .  .  .  .  .  Tok: :=
  1885  .  .  .  .  .  .  Range: source.go:79:18
  1886  .  .  .  .  .  .  X: *(obj @ 1872)
  1887  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1888  .  .  .  .  .  .  .  Lbrace: source.go:79:36
  1889  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
  1890  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
  1891  .  .  .  .  .  .  .  .  .  If: source.go:80:3
  1892  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1893  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1894  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1895  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:80:6
  1896  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1897  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  1898  .  .  .  .  .  .  .  .  .  .  .  }
  1899  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1900  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:80:12
  1901  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
  1902  .  .  .  .  .  .  .  .  .  .  .  }
  1903  .  .  .  .  .  .  .  .  .  .  }
  1904  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:80:23
  1905  .  .  .  .  .  .  .  .  .  .  Op: ==
  1906  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1907  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:80:26
  1908  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1909  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1910  .  .  .  .  .  .  .  .  .  .  }
  1911  .  .  .  .  .  .  .  .  .  }
  1912  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1913  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:80:29
  1914  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1915  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  1916  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1917  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1918  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:4
  1919  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1920  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1921  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1922  .  .  .  .  .  .  .  .  .  .  .  .  }
  1923  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:81:8
  1924  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
  1925  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1926  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1927  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1928  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1929  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:10
  1930  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1931  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 638)
  1932  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1933  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1934  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:15
  1935  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PutState"
  1936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1938  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:81:23
  1939  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1940  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:24
  1943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  1945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:30
  1948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  1949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1950  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1951  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  1952  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.ArrayType {
  1953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:81:35
  1954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  1955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:37
  1956  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "byte"
  1957  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:81:41
  1960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1963  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:42
  1964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  1965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  1966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:81:48
  1969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
  1970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:81:53
  1975  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1976  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1977  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1978  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:81:54
  1979  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1980  .  .  .  .  .  .  .  .  .  .  .  .  }
  1981  .  .  .  .  .  .  .  .  .  .  .  }
  1982  .  .  .  .  .  .  .  .  .  .  }
  1983  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:82:3
  1984  .  .  .  .  .  .  .  .  .  }
  1985  .  .  .  .  .  .  .  .  .  Else: *ast.BlockStmt {
  1986  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:82:10
  1987  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1988  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  1989  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1990  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:4
  1992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  1994  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1995  .  .  .  .  .  .  .  .  .  .  .  .  }
  1996  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:83:8
  1997  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
  1998  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1999  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:10
  2003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  2004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 638)
  2005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:15
  2008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PutPrivateData"
  2009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:83:29
  2012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  2013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:30
  2016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  2017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  2018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:36
  2021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Collection"
  2022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  2025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:48
  2027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  2028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  2029  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2030  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:54
  2032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  2033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.CallExpr {
  2036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.ArrayType {
  2037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:83:59
  2038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  2039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:61
  2040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "byte"
  2041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:83:65
  2044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:66
  2048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  2049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  2050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:83:72
  2053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
  2054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:83:77
  2059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:83:78
  2063  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2064  .  .  .  .  .  .  .  .  .  .  .  .  }
  2065  .  .  .  .  .  .  .  .  .  .  .  }
  2066  .  .  .  .  .  .  .  .  .  .  }
  2067  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:84:3
  2068  .  .  .  .  .  .  .  .  .  }
  2069  .  .  .  .  .  .  .  .  }
  2070  .  .  .  .  .  .  .  .  1: *ast.IfStmt {
  2071  .  .  .  .  .  .  .  .  .  If: source.go:85:3
  2072  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2073  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2074  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:85:6
  2075  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  2076  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  2077  .  .  .  .  .  .  .  .  .  .  }
  2078  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:85:10
  2079  .  .  .  .  .  .  .  .  .  .  Op: !=
  2080  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  2081  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:85:13
  2082  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  2083  .  .  .  .  .  .  .  .  .  .  }
  2084  .  .  .  .  .  .  .  .  .  }
  2085  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2086  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:85:17
  2087  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2088  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2089  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:86:4
  2090  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2091  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:86:11
  2095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:86:16
  2099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:86:21
  2103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:86:22
  2108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  2109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:86:26
  2112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Sprintf"
  2113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:86:33
  2116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  2117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:86:34
  2119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"failed to write data for %+v: %s\""
  2121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  2123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:86:70
  2124  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
  2125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1859)
  2126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  2128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:86:77
  2129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  2130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  2131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:86:80
  2135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:86:81
  2139  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2140  .  .  .  .  .  .  .  .  .  .  .  .  }
  2141  .  .  .  .  .  .  .  .  .  .  .  }
  2142  .  .  .  .  .  .  .  .  .  .  }
  2143  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:87:3
  2144  .  .  .  .  .  .  .  .  .  }
  2145  .  .  .  .  .  .  .  .  }
  2146  .  .  .  .  .  .  .  }
  2147  .  .  .  .  .  .  .  Rbrace: source.go:88:2
  2148  .  .  .  .  .  .  }
  2149  .  .  .  .  .  }
  2150  .  .  .  .  .  9: *ast.AssignStmt {
  2151  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  2152  .  .  .  .  .  .  .  0: *ast.Ident {
  2153  .  .  .  .  .  .  .  .  NamePos: source.go:90:2
  2154  .  .  .  .  .  .  .  .  Name: "resultBytes"
  2155  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2156  .  .  .  .  .  .  .  .  .  Kind: var
  2157  .  .  .  .  .  .  .  .  .  Name: "resultBytes"
  2158  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2150)
  2159  .  .  .  .  .  .  .  .  }
  2160  .  .  .  .  .  .  .  }
  2161  .  .  .  .  .  .  .  1: *ast.Ident {
  2162  .  .  .  .  .  .  .  .  NamePos: source.go:90:15
  2163  .  .  .  .  .  .  .  .  Name: "err"
  2164  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  2165  .  .  .  .  .  .  .  }
  2166  .  .  .  .  .  .  }
  2167  .  .  .  .  .  .  TokPos: source.go:90:19
  2168  .  .  .  .  .  .  Tok: :=
  2169  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2170  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2171  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2172  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2173  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:90:22
  2174  .  .  .  .  .  .  .  .  .  .  Name: "json"
  2175  .  .  .  .  .  .  .  .  .  }
  2176  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2177  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:90:27
  2178  .  .  .  .  .  .  .  .  .  .  Name: "Marshal"
  2179  .  .  .  .  .  .  .  .  .  }
  2180  .  .  .  .  .  .  .  .  }
  2181  .  .  .  .  .  .  .  .  Lparen: source.go:90:34
  2182  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2183  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2184  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:90:35
  2185  .  .  .  .  .  .  .  .  .  .  Name: "results"
  2186  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1384)
  2187  .  .  .  .  .  .  .  .  .  }
  2188  .  .  .  .  .  .  .  .  }
  2189  .  .  .  .  .  .  .  .  Ellipsis: -
  2190  .  .  .  .  .  .  .  .  Rparen: source.go:90:42
  2191  .  .  .  .  .  .  .  }
  2192  .  .  .  .  .  .  }
  2193  .  .  .  .  .  }
  2194  .  .  .  .  .  10: *ast.IfStmt {
  2195  .  .  .  .  .  .  If: source.go:91:2
  2196  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2197  .  .  .  .  .  .  .  X: *ast.Ident {
  2198  .  .  .  .  .  .  .  .  NamePos: source.go:91:5
  2199  .  .  .  .  .  .  .  .  Name: "err"
  2200  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  2201  .  .  .  .  .  .  .  }
  2202  .  .  .  .  .  .  .  OpPos: source.go:91:9
  2203  .  .  .  .  .  .  .  Op: !=
  2204  .  .  .  .  .  .  .  Y: *ast.Ident {
  2205  .  .  .  .  .  .  .  .  NamePos: source.go:91:12
  2206  .  .  .  .  .  .  .  .  Name: "nil"
  2207  .  .  .  .  .  .  .  }
  2208  .  .  .  .  .  .  }
  2209  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2210  .  .  .  .  .  .  .  Lbrace: source.go:91:16
  2211  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2212  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2213  .  .  .  .  .  .  .  .  .  Return: source.go:92:3
  2214  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2215  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2216  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2217  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2218  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:92:10
  2219  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2220  .  .  .  .  .  .  .  .  .  .  .  .  }
  2221  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2222  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:92:15
  2223  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2224  .  .  .  .  .  .  .  .  .  .  .  .  }
  2225  .  .  .  .  .  .  .  .  .  .  .  }
  2226  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:92:20
  2227  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2228  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2229  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2231  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:92:21
  2232  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  2233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2235  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:92:25
  2236  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Sprintf"
  2237  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2238  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2239  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:92:32
  2240  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  2241  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2242  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:92:33
  2243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"failed to marshal results %+v: %s\""
  2245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  2247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:92:70
  2248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "results"
  2249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1384)
  2250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  2252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:92:79
  2253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  2254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 776)
  2255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2256  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2257  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2258  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:92:82
  2259  .  .  .  .  .  .  .  .  .  .  .  .  }
  2260  .  .  .  .  .  .  .  .  .  .  .  }
  2261  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2262  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:92:83
  2263  .  .  .  .  .  .  .  .  .  .  }
  2264  .  .  .  .  .  .  .  .  .  }
  2265  .  .  .  .  .  .  .  .  }
  2266  .  .  .  .  .  .  .  }
  2267  .  .  .  .  .  .  .  Rbrace: source.go:93:2
  2268  .  .  .  .  .  .  }
  2269  .  .  .  .  .  }
  2270  .  .  .  .  .  11: *ast.ReturnStmt {
  2271  .  .  .  .  .  .  Return: source.go:94:2
  2272  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2273  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2274  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2275  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2276  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:94:9
  2277  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2278  .  .  .  .  .  .  .  .  .  }
  2279  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2280  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:94:14
  2281  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  2282  .  .  .  .  .  .  .  .  .  }
  2283  .  .  .  .  .  .  .  .  }
  2284  .  .  .  .  .  .  .  .  Lparen: source.go:94:21
  2285  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2286  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2287  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:94:22
  2288  .  .  .  .  .  .  .  .  .  .  Name: "resultBytes"
  2289  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2155)
  2290  .  .  .  .  .  .  .  .  .  }
  2291  .  .  .  .  .  .  .  .  }
  2292  .  .  .  .  .  .  .  .  Ellipsis: -
  2293  .  .  .  .  .  .  .  .  Rparen: source.go:94:33
  2294  .  .  .  .  .  .  .  }
  2295  .  .  .  .  .  .  }
  2296  .  .  .  .  .  }
  2297  .  .  .  .  }
  2298  .  .  .  .  Rbrace: source.go:95:1
  2299  .  .  .  }
  2300  .  .  }
  2301  .  .  6: *(obj @ 793)
  2302  .  }
  2303  .  FileStart: source.go:1:1
  2304  .  FileEnd: source.go:110:3
  2305  .  Scope: *ast.Scope {
  2306  .  .  Objects: map[string]*ast.Object (len = 3) {
  2307  .  .  .  "KVExecutor": *(obj @ 76)
  2308  .  .  .  "KVData": *(obj @ 104)
  2309  .  .  .  "parseArg": *(obj @ 790)
  2310  .  .  }
  2311  .  }
  2312  .  Imports: []*ast.ImportSpec (len = 6) {
  2313  .  .  0: *(obj @ 12)
  2314  .  .  1: *(obj @ 20)
  2315  .  .  2: *(obj @ 28)
  2316  .  .  3: *(obj @ 36)
  2317  .  .  4: *(obj @ 44)
  2318  .  .  5: *(obj @ 56)
  2319  .  }
  2320  .  Unresolved: []*ast.Ident (len = 52) {
  2321  .  .  0: *(obj @ 128)
  2322  .  .  1: *(obj @ 150)
  2323  .  .  2: *(obj @ 172)
  2324  .  .  3: *(obj @ 241)
  2325  .  .  4: *(obj @ 259)
  2326  .  .  5: *(obj @ 281)
  2327  .  .  6: *(obj @ 292)
  2328  .  .  7: *(obj @ 356)
  2329  .  .  8: *(obj @ 374)
  2330  .  .  9: *(obj @ 436)
  2331  .  .  10: *(obj @ 529)
  2332  .  .  11: *(obj @ 564)
  2333  .  .  12: *(obj @ 646)
  2334  .  .  13: *(obj @ 670)
  2335  .  .  14: *(obj @ 684)
  2336  .  .  15: *(obj @ 705)
  2337  .  .  16: *(obj @ 736)
  2338  .  .  17: *(obj @ 1221)
  2339  .  .  18: *(obj @ 1234)
  2340  .  .  19: *(obj @ 1329)
  2341  .  .  20: *(obj @ 1342)
  2342  .  .  21: *(obj @ 1395)
  2343  .  .  22: *(obj @ 1444)
  2344  .  .  23: *(obj @ 1649)
  2345  .  .  24: *(obj @ 1662)
  2346  .  .  25: *(obj @ 1675)
  2347  .  .  26: *(obj @ 1781)
  2348  .  .  27: *(obj @ 1815)
  2349  .  .  28: *(obj @ 1954)
  2350  .  .  29: *(obj @ 2038)
  2351  .  .  30: *(obj @ 2080)
  2352  .  .  31: *(obj @ 2093)
  2353  .  .  32: *(obj @ 2106)
  2354  .  .  33: *(obj @ 2172)
  2355  .  .  34: *(obj @ 2204)
  2356  .  .  35: *(obj @ 2217)
  2357  .  .  36: *(obj @ 2230)
  2358  .  .  37: *(obj @ 2275)
  2359  .  .  38: *(obj @ 816)
  2360  .  .  39: *(obj @ 841)
  2361  .  .  40: *(obj @ 869)
  2362  .  .  41: *(obj @ 924)
  2363  .  .  42: *(obj @ 978)
  2364  .  .  43: *(obj @ 998)
  2365  .  .  44: *(obj @ 1009)
  2366  .  .  45: *(obj @ 1015)
  2367  .  .  46: *(obj @ 1066)
  2368  .  .  47: *(obj @ 1105)
  2369  .  .  48: *(obj @ 1116)
  2370  .  .  49: *(obj @ 1122)
  2371  .  .  50: *(obj @ 1144)
  2372  .  .  51: *(obj @ 1177)
  2373  .  }
  2374  .  GoVersion: ""
  2375  }
