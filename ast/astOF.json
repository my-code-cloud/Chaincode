抽象语法树 (AST) 结构：
     0  *ast.File {
     1  .  Package: source.go:1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: source.go:1:9
     4  .  .  Name: "fixtures"
     5  .  }
     6  .  Decls: []ast.Decl (len = 2) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: source.go:3:1
     9  .  .  .  Tok: type
    10  .  .  .  Lparen: -
    11  .  .  .  Specs: []ast.Spec (len = 1) {
    12  .  .  .  .  0: *ast.TypeSpec {
    13  .  .  .  .  .  Name: *ast.Ident {
    14  .  .  .  .  .  .  NamePos: source.go:3:6
    15  .  .  .  .  .  .  Name: "ziran"
    16  .  .  .  .  .  .  Obj: *ast.Object {
    17  .  .  .  .  .  .  .  Kind: type
    18  .  .  .  .  .  .  .  Name: "ziran"
    19  .  .  .  .  .  .  .  Decl: *(obj @ 12)
    20  .  .  .  .  .  .  }
    21  .  .  .  .  .  }
    22  .  .  .  .  .  Assign: -
    23  .  .  .  .  .  Type: *ast.Ident {
    24  .  .  .  .  .  .  NamePos: source.go:3:12
    25  .  .  .  .  .  .  Name: "int64"
    26  .  .  .  .  .  }
    27  .  .  .  .  }
    28  .  .  .  }
    29  .  .  .  Rparen: -
    30  .  .  }
    31  .  .  1: *ast.FuncDecl {
    32  .  .  .  Name: *ast.Ident {
    33  .  .  .  .  NamePos: source.go:5:6
    34  .  .  .  .  Name: "cacu"
    35  .  .  .  .  Obj: *ast.Object {
    36  .  .  .  .  .  Kind: func
    37  .  .  .  .  .  Name: "cacu"
    38  .  .  .  .  .  Decl: *(obj @ 31)
    39  .  .  .  .  }
    40  .  .  .  }
    41  .  .  .  Type: *ast.FuncType {
    42  .  .  .  .  Func: source.go:5:1
    43  .  .  .  .  Params: *ast.FieldList {
    44  .  .  .  .  .  Opening: source.go:5:10
    45  .  .  .  .  .  Closing: source.go:5:11
    46  .  .  .  .  }
    47  .  .  .  }
    48  .  .  .  Body: *ast.BlockStmt {
    49  .  .  .  .  Lbrace: source.go:5:13
    50  .  .  .  .  List: []ast.Stmt (len = 11) {
    51  .  .  .  .  .  0: *ast.DeclStmt {
    52  .  .  .  .  .  .  Decl: *ast.GenDecl {
    53  .  .  .  .  .  .  .  TokPos: source.go:6:2
    54  .  .  .  .  .  .  .  Tok: var
    55  .  .  .  .  .  .  .  Lparen: -
    56  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    57  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    58  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
    59  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    60  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:6:6
    61  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
    62  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    63  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    64  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
    65  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 57)
    66  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    67  .  .  .  .  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  .  .  .  }
    69  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
    70  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:6:9
    71  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
    72  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    73  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    74  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
    75  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 57)
    76  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    77  .  .  .  .  .  .  .  .  .  .  .  }
    78  .  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    81  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:6:11
    82  .  .  .  .  .  .  .  .  .  .  Name: "int32"
    83  .  .  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 2) {
    85  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    86  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:6:19
    87  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
    88  .  .  .  .  .  .  .  .  .  .  .  Value: "10"
    89  .  .  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
    91  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:6:23
    92  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
    93  .  .  .  .  .  .  .  .  .  .  .  Value: "20"
    94  .  .  .  .  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  Rparen: -
    99  .  .  .  .  .  .  }
   100  .  .  .  .  .  }
   101  .  .  .  .  .  1: *ast.DeclStmt {
   102  .  .  .  .  .  .  Decl: *ast.GenDecl {
   103  .  .  .  .  .  .  .  TokPos: source.go:7:2
   104  .  .  .  .  .  .  .  Tok: const
   105  .  .  .  .  .  .  .  Lparen: -
   106  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   107  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   108  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   109  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   110  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:7:8
   111  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   112  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   113  .  .  .  .  .  .  .  .  .  .  .  .  Kind: const
   114  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
   115  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 107)
   116  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   117  .  .  .  .  .  .  .  .  .  .  .  }
   118  .  .  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   121  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:7:10
   122  .  .  .  .  .  .  .  .  .  .  Name: "int32"
   123  .  .  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   125  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   126  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:7:18
   127  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   128  .  .  .  .  .  .  .  .  .  .  .  Value: "99"
   129  .  .  .  .  .  .  .  .  .  .  }
   130  .  .  .  .  .  .  .  .  .  }
   131  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  Rparen: -
   134  .  .  .  .  .  .  }
   135  .  .  .  .  .  }
   136  .  .  .  .  .  2: *ast.DeclStmt {
   137  .  .  .  .  .  .  Decl: *ast.GenDecl {
   138  .  .  .  .  .  .  .  TokPos: source.go:8:2
   139  .  .  .  .  .  .  .  Tok: var
   140  .  .  .  .  .  .  .  Lparen: -
   141  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   142  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   143  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
   144  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   145  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:8:6
   146  .  .  .  .  .  .  .  .  .  .  .  Name: "m"
   147  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   148  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   149  .  .  .  .  .  .  .  .  .  .  .  .  Name: "m"
   150  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 142)
   151  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   152  .  .  .  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   155  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:8:9
   156  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   157  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   158  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   159  .  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   160  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 142)
   161  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   162  .  .  .  .  .  .  .  .  .  .  .  }
   163  .  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   166  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:8:11
   167  .  .  .  .  .  .  .  .  .  .  Name: "ziran"
   168  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 16)
   169  .  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 2) {
   171  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   172  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:8:19
   173  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   174  .  .  .  .  .  .  .  .  .  .  .  Value: "102"
   175  .  .  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   177  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:8:24
   178  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   179  .  .  .  .  .  .  .  .  .  .  .  Value: "51"
   180  .  .  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  .  }
   184  .  .  .  .  .  .  .  Rparen: -
   185  .  .  .  .  .  .  }
   186  .  .  .  .  .  }
   187  .  .  .  .  .  3: *ast.AssignStmt {
   188  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   189  .  .  .  .  .  .  .  0: *ast.Ident {
   190  .  .  .  .  .  .  .  .  NamePos: source.go:10:2
   191  .  .  .  .  .  .  .  .  Name: "sum"
   192  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   193  .  .  .  .  .  .  .  .  .  Kind: var
   194  .  .  .  .  .  .  .  .  .  Name: "sum"
   195  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 187)
   196  .  .  .  .  .  .  .  .  }
   197  .  .  .  .  .  .  .  }
   198  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  TokPos: source.go:10:6
   200  .  .  .  .  .  .  Tok: :=
   201  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   202  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
   203  .  .  .  .  .  .  .  .  OpPos: source.go:10:9
   204  .  .  .  .  .  .  .  .  Op: -
   205  .  .  .  .  .  .  .  .  X: *ast.Ident {
   206  .  .  .  .  .  .  .  .  .  NamePos: source.go:10:10
   207  .  .  .  .  .  .  .  .  .  Name: "a"
   208  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 62)
   209  .  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  }
   212  .  .  .  .  .  }
   213  .  .  .  .  .  4: *ast.ForStmt {
   214  .  .  .  .  .  .  For: source.go:11:2
   215  .  .  .  .  .  .  Init: *ast.AssignStmt {
   216  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   217  .  .  .  .  .  .  .  .  0: *ast.Ident {
   218  .  .  .  .  .  .  .  .  .  NamePos: source.go:11:6
   219  .  .  .  .  .  .  .  .  .  Name: "i"
   220  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   221  .  .  .  .  .  .  .  .  .  .  Kind: var
   222  .  .  .  .  .  .  .  .  .  .  Name: "i"
   223  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 215)
   224  .  .  .  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  TokPos: source.go:11:8
   228  .  .  .  .  .  .  .  Tok: :=
   229  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   230  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   231  .  .  .  .  .  .  .  .  .  ValuePos: source.go:11:11
   232  .  .  .  .  .  .  .  .  .  Kind: INT
   233  .  .  .  .  .  .  .  .  .  Value: "0"
   234  .  .  .  .  .  .  .  .  }
   235  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   238  .  .  .  .  .  .  .  X: *ast.Ident {
   239  .  .  .  .  .  .  .  .  NamePos: source.go:11:14
   240  .  .  .  .  .  .  .  .  Name: "i"
   241  .  .  .  .  .  .  .  .  Obj: *(obj @ 220)
   242  .  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  .  OpPos: source.go:11:16
   244  .  .  .  .  .  .  .  Op: <=
   245  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   246  .  .  .  .  .  .  .  .  ValuePos: source.go:11:19
   247  .  .  .  .  .  .  .  .  Kind: INT
   248  .  .  .  .  .  .  .  .  Value: "10"
   249  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  }
   251  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   252  .  .  .  .  .  .  .  X: *ast.Ident {
   253  .  .  .  .  .  .  .  .  NamePos: source.go:11:23
   254  .  .  .  .  .  .  .  .  Name: "i"
   255  .  .  .  .  .  .  .  .  Obj: *(obj @ 220)
   256  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  .  TokPos: source.go:11:24
   258  .  .  .  .  .  .  .  Tok: ++
   259  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  Body: *ast.BlockStmt {
   261  .  .  .  .  .  .  .  Lbrace: source.go:11:27
   262  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   263  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   264  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   265  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   266  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:12:3
   267  .  .  .  .  .  .  .  .  .  .  .  Name: "sum"
   268  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 192)
   269  .  .  .  .  .  .  .  .  .  .  }
   270  .  .  .  .  .  .  .  .  .  }
   271  .  .  .  .  .  .  .  .  .  TokPos: source.go:12:7
   272  .  .  .  .  .  .  .  .  .  Tok: +=
   273  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   274  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   275  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:12:10
   276  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
   277  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 220)
   278  .  .  .  .  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  .  .  .  }
   280  .  .  .  .  .  .  .  .  }
   281  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  .  Rbrace: source.go:13:2
   283  .  .  .  .  .  .  }
   284  .  .  .  .  .  }
   285  .  .  .  .  .  5: *ast.AssignStmt {
   286  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   287  .  .  .  .  .  .  .  0: *ast.Ident {
   288  .  .  .  .  .  .  .  .  NamePos: source.go:14:2
   289  .  .  .  .  .  .  .  .  Name: "c"
   290  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   291  .  .  .  .  .  .  .  .  .  Kind: var
   292  .  .  .  .  .  .  .  .  .  Name: "c"
   293  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 285)
   294  .  .  .  .  .  .  .  .  }
   295  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  }
   297  .  .  .  .  .  .  TokPos: source.go:14:4
   298  .  .  .  .  .  .  Tok: :=
   299  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   300  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   301  .  .  .  .  .  .  .  .  X: *ast.Ident {
   302  .  .  .  .  .  .  .  .  .  NamePos: source.go:14:7
   303  .  .  .  .  .  .  .  .  .  Name: "a"
   304  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 62)
   305  .  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  .  OpPos: source.go:14:9
   307  .  .  .  .  .  .  .  .  Op: +
   308  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   309  .  .  .  .  .  .  .  .  .  NamePos: source.go:14:11
   310  .  .  .  .  .  .  .  .  .  Name: "b"
   311  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 72)
   312  .  .  .  .  .  .  .  .  }
   313  .  .  .  .  .  .  .  }
   314  .  .  .  .  .  .  }
   315  .  .  .  .  .  }
   316  .  .  .  .  .  6: *ast.AssignStmt {
   317  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   318  .  .  .  .  .  .  .  0: *ast.Ident {
   319  .  .  .  .  .  .  .  .  NamePos: source.go:15:2
   320  .  .  .  .  .  .  .  .  Name: "e"
   321  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   322  .  .  .  .  .  .  .  .  .  Kind: var
   323  .  .  .  .  .  .  .  .  .  Name: "e"
   324  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 316)
   325  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  TokPos: source.go:15:4
   329  .  .  .  .  .  .  Tok: :=
   330  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   331  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   332  .  .  .  .  .  .  .  .  X: *ast.Ident {
   333  .  .  .  .  .  .  .  .  .  NamePos: source.go:15:7
   334  .  .  .  .  .  .  .  .  .  Name: "m"
   335  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 147)
   336  .  .  .  .  .  .  .  .  }
   337  .  .  .  .  .  .  .  .  OpPos: source.go:15:9
   338  .  .  .  .  .  .  .  .  Op: <<
   339  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   340  .  .  .  .  .  .  .  .  .  ValuePos: source.go:15:12
   341  .  .  .  .  .  .  .  .  .  Kind: INT
   342  .  .  .  .  .  .  .  .  .  Value: "3"
   343  .  .  .  .  .  .  .  .  }
   344  .  .  .  .  .  .  .  }
   345  .  .  .  .  .  .  }
   346  .  .  .  .  .  }
   347  .  .  .  .  .  7: *ast.AssignStmt {
   348  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   349  .  .  .  .  .  .  .  0: *ast.Ident {
   350  .  .  .  .  .  .  .  .  NamePos: source.go:16:2
   351  .  .  .  .  .  .  .  .  Name: "d"
   352  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   353  .  .  .  .  .  .  .  .  .  Kind: var
   354  .  .  .  .  .  .  .  .  .  Name: "d"
   355  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 347)
   356  .  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  }
   358  .  .  .  .  .  .  }
   359  .  .  .  .  .  .  TokPos: source.go:16:4
   360  .  .  .  .  .  .  Tok: :=
   361  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   362  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   363  .  .  .  .  .  .  .  .  X: *ast.Ident {
   364  .  .  .  .  .  .  .  .  .  NamePos: source.go:16:7
   365  .  .  .  .  .  .  .  .  .  Name: "m"
   366  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 147)
   367  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  .  OpPos: source.go:16:9
   369  .  .  .  .  .  .  .  .  Op: -
   370  .  .  .  .  .  .  .  .  Y: *ast.ParenExpr {
   371  .  .  .  .  .  .  .  .  .  Lparen: source.go:16:11
   372  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   373  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   374  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:16:12
   375  .  .  .  .  .  .  .  .  .  .  .  Name: "c"
   376  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 290)
   377  .  .  .  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:16:14
   379  .  .  .  .  .  .  .  .  .  .  Op: *
   380  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   381  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:16:16
   382  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   383  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 157)
   384  .  .  .  .  .  .  .  .  .  .  }
   385  .  .  .  .  .  .  .  .  .  }
   386  .  .  .  .  .  .  .  .  .  Rparen: source.go:16:17
   387  .  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  }
   389  .  .  .  .  .  .  }
   390  .  .  .  .  .  }
   391  .  .  .  .  .  8: *ast.AssignStmt {
   392  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   393  .  .  .  .  .  .  .  0: *ast.Ident {
   394  .  .  .  .  .  .  .  .  NamePos: source.go:17:2
   395  .  .  .  .  .  .  .  .  Name: "m"
   396  .  .  .  .  .  .  .  .  Obj: *(obj @ 147)
   397  .  .  .  .  .  .  .  }
   398  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  TokPos: source.go:17:4
   400  .  .  .  .  .  .  Tok: <<=
   401  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   402  .  .  .  .  .  .  .  0: *ast.BasicLit {
   403  .  .  .  .  .  .  .  .  ValuePos: source.go:17:8
   404  .  .  .  .  .  .  .  .  Kind: INT
   405  .  .  .  .  .  .  .  .  Value: "2"
   406  .  .  .  .  .  .  .  }
   407  .  .  .  .  .  .  }
   408  .  .  .  .  .  }
   409  .  .  .  .  .  9: *ast.AssignStmt {
   410  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   411  .  .  .  .  .  .  .  0: *ast.Ident {
   412  .  .  .  .  .  .  .  .  NamePos: source.go:18:2
   413  .  .  .  .  .  .  .  .  Name: "sum"
   414  .  .  .  .  .  .  .  .  Obj: *(obj @ 192)
   415  .  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  }
   417  .  .  .  .  .  .  TokPos: source.go:18:6
   418  .  .  .  .  .  .  Tok: =
   419  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   420  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   421  .  .  .  .  .  .  .  .  X: *ast.Ident {
   422  .  .  .  .  .  .  .  .  .  NamePos: source.go:18:8
   423  .  .  .  .  .  .  .  .  .  Name: "m"
   424  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 147)
   425  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  OpPos: source.go:18:10
   427  .  .  .  .  .  .  .  .  Op: %
   428  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   429  .  .  .  .  .  .  .  .  .  NamePos: source.go:18:12
   430  .  .  .  .  .  .  .  .  .  Name: "a"
   431  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 62)
   432  .  .  .  .  .  .  .  .  }
   433  .  .  .  .  .  .  .  }
   434  .  .  .  .  .  .  }
   435  .  .  .  .  .  }
   436  .  .  .  .  .  10: *ast.IncDecStmt {
   437  .  .  .  .  .  .  X: *ast.Ident {
   438  .  .  .  .  .  .  .  NamePos: source.go:19:2
   439  .  .  .  .  .  .  .  Name: "n"
   440  .  .  .  .  .  .  .  Obj: *(obj @ 157)
   441  .  .  .  .  .  .  }
   442  .  .  .  .  .  .  TokPos: source.go:19:3
   443  .  .  .  .  .  .  Tok: ++
   444  .  .  .  .  .  }
   445  .  .  .  .  }
   446  .  .  .  .  Rbrace: source.go:20:1
   447  .  .  .  }
   448  .  .  }
   449  .  }
   450  .  FileStart: source.go:1:1
   451  .  FileEnd: source.go:20:3
   452  .  Scope: *ast.Scope {
   453  .  .  Objects: map[string]*ast.Object (len = 2) {
   454  .  .  .  "ziran": *(obj @ 16)
   455  .  .  .  "cacu": *(obj @ 35)
   456  .  .  }
   457  .  }
   458  .  Unresolved: []*ast.Ident (len = 3) {
   459  .  .  0: *(obj @ 23)
   460  .  .  1: *(obj @ 80)
   461  .  .  2: *(obj @ 120)
   462  .  }
   463  .  GoVersion: ""
   464  }
