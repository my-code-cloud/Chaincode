抽象语法树 (AST) 结构：
     0  *ast.File {
     1  .  Package: source.go:94:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: source.go:94:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 17) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: source.go:96:1
     9  .  .  .  Tok: import
    10  .  .  .  Lparen: source.go:96:8
    11  .  .  .  Specs: []ast.Spec (len = 6) {
    12  .  .  .  .  0: *ast.ImportSpec {
    13  .  .  .  .  .  Path: *ast.BasicLit {
    14  .  .  .  .  .  .  ValuePos: source.go:97:2
    15  .  .  .  .  .  .  Kind: STRING
    16  .  .  .  .  .  .  Value: "\"bytes\""
    17  .  .  .  .  .  }
    18  .  .  .  .  .  EndPos: -
    19  .  .  .  .  }
    20  .  .  .  .  1: *ast.ImportSpec {
    21  .  .  .  .  .  Path: *ast.BasicLit {
    22  .  .  .  .  .  .  ValuePos: source.go:98:2
    23  .  .  .  .  .  .  Kind: STRING
    24  .  .  .  .  .  .  Value: "\"encoding/json\""
    25  .  .  .  .  .  }
    26  .  .  .  .  .  EndPos: -
    27  .  .  .  .  }
    28  .  .  .  .  2: *ast.ImportSpec {
    29  .  .  .  .  .  Path: *ast.BasicLit {
    30  .  .  .  .  .  .  ValuePos: source.go:99:2
    31  .  .  .  .  .  .  Kind: STRING
    32  .  .  .  .  .  .  Value: "\"fmt\""
    33  .  .  .  .  .  }
    34  .  .  .  .  .  EndPos: -
    35  .  .  .  .  }
    36  .  .  .  .  3: *ast.ImportSpec {
    37  .  .  .  .  .  Path: *ast.BasicLit {
    38  .  .  .  .  .  .  ValuePos: source.go:100:2
    39  .  .  .  .  .  .  Kind: STRING
    40  .  .  .  .  .  .  Value: "\"strings\""
    41  .  .  .  .  .  }
    42  .  .  .  .  .  EndPos: -
    43  .  .  .  .  }
    44  .  .  .  .  4: *ast.ImportSpec {
    45  .  .  .  .  .  Path: *ast.BasicLit {
    46  .  .  .  .  .  .  ValuePos: source.go:102:2
    47  .  .  .  .  .  .  Kind: STRING
    48  .  .  .  .  .  .  Value: "\"github.com/hyperledger/fabric-chaincode-go/shim\""
    49  .  .  .  .  .  }
    50  .  .  .  .  .  EndPos: -
    51  .  .  .  .  }
    52  .  .  .  .  5: *ast.ImportSpec {
    53  .  .  .  .  .  Name: *ast.Ident {
    54  .  .  .  .  .  .  NamePos: source.go:103:2
    55  .  .  .  .  .  .  Name: "pb"
    56  .  .  .  .  .  }
    57  .  .  .  .  .  Path: *ast.BasicLit {
    58  .  .  .  .  .  .  ValuePos: source.go:103:5
    59  .  .  .  .  .  .  Kind: STRING
    60  .  .  .  .  .  .  Value: "\"github.com/hyperledger/fabric-protos-go/peer\""
    61  .  .  .  .  .  }
    62  .  .  .  .  .  EndPos: -
    63  .  .  .  .  }
    64  .  .  .  }
    65  .  .  .  Rparen: source.go:104:1
    66  .  .  }
    67  .  .  1: *ast.GenDecl {
    68  .  .  .  TokPos: source.go:107:1
    69  .  .  .  Tok: type
    70  .  .  .  Lparen: -
    71  .  .  .  Specs: []ast.Spec (len = 1) {
    72  .  .  .  .  0: *ast.TypeSpec {
    73  .  .  .  .  .  Name: *ast.Ident {
    74  .  .  .  .  .  .  NamePos: source.go:107:6
    75  .  .  .  .  .  .  Name: "SimpleChaincode"
    76  .  .  .  .  .  .  Obj: *ast.Object {
    77  .  .  .  .  .  .  .  Kind: type
    78  .  .  .  .  .  .  .  Name: "SimpleChaincode"
    79  .  .  .  .  .  .  .  Decl: *(obj @ 72)
    80  .  .  .  .  .  .  }
    81  .  .  .  .  .  }
    82  .  .  .  .  .  Assign: -
    83  .  .  .  .  .  Type: *ast.StructType {
    84  .  .  .  .  .  .  Struct: source.go:107:22
    85  .  .  .  .  .  .  Fields: *ast.FieldList {
    86  .  .  .  .  .  .  .  Opening: source.go:107:29
    87  .  .  .  .  .  .  .  Closing: source.go:108:1
    88  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  Incomplete: false
    90  .  .  .  .  .  }
    91  .  .  .  .  }
    92  .  .  .  }
    93  .  .  .  Rparen: -
    94  .  .  }
    95  .  .  2: *ast.GenDecl {
    96  .  .  .  TokPos: source.go:110:1
    97  .  .  .  Tok: type
    98  .  .  .  Lparen: -
    99  .  .  .  Specs: []ast.Spec (len = 1) {
   100  .  .  .  .  0: *ast.TypeSpec {
   101  .  .  .  .  .  Name: *ast.Ident {
   102  .  .  .  .  .  .  NamePos: source.go:110:6
   103  .  .  .  .  .  .  Name: "marble"
   104  .  .  .  .  .  .  Obj: *ast.Object {
   105  .  .  .  .  .  .  .  Kind: type
   106  .  .  .  .  .  .  .  Name: "marble"
   107  .  .  .  .  .  .  .  Decl: *(obj @ 100)
   108  .  .  .  .  .  .  }
   109  .  .  .  .  .  }
   110  .  .  .  .  .  Assign: -
   111  .  .  .  .  .  Type: *ast.StructType {
   112  .  .  .  .  .  .  Struct: source.go:110:13
   113  .  .  .  .  .  .  Fields: *ast.FieldList {
   114  .  .  .  .  .  .  .  Opening: source.go:110:20
   115  .  .  .  .  .  .  .  List: []*ast.Field (len = 5) {
   116  .  .  .  .  .  .  .  .  0: *ast.Field {
   117  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   118  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   119  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:111:2
   120  .  .  .  .  .  .  .  .  .  .  .  Name: "ObjectType"
   121  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   122  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   123  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ObjectType"
   124  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 116)
   125  .  .  .  .  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   129  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:111:13
   130  .  .  .  .  .  .  .  .  .  .  Name: "string"
   131  .  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   133  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:111:20
   134  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   135  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"docType\"`"
   136  .  .  .  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  .  .  1: *ast.Field {
   139  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   140  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   141  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:112:2
   142  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   143  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   144  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   145  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   146  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 138)
   147  .  .  .  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  .  .  .  }
   150  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   151  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:112:13
   152  .  .  .  .  .  .  .  .  .  .  Name: "string"
   153  .  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   155  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:112:20
   156  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   157  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"name\"`"
   158  .  .  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  2: *ast.Field {
   161  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   162  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   163  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:113:2
   164  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
   165  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   166  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   167  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
   168  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 160)
   169  .  .  .  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  .  .  }
   172  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   173  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:113:13
   174  .  .  .  .  .  .  .  .  .  .  Name: "string"
   175  .  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   177  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:113:20
   178  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   179  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"color\"`"
   180  .  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  .  .  3: *ast.Field {
   183  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   184  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   185  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:114:2
   186  .  .  .  .  .  .  .  .  .  .  .  Name: "Size"
   187  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   188  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   189  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Size"
   190  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 182)
   191  .  .  .  .  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  .  .  .  .  }
   193  .  .  .  .  .  .  .  .  .  }
   194  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   195  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:114:13
   196  .  .  .  .  .  .  .  .  .  .  Name: "int"
   197  .  .  .  .  .  .  .  .  .  }
   198  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   199  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:114:20
   200  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   201  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"size\"`"
   202  .  .  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  .  .  }
   204  .  .  .  .  .  .  .  .  4: *ast.Field {
   205  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   206  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   207  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:115:2
   208  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
   209  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   210  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   211  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
   212  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 204)
   213  .  .  .  .  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   217  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:115:13
   218  .  .  .  .  .  .  .  .  .  .  Name: "string"
   219  .  .  .  .  .  .  .  .  .  }
   220  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   221  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:115:20
   222  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   223  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"owner\"`"
   224  .  .  .  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  Closing: source.go:116:1
   228  .  .  .  .  .  .  }
   229  .  .  .  .  .  .  Incomplete: false
   230  .  .  .  .  .  }
   231  .  .  .  .  }
   232  .  .  .  }
   233  .  .  .  Rparen: -
   234  .  .  }
   235  .  .  3: *ast.GenDecl {
   236  .  .  .  TokPos: source.go:118:1
   237  .  .  .  Tok: type
   238  .  .  .  Lparen: -
   239  .  .  .  Specs: []ast.Spec (len = 1) {
   240  .  .  .  .  0: *ast.TypeSpec {
   241  .  .  .  .  .  Name: *ast.Ident {
   242  .  .  .  .  .  .  NamePos: source.go:118:6
   243  .  .  .  .  .  .  Name: "marblePrivateDetails"
   244  .  .  .  .  .  .  Obj: *ast.Object {
   245  .  .  .  .  .  .  .  Kind: type
   246  .  .  .  .  .  .  .  Name: "marblePrivateDetails"
   247  .  .  .  .  .  .  .  Decl: *(obj @ 240)
   248  .  .  .  .  .  .  }
   249  .  .  .  .  .  }
   250  .  .  .  .  .  Assign: -
   251  .  .  .  .  .  Type: *ast.StructType {
   252  .  .  .  .  .  .  Struct: source.go:118:27
   253  .  .  .  .  .  .  Fields: *ast.FieldList {
   254  .  .  .  .  .  .  .  Opening: source.go:118:34
   255  .  .  .  .  .  .  .  List: []*ast.Field (len = 3) {
   256  .  .  .  .  .  .  .  .  0: *ast.Field {
   257  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   258  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   259  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:119:2
   260  .  .  .  .  .  .  .  .  .  .  .  Name: "ObjectType"
   261  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   262  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   263  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ObjectType"
   264  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 256)
   265  .  .  .  .  .  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  .  .  }
   268  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   269  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:119:13
   270  .  .  .  .  .  .  .  .  .  .  Name: "string"
   271  .  .  .  .  .  .  .  .  .  }
   272  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   273  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:119:20
   274  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   275  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"docType\"`"
   276  .  .  .  .  .  .  .  .  .  }
   277  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  .  1: *ast.Field {
   279  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   280  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   281  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:120:2
   282  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   283  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   284  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   285  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   286  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 278)
   287  .  .  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  .  .  }
   290  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   291  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:120:13
   292  .  .  .  .  .  .  .  .  .  .  Name: "string"
   293  .  .  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   295  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:120:20
   296  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   297  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"name\"`"
   298  .  .  .  .  .  .  .  .  .  }
   299  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  .  2: *ast.Field {
   301  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   302  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   303  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:121:2
   304  .  .  .  .  .  .  .  .  .  .  .  Name: "Price"
   305  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   306  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   307  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Price"
   308  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 300)
   309  .  .  .  .  .  .  .  .  .  .  .  }
   310  .  .  .  .  .  .  .  .  .  .  }
   311  .  .  .  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   313  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:121:13
   314  .  .  .  .  .  .  .  .  .  .  Name: "int"
   315  .  .  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   317  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:121:20
   318  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   319  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"price\"`"
   320  .  .  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  Closing: source.go:122:1
   324  .  .  .  .  .  .  }
   325  .  .  .  .  .  .  Incomplete: false
   326  .  .  .  .  .  }
   327  .  .  .  .  }
   328  .  .  .  }
   329  .  .  .  Rparen: -
   330  .  .  }
   331  .  .  4: *ast.FuncDecl {
   332  .  .  .  Name: *ast.Ident {
   333  .  .  .  .  NamePos: source.go:127:6
   334  .  .  .  .  Name: "main"
   335  .  .  .  .  Obj: *ast.Object {
   336  .  .  .  .  .  Kind: func
   337  .  .  .  .  .  Name: "main"
   338  .  .  .  .  .  Decl: *(obj @ 331)
   339  .  .  .  .  }
   340  .  .  .  }
   341  .  .  .  Type: *ast.FuncType {
   342  .  .  .  .  Func: source.go:127:1
   343  .  .  .  .  Params: *ast.FieldList {
   344  .  .  .  .  .  Opening: source.go:127:10
   345  .  .  .  .  .  Closing: source.go:127:11
   346  .  .  .  .  }
   347  .  .  .  }
   348  .  .  .  Body: *ast.BlockStmt {
   349  .  .  .  .  Lbrace: source.go:127:13
   350  .  .  .  .  List: []ast.Stmt (len = 2) {
   351  .  .  .  .  .  0: *ast.AssignStmt {
   352  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   353  .  .  .  .  .  .  .  0: *ast.Ident {
   354  .  .  .  .  .  .  .  .  NamePos: source.go:128:2
   355  .  .  .  .  .  .  .  .  Name: "err"
   356  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   357  .  .  .  .  .  .  .  .  .  Kind: var
   358  .  .  .  .  .  .  .  .  .  Name: "err"
   359  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 351)
   360  .  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  .  }
   362  .  .  .  .  .  .  }
   363  .  .  .  .  .  .  TokPos: source.go:128:6
   364  .  .  .  .  .  .  Tok: :=
   365  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   366  .  .  .  .  .  .  .  0: *ast.CallExpr {
   367  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   368  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   369  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:128:9
   370  .  .  .  .  .  .  .  .  .  .  Name: "shim"
   371  .  .  .  .  .  .  .  .  .  }
   372  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   373  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:128:14
   374  .  .  .  .  .  .  .  .  .  .  Name: "Start"
   375  .  .  .  .  .  .  .  .  .  }
   376  .  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  .  .  Lparen: source.go:128:19
   378  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   379  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   380  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   381  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:128:20
   382  .  .  .  .  .  .  .  .  .  .  .  Name: "new"
   383  .  .  .  .  .  .  .  .  .  .  }
   384  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:128:23
   385  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   386  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   387  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:128:24
   388  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
   389  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
   390  .  .  .  .  .  .  .  .  .  .  .  }
   391  .  .  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   393  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:128:39
   394  .  .  .  .  .  .  .  .  .  }
   395  .  .  .  .  .  .  .  .  }
   396  .  .  .  .  .  .  .  .  Ellipsis: -
   397  .  .  .  .  .  .  .  .  Rparen: source.go:128:40
   398  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  }
   400  .  .  .  .  .  }
   401  .  .  .  .  .  1: *ast.IfStmt {
   402  .  .  .  .  .  .  If: source.go:129:2
   403  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   404  .  .  .  .  .  .  .  X: *ast.Ident {
   405  .  .  .  .  .  .  .  .  NamePos: source.go:129:5
   406  .  .  .  .  .  .  .  .  Name: "err"
   407  .  .  .  .  .  .  .  .  Obj: *(obj @ 356)
   408  .  .  .  .  .  .  .  }
   409  .  .  .  .  .  .  .  OpPos: source.go:129:9
   410  .  .  .  .  .  .  .  Op: !=
   411  .  .  .  .  .  .  .  Y: *ast.Ident {
   412  .  .  .  .  .  .  .  .  NamePos: source.go:129:12
   413  .  .  .  .  .  .  .  .  Name: "nil"
   414  .  .  .  .  .  .  .  }
   415  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  Body: *ast.BlockStmt {
   417  .  .  .  .  .  .  .  Lbrace: source.go:129:16
   418  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   419  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   420  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   421  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   422  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   423  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:130:3
   424  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   425  .  .  .  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   427  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:130:7
   428  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
   429  .  .  .  .  .  .  .  .  .  .  .  }
   430  .  .  .  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:130:13
   432  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   433  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   434  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:130:14
   435  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   436  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Error starting Simple chaincode: %s\""
   437  .  .  .  .  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   439  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:130:53
   440  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
   441  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 356)
   442  .  .  .  .  .  .  .  .  .  .  .  }
   443  .  .  .  .  .  .  .  .  .  .  }
   444  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   445  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:130:56
   446  .  .  .  .  .  .  .  .  .  }
   447  .  .  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  .  }
   449  .  .  .  .  .  .  .  Rbrace: source.go:131:2
   450  .  .  .  .  .  .  }
   451  .  .  .  .  .  }
   452  .  .  .  .  }
   453  .  .  .  .  Rbrace: source.go:132:1
   454  .  .  .  }
   455  .  .  }
   456  .  .  5: *ast.FuncDecl {
   457  .  .  .  Recv: *ast.FieldList {
   458  .  .  .  .  Opening: source.go:136:6
   459  .  .  .  .  List: []*ast.Field (len = 1) {
   460  .  .  .  .  .  0: *ast.Field {
   461  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   462  .  .  .  .  .  .  .  0: *ast.Ident {
   463  .  .  .  .  .  .  .  .  NamePos: source.go:136:7
   464  .  .  .  .  .  .  .  .  Name: "t"
   465  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   466  .  .  .  .  .  .  .  .  .  Kind: var
   467  .  .  .  .  .  .  .  .  .  Name: "t"
   468  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 460)
   469  .  .  .  .  .  .  .  .  }
   470  .  .  .  .  .  .  .  }
   471  .  .  .  .  .  .  }
   472  .  .  .  .  .  .  Type: *ast.StarExpr {
   473  .  .  .  .  .  .  .  Star: source.go:136:9
   474  .  .  .  .  .  .  .  X: *ast.Ident {
   475  .  .  .  .  .  .  .  .  NamePos: source.go:136:10
   476  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
   477  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
   478  .  .  .  .  .  .  .  }
   479  .  .  .  .  .  .  }
   480  .  .  .  .  .  }
   481  .  .  .  .  }
   482  .  .  .  .  Closing: source.go:136:25
   483  .  .  .  }
   484  .  .  .  Name: *ast.Ident {
   485  .  .  .  .  NamePos: source.go:136:27
   486  .  .  .  .  Name: "Init"
   487  .  .  .  }
   488  .  .  .  Type: *ast.FuncType {
   489  .  .  .  .  Func: source.go:136:1
   490  .  .  .  .  Params: *ast.FieldList {
   491  .  .  .  .  .  Opening: source.go:136:31
   492  .  .  .  .  .  List: []*ast.Field (len = 1) {
   493  .  .  .  .  .  .  0: *ast.Field {
   494  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   495  .  .  .  .  .  .  .  .  0: *ast.Ident {
   496  .  .  .  .  .  .  .  .  .  NamePos: source.go:136:32
   497  .  .  .  .  .  .  .  .  .  Name: "stub"
   498  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   499  .  .  .  .  .  .  .  .  .  .  Kind: var
   500  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   501  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 493)
   502  .  .  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  .  .  }
   504  .  .  .  .  .  .  .  }
   505  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   506  .  .  .  .  .  .  .  .  X: *ast.Ident {
   507  .  .  .  .  .  .  .  .  .  NamePos: source.go:136:37
   508  .  .  .  .  .  .  .  .  .  Name: "shim"
   509  .  .  .  .  .  .  .  .  }
   510  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   511  .  .  .  .  .  .  .  .  .  NamePos: source.go:136:42
   512  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
   513  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  }
   516  .  .  .  .  .  }
   517  .  .  .  .  .  Closing: source.go:136:64
   518  .  .  .  .  }
   519  .  .  .  .  Results: *ast.FieldList {
   520  .  .  .  .  .  Opening: -
   521  .  .  .  .  .  List: []*ast.Field (len = 1) {
   522  .  .  .  .  .  .  0: *ast.Field {
   523  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   524  .  .  .  .  .  .  .  .  X: *ast.Ident {
   525  .  .  .  .  .  .  .  .  .  NamePos: source.go:136:66
   526  .  .  .  .  .  .  .  .  .  Name: "pb"
   527  .  .  .  .  .  .  .  .  }
   528  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   529  .  .  .  .  .  .  .  .  .  NamePos: source.go:136:69
   530  .  .  .  .  .  .  .  .  .  Name: "Response"
   531  .  .  .  .  .  .  .  .  }
   532  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  }
   534  .  .  .  .  .  }
   535  .  .  .  .  .  Closing: -
   536  .  .  .  .  }
   537  .  .  .  }
   538  .  .  .  Body: *ast.BlockStmt {
   539  .  .  .  .  Lbrace: source.go:136:78
   540  .  .  .  .  List: []ast.Stmt (len = 1) {
   541  .  .  .  .  .  0: *ast.ReturnStmt {
   542  .  .  .  .  .  .  Return: source.go:137:2
   543  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   544  .  .  .  .  .  .  .  0: *ast.CallExpr {
   545  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   546  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   547  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:137:9
   548  .  .  .  .  .  .  .  .  .  .  Name: "shim"
   549  .  .  .  .  .  .  .  .  .  }
   550  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   551  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:137:14
   552  .  .  .  .  .  .  .  .  .  .  Name: "Success"
   553  .  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  .  Lparen: source.go:137:21
   556  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   557  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   558  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:137:22
   559  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   560  .  .  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  .  .  }
   562  .  .  .  .  .  .  .  .  Ellipsis: -
   563  .  .  .  .  .  .  .  .  Rparen: source.go:137:25
   564  .  .  .  .  .  .  .  }
   565  .  .  .  .  .  .  }
   566  .  .  .  .  .  }
   567  .  .  .  .  }
   568  .  .  .  .  Rbrace: source.go:138:1
   569  .  .  .  }
   570  .  .  }
   571  .  .  6: *ast.FuncDecl {
   572  .  .  .  Recv: *ast.FieldList {
   573  .  .  .  .  Opening: source.go:142:6
   574  .  .  .  .  List: []*ast.Field (len = 1) {
   575  .  .  .  .  .  0: *ast.Field {
   576  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   577  .  .  .  .  .  .  .  0: *ast.Ident {
   578  .  .  .  .  .  .  .  .  NamePos: source.go:142:7
   579  .  .  .  .  .  .  .  .  Name: "t"
   580  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   581  .  .  .  .  .  .  .  .  .  Kind: var
   582  .  .  .  .  .  .  .  .  .  Name: "t"
   583  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 575)
   584  .  .  .  .  .  .  .  .  }
   585  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  Type: *ast.StarExpr {
   588  .  .  .  .  .  .  .  Star: source.go:142:9
   589  .  .  .  .  .  .  .  X: *ast.Ident {
   590  .  .  .  .  .  .  .  .  NamePos: source.go:142:10
   591  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
   592  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
   593  .  .  .  .  .  .  .  }
   594  .  .  .  .  .  .  }
   595  .  .  .  .  .  }
   596  .  .  .  .  }
   597  .  .  .  .  Closing: source.go:142:25
   598  .  .  .  }
   599  .  .  .  Name: *ast.Ident {
   600  .  .  .  .  NamePos: source.go:142:27
   601  .  .  .  .  Name: "Invoke"
   602  .  .  .  }
   603  .  .  .  Type: *ast.FuncType {
   604  .  .  .  .  Func: source.go:142:1
   605  .  .  .  .  Params: *ast.FieldList {
   606  .  .  .  .  .  Opening: source.go:142:33
   607  .  .  .  .  .  List: []*ast.Field (len = 1) {
   608  .  .  .  .  .  .  0: *ast.Field {
   609  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   610  .  .  .  .  .  .  .  .  0: *ast.Ident {
   611  .  .  .  .  .  .  .  .  .  NamePos: source.go:142:34
   612  .  .  .  .  .  .  .  .  .  Name: "stub"
   613  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   614  .  .  .  .  .  .  .  .  .  .  Kind: var
   615  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   616  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 608)
   617  .  .  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  .  }
   619  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   621  .  .  .  .  .  .  .  .  X: *ast.Ident {
   622  .  .  .  .  .  .  .  .  .  NamePos: source.go:142:39
   623  .  .  .  .  .  .  .  .  .  Name: "shim"
   624  .  .  .  .  .  .  .  .  }
   625  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   626  .  .  .  .  .  .  .  .  .  NamePos: source.go:142:44
   627  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
   628  .  .  .  .  .  .  .  .  }
   629  .  .  .  .  .  .  .  }
   630  .  .  .  .  .  .  }
   631  .  .  .  .  .  }
   632  .  .  .  .  .  Closing: source.go:142:66
   633  .  .  .  .  }
   634  .  .  .  .  Results: *ast.FieldList {
   635  .  .  .  .  .  Opening: -
   636  .  .  .  .  .  List: []*ast.Field (len = 1) {
   637  .  .  .  .  .  .  0: *ast.Field {
   638  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   639  .  .  .  .  .  .  .  .  X: *ast.Ident {
   640  .  .  .  .  .  .  .  .  .  NamePos: source.go:142:68
   641  .  .  .  .  .  .  .  .  .  Name: "pb"
   642  .  .  .  .  .  .  .  .  }
   643  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   644  .  .  .  .  .  .  .  .  .  NamePos: source.go:142:71
   645  .  .  .  .  .  .  .  .  .  Name: "Response"
   646  .  .  .  .  .  .  .  .  }
   647  .  .  .  .  .  .  .  }
   648  .  .  .  .  .  .  }
   649  .  .  .  .  .  }
   650  .  .  .  .  .  Closing: -
   651  .  .  .  .  }
   652  .  .  .  }
   653  .  .  .  Body: *ast.BlockStmt {
   654  .  .  .  .  Lbrace: source.go:142:80
   655  .  .  .  .  List: []ast.Stmt (len = 3) {
   656  .  .  .  .  .  0: *ast.AssignStmt {
   657  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   658  .  .  .  .  .  .  .  0: *ast.Ident {
   659  .  .  .  .  .  .  .  .  NamePos: source.go:143:2
   660  .  .  .  .  .  .  .  .  Name: "function"
   661  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   662  .  .  .  .  .  .  .  .  .  Kind: var
   663  .  .  .  .  .  .  .  .  .  Name: "function"
   664  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 656)
   665  .  .  .  .  .  .  .  .  }
   666  .  .  .  .  .  .  .  }
   667  .  .  .  .  .  .  .  1: *ast.Ident {
   668  .  .  .  .  .  .  .  .  NamePos: source.go:143:12
   669  .  .  .  .  .  .  .  .  Name: "args"
   670  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   671  .  .  .  .  .  .  .  .  .  Kind: var
   672  .  .  .  .  .  .  .  .  .  Name: "args"
   673  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 656)
   674  .  .  .  .  .  .  .  .  }
   675  .  .  .  .  .  .  .  }
   676  .  .  .  .  .  .  }
   677  .  .  .  .  .  .  TokPos: source.go:143:17
   678  .  .  .  .  .  .  Tok: :=
   679  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   680  .  .  .  .  .  .  .  0: *ast.CallExpr {
   681  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   682  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   683  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:143:20
   684  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   685  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
   686  .  .  .  .  .  .  .  .  .  }
   687  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   688  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:143:25
   689  .  .  .  .  .  .  .  .  .  .  Name: "GetFunctionAndParameters"
   690  .  .  .  .  .  .  .  .  .  }
   691  .  .  .  .  .  .  .  .  }
   692  .  .  .  .  .  .  .  .  Lparen: source.go:143:49
   693  .  .  .  .  .  .  .  .  Ellipsis: -
   694  .  .  .  .  .  .  .  .  Rparen: source.go:143:50
   695  .  .  .  .  .  .  .  }
   696  .  .  .  .  .  .  }
   697  .  .  .  .  .  }
   698  .  .  .  .  .  1: *ast.ExprStmt {
   699  .  .  .  .  .  .  X: *ast.CallExpr {
   700  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   701  .  .  .  .  .  .  .  .  X: *ast.Ident {
   702  .  .  .  .  .  .  .  .  .  NamePos: source.go:144:2
   703  .  .  .  .  .  .  .  .  .  Name: "fmt"
   704  .  .  .  .  .  .  .  .  }
   705  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   706  .  .  .  .  .  .  .  .  .  NamePos: source.go:144:6
   707  .  .  .  .  .  .  .  .  .  Name: "Println"
   708  .  .  .  .  .  .  .  .  }
   709  .  .  .  .  .  .  .  }
   710  .  .  .  .  .  .  .  Lparen: source.go:144:13
   711  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   712  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   713  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   714  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:144:14
   715  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   716  .  .  .  .  .  .  .  .  .  .  Value: "\"invoke is running \""
   717  .  .  .  .  .  .  .  .  .  }
   718  .  .  .  .  .  .  .  .  .  OpPos: source.go:144:35
   719  .  .  .  .  .  .  .  .  .  Op: +
   720  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   721  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:144:37
   722  .  .  .  .  .  .  .  .  .  .  Name: "function"
   723  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 661)
   724  .  .  .  .  .  .  .  .  .  }
   725  .  .  .  .  .  .  .  .  }
   726  .  .  .  .  .  .  .  }
   727  .  .  .  .  .  .  .  Ellipsis: -
   728  .  .  .  .  .  .  .  Rparen: source.go:144:45
   729  .  .  .  .  .  .  }
   730  .  .  .  .  .  }
   731  .  .  .  .  .  2: *ast.SwitchStmt {
   732  .  .  .  .  .  .  Switch: source.go:147:2
   733  .  .  .  .  .  .  Tag: *ast.Ident {
   734  .  .  .  .  .  .  .  NamePos: source.go:147:9
   735  .  .  .  .  .  .  .  Name: "function"
   736  .  .  .  .  .  .  .  Obj: *(obj @ 661)
   737  .  .  .  .  .  .  }
   738  .  .  .  .  .  .  Body: *ast.BlockStmt {
   739  .  .  .  .  .  .  .  Lbrace: source.go:147:18
   740  .  .  .  .  .  .  .  List: []ast.Stmt (len = 10) {
   741  .  .  .  .  .  .  .  .  0: *ast.CaseClause {
   742  .  .  .  .  .  .  .  .  .  Case: source.go:148:2
   743  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   744  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   745  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:148:7
   746  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   747  .  .  .  .  .  .  .  .  .  .  .  Value: "\"initMarble\""
   748  .  .  .  .  .  .  .  .  .  .  }
   749  .  .  .  .  .  .  .  .  .  }
   750  .  .  .  .  .  .  .  .  .  Colon: source.go:148:19
   751  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   752  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   753  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:150:3
   754  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   755  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   756  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:150:10
   759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
   761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:150:12
   764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "initMarble"
   765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   766  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   767  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:150:22
   768  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:150:23
   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
   773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:150:29
   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   779  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   780  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   781  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:150:33
   782  .  .  .  .  .  .  .  .  .  .  .  .  }
   783  .  .  .  .  .  .  .  .  .  .  .  }
   784  .  .  .  .  .  .  .  .  .  .  }
   785  .  .  .  .  .  .  .  .  .  }
   786  .  .  .  .  .  .  .  .  }
   787  .  .  .  .  .  .  .  .  1: *ast.CaseClause {
   788  .  .  .  .  .  .  .  .  .  Case: source.go:151:2
   789  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   790  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   791  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:151:7
   792  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   793  .  .  .  .  .  .  .  .  .  .  .  Value: "\"readMarble\""
   794  .  .  .  .  .  .  .  .  .  .  }
   795  .  .  .  .  .  .  .  .  .  }
   796  .  .  .  .  .  .  .  .  .  Colon: source.go:151:19
   797  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   798  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   799  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:153:3
   800  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   801  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   802  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:153:10
   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:153:12
   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "readMarble"
   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   812  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   813  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:153:22
   814  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:153:23
   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:153:29
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
   824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   825  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   826  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:153:33
   828  .  .  .  .  .  .  .  .  .  .  .  .  }
   829  .  .  .  .  .  .  .  .  .  .  .  }
   830  .  .  .  .  .  .  .  .  .  .  }
   831  .  .  .  .  .  .  .  .  .  }
   832  .  .  .  .  .  .  .  .  }
   833  .  .  .  .  .  .  .  .  2: *ast.CaseClause {
   834  .  .  .  .  .  .  .  .  .  Case: source.go:154:2
   835  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   836  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   837  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:154:7
   838  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   839  .  .  .  .  .  .  .  .  .  .  .  Value: "\"readMarblePrivateDetails\""
   840  .  .  .  .  .  .  .  .  .  .  }
   841  .  .  .  .  .  .  .  .  .  }
   842  .  .  .  .  .  .  .  .  .  Colon: source.go:154:33
   843  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   844  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   845  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:156:3
   846  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   847  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   848  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:156:10
   851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
   853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:156:12
   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "readMarblePrivateDetails"
   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   858  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   859  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:156:36
   860  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:156:37
   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:156:43
   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   871  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   872  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   873  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:156:47
   874  .  .  .  .  .  .  .  .  .  .  .  .  }
   875  .  .  .  .  .  .  .  .  .  .  .  }
   876  .  .  .  .  .  .  .  .  .  .  }
   877  .  .  .  .  .  .  .  .  .  }
   878  .  .  .  .  .  .  .  .  }
   879  .  .  .  .  .  .  .  .  3: *ast.CaseClause {
   880  .  .  .  .  .  .  .  .  .  Case: source.go:157:2
   881  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   882  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   883  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:157:7
   884  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   885  .  .  .  .  .  .  .  .  .  .  .  Value: "\"transferMarble\""
   886  .  .  .  .  .  .  .  .  .  .  }
   887  .  .  .  .  .  .  .  .  .  }
   888  .  .  .  .  .  .  .  .  .  Colon: source.go:157:23
   889  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   890  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   891  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:159:3
   892  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   893  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   894  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   895  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   896  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:159:10
   897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
   899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:159:12
   902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "transferMarble"
   903  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   904  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   905  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:159:26
   906  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:159:27
   909  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   910  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
   911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:159:33
   914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   915  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
   916  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   917  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   918  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   919  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:159:37
   920  .  .  .  .  .  .  .  .  .  .  .  .  }
   921  .  .  .  .  .  .  .  .  .  .  .  }
   922  .  .  .  .  .  .  .  .  .  .  }
   923  .  .  .  .  .  .  .  .  .  }
   924  .  .  .  .  .  .  .  .  }
   925  .  .  .  .  .  .  .  .  4: *ast.CaseClause {
   926  .  .  .  .  .  .  .  .  .  Case: source.go:160:2
   927  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   928  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   929  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:160:7
   930  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   931  .  .  .  .  .  .  .  .  .  .  .  Value: "\"delete\""
   932  .  .  .  .  .  .  .  .  .  .  }
   933  .  .  .  .  .  .  .  .  .  }
   934  .  .  .  .  .  .  .  .  .  Colon: source.go:160:15
   935  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   936  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   937  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:162:3
   938  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   939  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   940  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:162:10
   943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
   945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:162:12
   948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "delete"
   949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   950  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   951  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:162:18
   952  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:162:19
   955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
   956  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
   957  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:162:25
   960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
   962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   963  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   964  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   965  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:162:29
   966  .  .  .  .  .  .  .  .  .  .  .  .  }
   967  .  .  .  .  .  .  .  .  .  .  .  }
   968  .  .  .  .  .  .  .  .  .  .  }
   969  .  .  .  .  .  .  .  .  .  }
   970  .  .  .  .  .  .  .  .  }
   971  .  .  .  .  .  .  .  .  5: *ast.CaseClause {
   972  .  .  .  .  .  .  .  .  .  Case: source.go:163:2
   973  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
   974  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   975  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:163:7
   976  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   977  .  .  .  .  .  .  .  .  .  .  .  Value: "\"queryMarblesByOwner\""
   978  .  .  .  .  .  .  .  .  .  .  }
   979  .  .  .  .  .  .  .  .  .  }
   980  .  .  .  .  .  .  .  .  .  Colon: source.go:163:28
   981  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
   982  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   983  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:165:3
   984  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   985  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   986  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:165:10
   989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
   991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:165:12
   994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryMarblesByOwner"
   995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   996  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   997  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:165:31
   998  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:165:32
  1001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
  1003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:165:38
  1006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
  1008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1009  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1010  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1011  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:165:42
  1012  .  .  .  .  .  .  .  .  .  .  .  .  }
  1013  .  .  .  .  .  .  .  .  .  .  .  }
  1014  .  .  .  .  .  .  .  .  .  .  }
  1015  .  .  .  .  .  .  .  .  .  }
  1016  .  .  .  .  .  .  .  .  }
  1017  .  .  .  .  .  .  .  .  6: *ast.CaseClause {
  1018  .  .  .  .  .  .  .  .  .  Case: source.go:166:2
  1019  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
  1020  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1021  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:166:7
  1022  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1023  .  .  .  .  .  .  .  .  .  .  .  Value: "\"queryMarbles\""
  1024  .  .  .  .  .  .  .  .  .  .  }
  1025  .  .  .  .  .  .  .  .  .  }
  1026  .  .  .  .  .  .  .  .  .  Colon: source.go:166:21
  1027  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
  1028  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1029  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:168:3
  1030  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1031  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1032  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:168:10
  1035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
  1037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:168:12
  1040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryMarbles"
  1041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1042  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1043  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:168:24
  1044  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:168:25
  1047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
  1049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:168:31
  1052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
  1054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1055  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1056  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1057  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:168:35
  1058  .  .  .  .  .  .  .  .  .  .  .  .  }
  1059  .  .  .  .  .  .  .  .  .  .  .  }
  1060  .  .  .  .  .  .  .  .  .  .  }
  1061  .  .  .  .  .  .  .  .  .  }
  1062  .  .  .  .  .  .  .  .  }
  1063  .  .  .  .  .  .  .  .  7: *ast.CaseClause {
  1064  .  .  .  .  .  .  .  .  .  Case: source.go:169:2
  1065  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
  1066  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1067  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:169:7
  1068  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1069  .  .  .  .  .  .  .  .  .  .  .  Value: "\"getMarblesByRange\""
  1070  .  .  .  .  .  .  .  .  .  .  }
  1071  .  .  .  .  .  .  .  .  .  }
  1072  .  .  .  .  .  .  .  .  .  Colon: source.go:169:26
  1073  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
  1074  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1075  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:171:3
  1076  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1077  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1078  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1080  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:171:10
  1081  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1082  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
  1083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:171:12
  1086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "getMarblesByRange"
  1087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1088  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1089  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:171:29
  1090  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:171:30
  1093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
  1095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:171:36
  1098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
  1100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1101  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1102  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1103  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:171:40
  1104  .  .  .  .  .  .  .  .  .  .  .  .  }
  1105  .  .  .  .  .  .  .  .  .  .  .  }
  1106  .  .  .  .  .  .  .  .  .  .  }
  1107  .  .  .  .  .  .  .  .  .  }
  1108  .  .  .  .  .  .  .  .  }
  1109  .  .  .  .  .  .  .  .  8: *ast.CaseClause {
  1110  .  .  .  .  .  .  .  .  .  Case: source.go:172:2
  1111  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
  1112  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1113  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:172:7
  1114  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1115  .  .  .  .  .  .  .  .  .  .  .  Value: "\"getMarbleHash\""
  1116  .  .  .  .  .  .  .  .  .  .  }
  1117  .  .  .  .  .  .  .  .  .  }
  1118  .  .  .  .  .  .  .  .  .  Colon: source.go:172:22
  1119  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
  1120  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1121  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:174:3
  1122  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1123  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1124  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:174:10
  1127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 580)
  1129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:174:12
  1132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "getMarbleHash"
  1133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1134  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1135  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:174:25
  1136  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:174:26
  1139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 613)
  1141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:174:32
  1144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 670)
  1146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1147  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1148  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1149  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:174:36
  1150  .  .  .  .  .  .  .  .  .  .  .  .  }
  1151  .  .  .  .  .  .  .  .  .  .  .  }
  1152  .  .  .  .  .  .  .  .  .  .  }
  1153  .  .  .  .  .  .  .  .  .  }
  1154  .  .  .  .  .  .  .  .  }
  1155  .  .  .  .  .  .  .  .  9: *ast.CaseClause {
  1156  .  .  .  .  .  .  .  .  .  Case: source.go:175:2
  1157  .  .  .  .  .  .  .  .  .  Colon: source.go:175:9
  1158  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 2) {
  1159  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  1160  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1161  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1162  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:177:3
  1164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1165  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1166  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:177:7
  1168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
  1169  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1170  .  .  .  .  .  .  .  .  .  .  .  .  }
  1171  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:177:14
  1172  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1173  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  1175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:177:15
  1176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"invoke did not find func: \""
  1178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:177:44
  1180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  1181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  1182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:177:46
  1183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "function"
  1184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 661)
  1185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1186  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1187  .  .  .  .  .  .  .  .  .  .  .  .  }
  1188  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1189  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:177:54
  1190  .  .  .  .  .  .  .  .  .  .  .  }
  1191  .  .  .  .  .  .  .  .  .  .  }
  1192  .  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
  1193  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:178:3
  1194  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1195  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1196  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:178:10
  1199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:178:15
  1203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1205  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1206  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:178:20
  1207  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:178:21
  1210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Received unknown function invocation\""
  1212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1213  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1214  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1215  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:178:59
  1216  .  .  .  .  .  .  .  .  .  .  .  .  }
  1217  .  .  .  .  .  .  .  .  .  .  .  }
  1218  .  .  .  .  .  .  .  .  .  .  }
  1219  .  .  .  .  .  .  .  .  .  }
  1220  .  .  .  .  .  .  .  .  }
  1221  .  .  .  .  .  .  .  }
  1222  .  .  .  .  .  .  .  Rbrace: source.go:179:2
  1223  .  .  .  .  .  .  }
  1224  .  .  .  .  .  }
  1225  .  .  .  .  }
  1226  .  .  .  .  Rbrace: source.go:180:1
  1227  .  .  .  }
  1228  .  .  }
  1229  .  .  7: *ast.FuncDecl {
  1230  .  .  .  Recv: *ast.FieldList {
  1231  .  .  .  .  Opening: source.go:185:6
  1232  .  .  .  .  List: []*ast.Field (len = 1) {
  1233  .  .  .  .  .  0: *ast.Field {
  1234  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1235  .  .  .  .  .  .  .  0: *ast.Ident {
  1236  .  .  .  .  .  .  .  .  NamePos: source.go:185:7
  1237  .  .  .  .  .  .  .  .  Name: "t"
  1238  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1239  .  .  .  .  .  .  .  .  .  Kind: var
  1240  .  .  .  .  .  .  .  .  .  Name: "t"
  1241  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1233)
  1242  .  .  .  .  .  .  .  .  }
  1243  .  .  .  .  .  .  .  }
  1244  .  .  .  .  .  .  }
  1245  .  .  .  .  .  .  Type: *ast.StarExpr {
  1246  .  .  .  .  .  .  .  Star: source.go:185:9
  1247  .  .  .  .  .  .  .  X: *ast.Ident {
  1248  .  .  .  .  .  .  .  .  NamePos: source.go:185:10
  1249  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  1250  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  1251  .  .  .  .  .  .  .  }
  1252  .  .  .  .  .  .  }
  1253  .  .  .  .  .  }
  1254  .  .  .  .  }
  1255  .  .  .  .  Closing: source.go:185:25
  1256  .  .  .  }
  1257  .  .  .  Name: *ast.Ident {
  1258  .  .  .  .  NamePos: source.go:185:27
  1259  .  .  .  .  Name: "initMarble"
  1260  .  .  .  }
  1261  .  .  .  Type: *ast.FuncType {
  1262  .  .  .  .  Func: source.go:185:1
  1263  .  .  .  .  Params: *ast.FieldList {
  1264  .  .  .  .  .  Opening: source.go:185:37
  1265  .  .  .  .  .  List: []*ast.Field (len = 2) {
  1266  .  .  .  .  .  .  0: *ast.Field {
  1267  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1268  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1269  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:38
  1270  .  .  .  .  .  .  .  .  .  Name: "stub"
  1271  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1272  .  .  .  .  .  .  .  .  .  .  Kind: var
  1273  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1274  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1266)
  1275  .  .  .  .  .  .  .  .  .  }
  1276  .  .  .  .  .  .  .  .  }
  1277  .  .  .  .  .  .  .  }
  1278  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1279  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1280  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:43
  1281  .  .  .  .  .  .  .  .  .  Name: "shim"
  1282  .  .  .  .  .  .  .  .  }
  1283  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1284  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:48
  1285  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  1286  .  .  .  .  .  .  .  .  }
  1287  .  .  .  .  .  .  .  }
  1288  .  .  .  .  .  .  }
  1289  .  .  .  .  .  .  1: *ast.Field {
  1290  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1291  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1292  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:72
  1293  .  .  .  .  .  .  .  .  .  Name: "args"
  1294  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1295  .  .  .  .  .  .  .  .  .  .  Kind: var
  1296  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1297  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1289)
  1298  .  .  .  .  .  .  .  .  .  }
  1299  .  .  .  .  .  .  .  .  }
  1300  .  .  .  .  .  .  .  }
  1301  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1302  .  .  .  .  .  .  .  .  Lbrack: source.go:185:77
  1303  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  1304  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:79
  1305  .  .  .  .  .  .  .  .  .  Name: "string"
  1306  .  .  .  .  .  .  .  .  }
  1307  .  .  .  .  .  .  .  }
  1308  .  .  .  .  .  .  }
  1309  .  .  .  .  .  }
  1310  .  .  .  .  .  Closing: source.go:185:85
  1311  .  .  .  .  }
  1312  .  .  .  .  Results: *ast.FieldList {
  1313  .  .  .  .  .  Opening: -
  1314  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1315  .  .  .  .  .  .  0: *ast.Field {
  1316  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1317  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1318  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:87
  1319  .  .  .  .  .  .  .  .  .  Name: "pb"
  1320  .  .  .  .  .  .  .  .  }
  1321  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1322  .  .  .  .  .  .  .  .  .  NamePos: source.go:185:90
  1323  .  .  .  .  .  .  .  .  .  Name: "Response"
  1324  .  .  .  .  .  .  .  .  }
  1325  .  .  .  .  .  .  .  }
  1326  .  .  .  .  .  .  }
  1327  .  .  .  .  .  }
  1328  .  .  .  .  .  Closing: -
  1329  .  .  .  .  }
  1330  .  .  .  }
  1331  .  .  .  Body: *ast.BlockStmt {
  1332  .  .  .  .  Lbrace: source.go:185:99
  1333  .  .  .  .  List: []ast.Stmt (len = 36) {
  1334  .  .  .  .  .  0: *ast.DeclStmt {
  1335  .  .  .  .  .  .  Decl: *ast.GenDecl {
  1336  .  .  .  .  .  .  .  TokPos: source.go:186:2
  1337  .  .  .  .  .  .  .  Tok: var
  1338  .  .  .  .  .  .  .  Lparen: -
  1339  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  1340  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  1341  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1342  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1343  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:186:6
  1344  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1345  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1346  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1347  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1348  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1340)
  1349  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  1350  .  .  .  .  .  .  .  .  .  .  .  }
  1351  .  .  .  .  .  .  .  .  .  .  }
  1352  .  .  .  .  .  .  .  .  .  }
  1353  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1354  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:186:10
  1355  .  .  .  .  .  .  .  .  .  .  Name: "error"
  1356  .  .  .  .  .  .  .  .  .  }
  1357  .  .  .  .  .  .  .  .  }
  1358  .  .  .  .  .  .  .  }
  1359  .  .  .  .  .  .  .  Rparen: -
  1360  .  .  .  .  .  .  }
  1361  .  .  .  .  .  }
  1362  .  .  .  .  .  1: *ast.DeclStmt {
  1363  .  .  .  .  .  .  Decl: *ast.GenDecl {
  1364  .  .  .  .  .  .  .  TokPos: source.go:188:2
  1365  .  .  .  .  .  .  .  Tok: type
  1366  .  .  .  .  .  .  .  Lparen: -
  1367  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  1368  .  .  .  .  .  .  .  .  0: *ast.TypeSpec {
  1369  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
  1370  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:188:7
  1371  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransientInput"
  1372  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1373  .  .  .  .  .  .  .  .  .  .  .  Kind: type
  1374  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransientInput"
  1375  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1368)
  1376  .  .  .  .  .  .  .  .  .  .  }
  1377  .  .  .  .  .  .  .  .  .  }
  1378  .  .  .  .  .  .  .  .  .  Assign: -
  1379  .  .  .  .  .  .  .  .  .  Type: *ast.StructType {
  1380  .  .  .  .  .  .  .  .  .  .  Struct: source.go:188:28
  1381  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {
  1382  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:188:35
  1383  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 5) {
  1384  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  1385  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:189:3
  1388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  1389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1391  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  1392  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1384)
  1393  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1395  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1396  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1397  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:189:9
  1398  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  1399  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1400  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  1401  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:189:16
  1402  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1403  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"name\"`"
  1404  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1405  .  .  .  .  .  .  .  .  .  .  .  .  }
  1406  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
  1407  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1408  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1409  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:190:3
  1410  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  1411  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1412  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1413  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  1414  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1406)
  1415  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1416  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1417  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1418  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1419  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:190:9
  1420  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  1421  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1422  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  1423  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:190:16
  1424  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1425  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"color\"`"
  1426  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1427  .  .  .  .  .  .  .  .  .  .  .  .  }
  1428  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Field {
  1429  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1430  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1431  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:191:3
  1432  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Size"
  1433  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1434  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1435  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Size"
  1436  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1428)
  1437  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1438  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1439  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1440  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1441  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:191:9
  1442  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
  1443  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1444  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  1445  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:191:16
  1446  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1447  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"size\"`"
  1448  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1449  .  .  .  .  .  .  .  .  .  .  .  .  }
  1450  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Field {
  1451  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:192:3
  1454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  1455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  1458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1450)
  1459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1461  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1462  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:192:9
  1464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  1465  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1466  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  1467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:192:16
  1468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1469  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"owner\"`"
  1470  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1471  .  .  .  .  .  .  .  .  .  .  .  .  }
  1472  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.Field {
  1473  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1474  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1475  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:193:3
  1476  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Price"
  1477  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1478  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1479  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Price"
  1480  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1472)
  1481  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1482  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1483  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1484  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:193:9
  1486  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
  1487  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1488  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  1489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:193:16
  1490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1491  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"price\"`"
  1492  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1493  .  .  .  .  .  .  .  .  .  .  .  .  }
  1494  .  .  .  .  .  .  .  .  .  .  .  }
  1495  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:194:2
  1496  .  .  .  .  .  .  .  .  .  .  }
  1497  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  1498  .  .  .  .  .  .  .  .  .  }
  1499  .  .  .  .  .  .  .  .  }
  1500  .  .  .  .  .  .  .  }
  1501  .  .  .  .  .  .  .  Rparen: -
  1502  .  .  .  .  .  .  }
  1503  .  .  .  .  .  }
  1504  .  .  .  .  .  2: *ast.ExprStmt {
  1505  .  .  .  .  .  .  X: *ast.CallExpr {
  1506  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1507  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1508  .  .  .  .  .  .  .  .  .  NamePos: source.go:197:2
  1509  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1510  .  .  .  .  .  .  .  .  }
  1511  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1512  .  .  .  .  .  .  .  .  .  NamePos: source.go:197:6
  1513  .  .  .  .  .  .  .  .  .  Name: "Println"
  1514  .  .  .  .  .  .  .  .  }
  1515  .  .  .  .  .  .  .  }
  1516  .  .  .  .  .  .  .  Lparen: source.go:197:13
  1517  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1518  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1519  .  .  .  .  .  .  .  .  .  ValuePos: source.go:197:14
  1520  .  .  .  .  .  .  .  .  .  Kind: STRING
  1521  .  .  .  .  .  .  .  .  .  Value: "\"- start init marble\""
  1522  .  .  .  .  .  .  .  .  }
  1523  .  .  .  .  .  .  .  }
  1524  .  .  .  .  .  .  .  Ellipsis: -
  1525  .  .  .  .  .  .  .  Rparen: source.go:197:35
  1526  .  .  .  .  .  .  }
  1527  .  .  .  .  .  }
  1528  .  .  .  .  .  3: *ast.IfStmt {
  1529  .  .  .  .  .  .  If: source.go:199:2
  1530  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1531  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1532  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1533  .  .  .  .  .  .  .  .  .  NamePos: source.go:199:5
  1534  .  .  .  .  .  .  .  .  .  Name: "len"
  1535  .  .  .  .  .  .  .  .  }
  1536  .  .  .  .  .  .  .  .  Lparen: source.go:199:8
  1537  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1538  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1539  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:199:9
  1540  .  .  .  .  .  .  .  .  .  .  Name: "args"
  1541  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1294)
  1542  .  .  .  .  .  .  .  .  .  }
  1543  .  .  .  .  .  .  .  .  }
  1544  .  .  .  .  .  .  .  .  Ellipsis: -
  1545  .  .  .  .  .  .  .  .  Rparen: source.go:199:13
  1546  .  .  .  .  .  .  .  }
  1547  .  .  .  .  .  .  .  OpPos: source.go:199:15
  1548  .  .  .  .  .  .  .  Op: !=
  1549  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1550  .  .  .  .  .  .  .  .  ValuePos: source.go:199:18
  1551  .  .  .  .  .  .  .  .  Kind: INT
  1552  .  .  .  .  .  .  .  .  Value: "0"
  1553  .  .  .  .  .  .  .  }
  1554  .  .  .  .  .  .  }
  1555  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1556  .  .  .  .  .  .  .  Lbrace: source.go:199:20
  1557  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1558  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1559  .  .  .  .  .  .  .  .  .  Return: source.go:200:3
  1560  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1561  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1562  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1563  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1564  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:200:10
  1565  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1566  .  .  .  .  .  .  .  .  .  .  .  .  }
  1567  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1568  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:200:15
  1569  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1570  .  .  .  .  .  .  .  .  .  .  .  .  }
  1571  .  .  .  .  .  .  .  .  .  .  .  }
  1572  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:200:20
  1573  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1574  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1575  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:200:21
  1576  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1577  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Private marble data must be passed in transient map.\""
  1578  .  .  .  .  .  .  .  .  .  .  .  .  }
  1579  .  .  .  .  .  .  .  .  .  .  .  }
  1580  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1581  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:200:106
  1582  .  .  .  .  .  .  .  .  .  .  }
  1583  .  .  .  .  .  .  .  .  .  }
  1584  .  .  .  .  .  .  .  .  }
  1585  .  .  .  .  .  .  .  }
  1586  .  .  .  .  .  .  .  Rbrace: source.go:201:2
  1587  .  .  .  .  .  .  }
  1588  .  .  .  .  .  }
  1589  .  .  .  .  .  4: *ast.AssignStmt {
  1590  .  .  .  .  .  .   Lhs: []ast.Expr (len = 2) {
  1591  .  .  .  .  .  .  .  0: *ast.Ident {
  1592  .  .  .  .  .  .  .  .  NamePos: source.go:203:2
  1593  .  .  .  .  .  .  .  .  Name: "transMap"
  1594  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1595  .  .  .  .  .  .  .  .  .  Kind: var
  1596  .  .  .  .  .  .  .  .  .  Name: "transMap"
  1597  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1589)
  1598  .  .  .  .  .  .  .  .  }
  1599  .  .  .  .  .  .  .  }
  1600  .  .  .  .  .  .  .  1: *ast.Ident {
  1601  .  .  .  .  .  .  .  .  NamePos: source.go:203:12
  1602  .  .  .  .  .  .  .  .  Name: "err"
  1603  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  1604  .  .  .  .  .  .  .  }
  1605  .  .  .  .  .  .  }
  1606  .  .  .  .  .  .  TokPos: source.go:203:16
  1607  .  .  .  .  .  .  Tok: :=
  1608  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1609  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1610  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1611  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1612  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:203:19
  1613  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  1614  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1271)
  1615  .  .  .  .  .  .  .  .  .  }
  1616  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1617  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:203:24
  1618  .  .  .  .  .  .  .  .  .  .  Name: "GetTransient"
  1619  .  .  .  .  .  .  .  .  .  }
  1620  .  .  .  .  .  .  .  .  }
  1621  .  .  .  .  .  .  .  .  Lparen: source.go:203:36
  1622  .  .  .  .  .  .  .  .  Ellipsis: -
  1623  .  .  .  .  .  .  .  .  Rparen: source.go:203:37
  1624  .  .  .  .  .  .  .  }
  1625  .  .  .  .  .  .  }
  1626  .  .  .  .  .  }
  1627  .  .  .  .  .  5: *ast.IfStmt {
  1628  .  .  .  .  .  .  If: source.go:204:2
  1629  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1630  .  .  .  .  .  .  .  X: *ast.Ident {
  1631  .  .  .  .  .  .  .  .  NamePos: source.go:204:5
  1632  .  .  .  .  .  .  .  .  Name: "err"
  1633  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  1634  .  .  .  .  .  .  .  }
  1635  .  .  .  .  .  .  .  OpPos: source.go:204:9
  1636  .  .  .  .  .  .  .  Op: !=
  1637  .  .  .  .  .  .  .  Y: *ast.Ident {
  1638  .  .  .  .  .  .  .  .  NamePos: source.go:204:12
  1639  .  .  .  .  .  .  .  .  Name: "nil"
  1640  .  .  .  .  .  .  .  }
  1641  .  .  .  .  .  .  }
  1642  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1643  .  .  .  .  .  .  .  Lbrace: source.go:204:16
  1644  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1645  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1646  .  .  .  .  .  .  .  .  .  Return: source.go:205:3
  1647  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1648  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1649  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1650  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1651  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:205:10
  1652  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1653  .  .  .  .  .  .  .  .  .  .  .  .  }
  1654  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1655  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:205:15
  1656  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1657  .  .  .  .  .  .  .  .  .  .  .  .  }
  1658  .  .  .  .  .  .  .  .  .  .  .  }
  1659  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:205:20
  1660  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1661  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1662  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  1663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:205:21
  1664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Error getting transient: \""
  1666  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1667  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:205:49
  1668  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  1669  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  1670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:205:51
  1673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  1674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  1675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:205:55
  1678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:205:60
  1682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:205:61
  1684  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1685  .  .  .  .  .  .  .  .  .  .  .  .  }
  1686  .  .  .  .  .  .  .  .  .  .  .  }
  1687  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1688  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:205:62
  1689  .  .  .  .  .  .  .  .  .  .  }
  1690  .  .  .  .  .  .  .  .  .  }
  1691  .  .  .  .  .  .  .  .  }
  1692  .  .  .  .  .  .  .  }
  1693  .  .  .  .  .  .  .  Rbrace: source.go:206:2
  1694  .  .  .  .  .  .  }
  1695  .  .  .  .  .  }
  1696  .  .  .  .  .  6: *ast.AssignStmt {
  1697  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  1698  .  .  .  .  .  .  .  0: *ast.Ident {
  1699  .  .  .  .  .  .  .  .  NamePos: source.go:208:2
  1700  .  .  .  .  .  .  .  .  Name: "marbleJsonBytes"
  1701  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1702  .  .  .  .  .  .  .  .  .  Kind: var
  1703  .  .  .  .  .  .  .  .  .  Name: "marbleJsonBytes"
  1704  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1696)
  1705  .  .  .  .  .  .  .  .  }
  1706  .  .  .  .  .  .  .  }
  1707  .  .  .  .  .  .  .  1: *ast.Ident {
  1708  .  .  .  .  .  .  .  .  NamePos: source.go:208:19
  1709  .  .  .  .  .  .  .  .  Name: "ok"
  1710  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1711  .  .  .  .  .  .  .  .  .  Kind: var
  1712  .  .  .  .  .  .  .  .  .  Name: "ok"
  1713  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1696)
  1714  .  .  .  .  .  .  .  .  }
  1715  .  .  .  .  .  .  .  }
  1716  .  .  .  .  .  .  }
  1717  .  .  .  .  .  .  TokPos: source.go:208:22
  1718  .  .  .  .  .  .  Tok: :=
  1719  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1720  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  1721  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1722  .  .  .  .  .  .  .  .  .  NamePos: source.go:208:25
  1723  .  .  .  .  .  .  .  .  .  Name: "transMap"
  1724  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1594)
  1725  .  .  .  .  .  .  .  .  }
  1726  .  .  .  .  .  .  .  .  Lbrack: source.go:208:33
  1727  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  1728  .  .  .  .  .  .  .  .  .  ValuePos: source.go:208:34
  1729  .  .  .  .  .  .  .  .  .  Kind: STRING
  1730  .  .  .  .  .  .  .  .  .  Value: "\"marble\""
  1731  .  .  .  .  .  .  .  .  }
  1732  .  .  .  .  .  .  .  .  Rbrack: source.go:208:42
  1733  .  .  .  .  .  .  .  }
  1734  .  .  .  .  .  .  }
  1735  .  .  .  .  .  }
  1736  .  .  .  .  .  7: *ast.IfStmt {
  1737  .  .  .  .  .  .  If: source.go:209:2
  1738  .  .  .  .  .  .  Cond: *ast.UnaryExpr {
  1739  .  .  .  .  .  .  .  OpPos: source.go:209:5
  1740  .  .  .  .  .  .  .  Op: !
  1741  .  .  .  .  .  .  .  X: *ast.Ident {
  1742  .  .  .  .  .  .  .  .  NamePos: source.go:209:6
  1743  .  .  .  .  .  .  .  .  Name: "ok"
  1744  .  .  .  .  .  .  .  .  Obj: *(obj @ 1710)
  1745  .  .  .  .  .  .  .  }
  1746  .  .  .  .  .  .  }
  1747  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1748  .  .  .  .  .  .  .  Lbrace: source.go:209:9
  1749  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1750  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1751  .  .  .  .  .  .  .  .  .  Return: source.go:210:3
  1752  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1753  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1754  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1755  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1756  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:210:10
  1757  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1758  .  .  .  .  .  .  .  .  .  .  .  .  }
  1759  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1760  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:210:15
  1761  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1762  .  .  .  .  .  .  .  .  .  .  .  .  }
  1763  .  .  .  .  .  .  .  .  .  .  .  }
  1764  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:210:20
  1765  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1766  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1767  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:210:21
  1768  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1769  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble must be a key in the transient map\""
  1770  .  .  .  .  .  .  .  .  .  .  .  .  }
  1771  .  .  .  .  .  .  .  .  .  .  .  }
  1772  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1773  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:210:64
  1774  .  .  .  .  .  .  .  .  .  .  }
  1775  .  .  .  .  .  .  .  .  .  }
  1776  .  .  .  .  .  .  .  .  }
  1777  .  .  .  .  .  .  .  }
  1778  .  .  .  .  .  .  .  Rbrace: source.go:211:2
  1779  .  .  .  .  .  .  }
  1780  .  .  .  .  .  }
  1781  .  .  .  .  .  8: *ast.IfStmt {
  1782  .  .  .  .  .  .  If: source.go:213:2
  1783  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1784  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1785  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1786  .  .  .  .  .  .  .  .  .  NamePos: source.go:213:5
  1787  .  .  .  .  .  .  .  .  .  Name: "len"
  1788  .  .  .  .  .  .  .  .  }
  1789  .  .  .  .  .  .  .  .  Lparen: source.go:213:8
  1790  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1791  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1792  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:213:9
  1793  .  .  .  .  .  .  .  .  .  .  Name: "marbleJsonBytes"
  1794  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1701)
  1795  .  .  .  .  .  .  .  .  .  }
  1796  .  .  .  .  .  .  .  .  }
  1797  .  .  .  .  .  .  .  .  Ellipsis: -
  1798  .  .  .  .  .  .  .  .  Rparen: source.go:213:24
  1799  .  .  .  .  .  .  .  }
  1800  .  .  .  .  .  .  .  OpPos: source.go:213:26
  1801  .  .  .  .  .  .  .  Op: ==
  1802  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1803  .  .  .  .  .  .  .  .  ValuePos: source.go:213:29
  1804  .  .  .  .  .  .  .  .  Kind: INT
  1805  .  .  .  .  .  .  .  .  Value: "0"
  1806  .  .  .  .  .  .  .  }
  1807  .  .  .  .  .  .  }
  1808  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1809  .  .  .  .  .  .  .  Lbrace: source.go:213:31
  1810  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1811  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1812  .  .  .  .  .  .  .  .  .  Return: source.go:214:3
  1813  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1814  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1815  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1816  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1817  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:214:10
  1818  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1819  .  .  .  .  .  .  .  .  .  .  .  .  }
  1820  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1821  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:214:15
  1822  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1823  .  .  .  .  .  .  .  .  .  .  .  .  }
  1824  .  .  .  .  .  .  .  .  .  .  .  }
  1825  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:214:20
  1826  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1827  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1828  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:214:21
  1829  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1830  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble value in the transient map must be a non-empty JSON string\""
  1831  .  .  .  .  .  .  .  .  .  .  .  .  }
  1832  .  .  .  .  .  .  .  .  .  .  .  }
  1833  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1834  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:214:88
  1835  .  .  .  .  .  .  .  .  .  .  }
  1836  .  .  .  .  .  .  .  .  .  }
  1837  .  .  .  .  .  .  .  .  }
  1838  .  .  .  .  .  .  .  }
  1839  .  .  .  .  .  .  .  Rbrace: source.go:215:2
  1840  .  .  .  .  .  .  }
  1841  .  .  .  .  .  }
  1842  .  .  .  .  .  9: *ast.DeclStmt {
  1843  .  .  .  .  .  .  Decl: *ast.GenDecl {
  1844  .  .  .  .  .  .  .  TokPos: source.go:217:2
  1845  .  .  .  .  .  .  .  Tok: var
  1846  .  .  .  .  .  .  .  Lparen: -
  1847  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  1848  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  1849  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1850  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1851  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:217:6
  1852  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  1853  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1854  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1855  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  1856  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1848)
  1857  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  1858  .  .  .  .  .  .  .  .  .  .  .  }
  1859  .  .  .  .  .  .  .  .  .  .  }
  1860  .  .  .  .  .  .  .  .  .  }
  1861  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1862  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:217:18
  1863  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransientInput"
  1864  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1372)
  1865  .  .  .  .  .  .  .  .  .  }
  1866  .  .  .  .  .  .  .  .  }
  1867  .  .  .  .  .  .  .  }
  1868  .  .  .  .  .  .  .  Rparen: -
  1869  .  .  .  .  .  .  }
  1870  .  .  .  .  .  }
  1871  .  .  .  .  .  10: *ast.AssignStmt {
  1872  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1873  .  .  .  .  .  .  .  0: *ast.Ident {
  1874  .  .  .  .  .  .  .  .  NamePos: source.go:218:2
  1875  .  .  .  .  .  .  .  .  Name: "err"
  1876  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  1877  .  .  .  .  .  .  .  }
  1878  .  .  .  .  .  .  }
  1879  .  .  .  .  .  .  TokPos: source.go:218:6
  1880  .  .  .  .  .  .  Tok: =
  1881  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1882  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1883  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1884  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1885  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:218:8
  1886  .  .  .  .  .  .  .  .  .  .  Name: "json"
  1887  .  .  .  .  .  .  .  .  .  }
  1888  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1889  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:218:13
  1890  .  .  .  .  .  .  .  .  .  .  Name: "Unmarshal"
  1891  .  .  .  .  .  .  .  .  .  }
  1892  .  .  .  .  .  .  .  .  }
  1893  .  .  .  .  .  .  .  .  Lparen: source.go:218:22
  1894  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1895  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1896  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:218:23
  1897  .  .  .  .  .  .  .  .  .  .  Name: "marbleJsonBytes"
  1898  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1701)
  1899  .  .  .  .  .  .  .  .  .  }
  1900  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  1901  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:218:40
  1902  .  .  .  .  .  .  .  .  .  .  Op: &
  1903  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1904  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:218:41
  1905  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  1906  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  1907  .  .  .  .  .  .  .  .  .  .  }
  1908  .  .  .  .  .  .  .  .  .  }
  1909  .  .  .  .  .  .  .  .  }
  1910  .  .  .  .  .  .  .  .  Ellipsis: -
  1911  .  .  .  .  .  .  .  .  Rparen: source.go:218:52
  1912  .  .  .  .  .  .  .  }
  1913  .  .  .  .  .  .  }
  1914  .  .  .  .  .  }
  1915  .  .  .  .  .  11: *ast.IfStmt {
  1916  .  .  .  .  .  .  If: source.go:219:2
  1917  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1918  .  .  .  .  .  .  .  X: *ast.Ident {
  1919  .  .  .  .  .  .  .  .  NamePos: source.go:219:5
  1920  .  .  .  .  .  .  .  .  Name: "err"
  1921  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  1922  .  .  .  .  .  .  .  }
  1923  .  .  .  .  .  .  .  OpPos: source.go:219:9
  1924  .  .  .  .  .  .  .  Op: !=
  1925  .  .  .  .  .  .  .  Y: *ast.Ident {
  1926  .  .  .  .  .  .  .  .  NamePos: source.go:219:12
  1927  .  .  .  .  .  .  .  .  Name: "nil"
  1928  .  .  .  .  .  .  .  }
  1929  .  .  .  .  .  .  }
  1930  .  .  .  .  .  .  Body: *ast.BlockStmt {
  1931  .  .  .  .  .  .  .  Lbrace: source.go:219:16
  1932  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1933  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  1934  .  .  .  .  .  .  .  .  .  Return: source.go:220:3
  1935  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1936  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1937  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1938  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1939  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:220:10
  1940  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  1941  .  .  .  .  .  .  .  .  .  .  .  .  }
  1942  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1943  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:220:15
  1944  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  1945  .  .  .  .  .  .  .  .  .  .  .  .  }
  1946  .  .  .  .  .  .  .  .  .  .  .  }
  1947  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:220:20
  1948  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1949  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1950  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  1951  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:220:21
  1952  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to decode JSON of: \""
  1954  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1955  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:220:50
  1956  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  1957  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  1958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:220:52
  1960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  1961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:220:58
  1963  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:220:59
  1966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleJsonBytes"
  1967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1701)
  1968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:220:74
  1972  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1973  .  .  .  .  .  .  .  .  .  .  .  .  }
  1974  .  .  .  .  .  .  .  .  .  .  .  }
  1975  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1976  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:220:75
  1977  .  .  .  .  .  .  .  .  .  .  }
  1978  .  .  .  .  .  .  .  .  .  }
  1979  .  .  .  .  .  .  .  .  }
  1980  .  .  .  .  .  .  .  }
  1981  .  .  .  .  .  .  .  Rbrace: source.go:221:2
  1982  .  .  .  .  .  .  }
  1983  .  .  .  .  .  }
  1984  .  .  .  .  .  12: *ast.IfStmt {
  1985  .  .  .  .  .  .  If: source.go:223:2
  1986  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  1987  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1988  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1989  .  .  .  .  .  .  .  .  .  NamePos: source.go:223:5
  1990  .  .  .  .  .  .  .  .  .  Name: "len"
  1991  .  .  .  .  .  .  .  .  }
  1992  .  .  .  .  .  .  .  .  Lparen: source.go:223:8
  1993  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1994  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1995  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1996  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:223:9
  1997  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  1998  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  1999  .  .  .  .  .  .  .  .  .  .  }
  2000  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2001  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:223:21
  2002  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2003  .  .  .  .  .  .  .  .  .  .  }
  2004  .  .  .  .  .  .  .  .  .  }
  2005  .  .  .  .  .  .  .  .  }
  2006  .  .  .  .  .  .  .  .  Ellipsis: -
  2007  .  .  .  .  .  .  .  .  Rparen: source.go:223:25
  2008  .  .  .  .  .  .  .  }
  2009  .  .  .  .  .  .  .  OpPos: source.go:223:27
  2010  .  .  .  .  .  .  .  Op: ==
  2011  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2012  .  .  .  .  .  .  .  .  ValuePos: source.go:223:30
  2013  .  .  .  .  .  .  .  .  Kind: INT
  2014  .  .  .  .  .  .  .  .  Value: "0"
  2015  .  .  .  .  .  .  .  }
  2016  .  .  .  .  .  .  }
  2017  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2018  .  .  .  .  .  .  .  Lbrace: source.go:223:32
  2019  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2020  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2021  .  .  .  .  .  .  .  .  .  Return: source.go:224:3
  2022  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2023  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2024  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2025  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2026  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:224:10
  2027  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2028  .  .  .  .  .  .  .  .  .  .  .  .  }
  2029  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2030  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:224:15
  2031  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2032  .  .  .  .  .  .  .  .  .  .  .  .  }
  2033  .  .  .  .  .  .  .  .  .  .  .  }
  2034  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:224:20
  2035  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2036  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2037  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:224:21
  2038  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2039  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"name field must be a non-empty string\""
  2040  .  .  .  .  .  .  .  .  .  .  .  .  }
  2041  .  .  .  .  .  .  .  .  .  .  .  }
  2042  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2043  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:224:60
  2044  .  .  .  .  .  .  .  .  .  .  }
  2045  .  .  .  .  .  .  .  .  .  }
  2046  .  .  .  .  .  .  .  .  }
  2047  .  .  .  .  .  .  .  }
  2048  .  .  .  .  .  .  .  Rbrace: source.go:225:2
  2049  .  .  .  .  .  .  }
  2050  .  .  .  .  .  }
  2051  .  .  .  .  .  13: *ast.IfStmt {
  2052  .  .  .  .  .  .  If: source.go:226:2
  2053  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2054  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2055  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2056  .  .  .  .  .  .  .  .  .  NamePos: source.go:226:5
  2057  .  .  .  .  .  .  .  .  .  Name: "len"
  2058  .  .  .  .  .  .  .  .  }
  2059  .  .  .  .  .  .  .  .  Lparen: source.go:226:8
  2060  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2061  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2062  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2063  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:226:9
  2064  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2065  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2066  .  .  .  .  .  .  .  .  .  .  }
  2067  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2068  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:226:21
  2069  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  2070  .  .  .  .  .  .  .  .  .  .  }
  2071  .  .  .  .  .  .  .  .  .  }
  2072  .  .  .  .  .  .  .  .  }
  2073  .  .  .  .  .  .  .  .  Ellipsis: -
  2074  .  .  .  .  .  .  .  .  Rparen: source.go:226:26
  2075  .  .  .  .  .  .  .  }
  2076  .  .  .  .  .  .  .  OpPos: source.go:226:28
  2077  .  .  .  .  .  .  .  Op: ==
  2078  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2079  .  .  .  .  .  .  .  .  ValuePos: source.go:226:31
  2080  .  .  .  .  .  .  .  .  Kind: INT
  2081  .  .  .  .  .  .  .  .  Value: "0"
  2082  .  .  .  .  .  .  .  }
  2083  .  .  .  .  .  .  }
  2084  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2085  .  .  .  .  .  .  .  Lbrace: source.go:226:33
  2086  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2087  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2088  .  .  .  .  .  .  .  .  .  Return: source.go:227:3
  2089  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2090  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2091  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2092  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2093  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:227:10
  2094  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2095  .  .  .  .  .  .  .  .  .  .  .  .  }
  2096  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2097  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:227:15
  2098  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2099  .  .  .  .  .  .  .  .  .  .  .  .  }
  2100  .  .  .  .  .  .  .  .  .  .  .  }
  2101  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:227:20
  2102  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2103  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2104  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:227:21
  2105  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2106  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"color field must be a non-empty string\""
  2107  .  .  .  .  .  .  .  .  .  .  .  .  }
  2108  .  .  .  .  .  .  .  .  .  .  .  }
  2109  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2110  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:227:61
  2111  .  .  .  .  .  .  .  .  .  .  }
  2112  .  .  .  .  .  .  .  .  .  }
  2113  .  .  .  .  .  .  .  .  }
  2114  .  .  .  .  .  .  .  }
  2115  .  .  .  .  .  .  .  Rbrace: source.go:228:2
  2116  .  .  .  .  .  .  }
  2117  .  .  .  .  .  }
  2118  .  .  .  .  .  14: *ast.IfStmt {
  2119  .  .  .  .  .  .  If: source.go:229:2
  2120  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2121  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2122  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2123  .  .  .  .  .  .  .  .  .  NamePos: source.go:229:5
  2124  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2125  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2126  .  .  .  .  .  .  .  .  }
  2127  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2128  .  .  .  .  .  .  .  .  .  NamePos: source.go:229:17
  2129  .  .  .  .  .  .  .  .  .  Name: "Size"
  2130  .  .  .  .  .  .  .  .  }
  2131  .  .  .  .  .  .  .  }
  2132  .  .  .  .  .  .  .  OpPos: source.go:229:22
  2133  .  .  .  .  .  .  .  Op: <=
  2134  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2135  .  .  .  .  .  .  .  .  ValuePos: source.go:229:25
  2136  .  .  .  .  .  .  .  .  Kind: INT
  2137  .  .  .  .  .  .  .  .  Value: "0"
  2138  .  .  .  .  .  .  .  }
  2139  .  .  .  .  .  .  }
  2140  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2141  .  .  .  .  .  .  .  Lbrace: source.go:229:27
  2142  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2143  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2144  .  .  .  .  .  .  .  .  .  Return: source.go:230:3
  2145  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2146  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2147  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2148  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2149  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:230:10
  2150  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2151  .  .  .  .  .  .  .  .  .  .  .  .  }
  2152  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2153  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:230:15
  2154  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2155  .  .  .  .  .  .  .  .  .  .  .  .  }
  2156  .  .  .  .  .  .  .  .  .  .  .  }
  2157  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:230:20
  2158  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2159  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2160  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:230:21
  2161  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2162  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"size field must be a positive integer\""
  2163  .  .  .  .  .  .  .  .  .  .  .  .  }
  2164  .  .  .  .  .  .  .  .  .  .  .  }
  2165  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2166  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:230:60
  2167  .  .  .  .  .  .  .  .  .  .  }
  2168  .  .  .  .  .  .  .  .  .  }
  2169  .  .  .  .  .  .  .  .  }
  2170  .  .  .  .  .  .  .  }
  2171  .  .  .  .  .  .  .  Rbrace: source.go:231:2
  2172  .  .  .  .  .  .  }
  2173  .  .  .  .  .  }
  2174  .  .  .  .  .  15: *ast.IfStmt {
  2175  .  .  .  .  .  .  If: source.go:232:2
  2176  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2177  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2178  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2179  .  .  .  .  .  .  .  .  .  NamePos: source.go:232:5
  2180  .  .  .  .  .  .  .  .  .  Name: "len"
  2181  .  .  .  .  .  .  .  .  }
  2182  .  .  .  .  .  .  .  .  Lparen: source.go:232:8
  2183  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2184  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2185  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2186  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:232:9
  2187  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2188  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2189  .  .  .  .  .  .  .  .  .  .  }
  2190  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2191  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:232:21
  2192  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  2193  .  .  .  .  .  .  .  .  .  .  }
  2194  .  .  .  .  .  .  .  .  .  }
  2195  .  .  .  .  .  .  .  .  }
  2196  .  .  .  .  .  .  .  .  Ellipsis: -
  2197  .  .  .  .  .  .  .  .  Rparen: source.go:232:26
  2198  .  .  .  .  .  .  .  }
  2199  .  .  .  .  .  .  .  OpPos: source.go:232:28
  2200  .  .  .  .  .  .  .  Op: ==
  2201  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2202  .  .  .  .  .  .  .  .  ValuePos: source.go:232:31
  2203  .  .  .  .  .  .  .  .  Kind: INT
  2204  .  .  .  .  .  .  .  .  Value: "0"
  2205  .  .  .  .  .  .  .  }
  2206  .  .  .  .  .  .  }
  2207  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2208  .  .  .  .  .  .  .  Lbrace: source.go:232:33
  2209  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2210  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2211  .  .  .  .  .  .  .  .  .  Return: source.go:233:3
  2212  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2213  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2214  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2215  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2216  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:233:10
  2217  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2218  .  .  .  .  .  .  .  .  .  .  .  .  }
  2219  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2220  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:233:15
  2221  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2222  .  .  .  .  .  .  .  .  .  .  .  .  }
  2223  .  .  .  .  .  .  .  .  .  .  .  }
  2224  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:233:20
  2225  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2226  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2227  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:233:21
  2228  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2229  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"owner field must be a non-empty string\""
  2230  .  .  .  .  .  .  .  .  .  .  .  .  }
  2231  .  .  .  .  .  .  .  .  .  .  .  }
  2232  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2233  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:233:61
  2234  .  .  .  .  .  .  .  .  .  .  }
  2235  .  .  .  .  .  .  .  .  .  }
  2236  .  .  .  .  .  .  .  .  }
  2237  .  .  .  .  .  .  .  }
  2238  .  .  .  .  .  .  .  Rbrace: source.go:234:2
  2239  .  .  .  .  .  .  }
  2240  .  .  .  .  .  }
  2241  .  .  .  .  .  16: *ast.IfStmt {
  2242  .  .  .  .  .  .  If: source.go:235:2
  2243  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2244  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2245  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2246  .  .  .  .  .  .  .  .  .  NamePos: source.go:235:5
  2247  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2248  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2249  .  .  .  .  .  .  .  .  }
  2250  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2251  .  .  .  .  .  .  .  .  .  NamePos: source.go:235:17
  2252  .  .  .  .  .  .  .  .  .  Name: "Price"
  2253  .  .  .  .  .  .  .  .  }
  2254  .  .  .  .  .  .  .  }
  2255  .  .  .  .  .  .  .  OpPos: source.go:235:23
  2256  .  .  .  .  .  .  .  Op: <=
  2257  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2258  .  .  .  .  .  .  .  .  ValuePos: source.go:235:26
  2259  .  .  .  .  .  .  .  .  Kind: INT
  2260  .  .  .  .  .  .  .  .  Value: "0"
  2261  .  .  .  .  .  .  .  }
  2262  .  .  .  .  .  .  }
  2263  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2264  .  .  .  .  .  .  .  Lbrace: source.go:235:28
  2265  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2266  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2267  .  .  .  .  .  .  .  .  .  Return: source.go:236:3
  2268  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2269  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2270  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2271  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2272  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:236:10
  2273  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2274  .  .  .  .  .  .  .  .  .  .  .  .  }
  2275  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2276  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:236:15
  2277  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2278  .  .  .  .  .  .  .  .  .  .  .  .  }
  2279  .  .  .  .  .  .  .  .  .  .  .  }
  2280  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:236:20
  2281  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2282  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2283  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:236:21
  2284  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2285  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"price field must be a positive integer\""
  2286  .  .  .  .  .  .  .  .  .  .  .  .  }
  2287  .  .  .  .  .  .  .  .  .  .  .  }
  2288  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2289  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:236:61
  2290  .  .  .  .  .  .  .  .  .  .  }
  2291  .  .  .  .  .  .  .  .  .  }
  2292  .  .  .  .  .  .  .  .  }
  2293  .  .  .  .  .  .  .  }
  2294  .  .  .  .  .  .  .  Rbrace: source.go:237:2
  2295  .  .  .  .  .  .  }
  2296  .  .  .  .  .  }
  2297  .  .  .  .  .  17: *ast.AssignStmt {
  2298  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  2299  .  .  .  .  .  .  .  0: *ast.Ident {
  2300  .  .  .  .  .  .  .  .  NamePos: source.go:240:2
  2301  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  2302  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2303  .  .  .  .  .  .  .  .  .  Kind: var
  2304  .  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  2305  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2297)
  2306  .  .  .  .  .  .  .  .  }
  2307  .  .  .  .  .  .  .  }
  2308  .  .  .  .  .  .  .  1: *ast.Ident {
  2309  .  .  .  .  .  .  .  .  NamePos: source.go:240:17
  2310  .  .  .  .  .  .  .  .  Name: "err"
  2311  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2312  .  .  .  .  .  .  .  }
  2313  .  .  .  .  .  .  }
  2314  .  .  .  .  .  .  TokPos: source.go:240:21
  2315  .  .  .  .  .  .  Tok: :=
  2316  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2317  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2318  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2319  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2320  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:240:24
  2321  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  2322  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1271)
  2323  .  .  .  .  .  .  .  .  .  }
  2324  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2325  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:240:29
  2326  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateData"
  2327  .  .  .  .  .  .  .  .  .  }
  2328  .  .  .  .  .  .  .  .  }
  2329  .  .  .  .  .  .  .  .  Lparen: source.go:240:43
  2330  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2331  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2332  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:240:44
  2333  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2334  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  2335  .  .  .  .  .  .  .  .  .  }
  2336  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  2337  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2338  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:240:65
  2339  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2340  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2341  .  .  .  .  .  .  .  .  .  .  }
  2342  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2343  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:240:77
  2344  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2345  .  .  .  .  .  .  .  .  .  .  }
  2346  .  .  .  .  .  .  .  .  .  }
  2347  .  .  .  .  .  .  .  .  }
  2348  .  .  .  .  .  .  .  .  Ellipsis: -
  2349  .  .  .  .  .  .  .  .  Rparen: source.go:240:81
  2350  .  .  .  .  .  .  .  }
  2351  .  .  .  .  .  .  }
  2352  .  .  .  .  .  }
  2353  .  .  .  .  .  18: *ast.IfStmt {
  2354  .  .  .  .  .  .  If: source.go:241:2
  2355  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2356  .  .  .  .  .  .  .  X: *ast.Ident {
  2357  .  .  .  .  .  .  .  .  NamePos: source.go:241:5
  2358  .  .  .  .  .  .  .  .  Name: "err"
  2359  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2360  .  .  .  .  .  .  .  }
  2361  .  .  .  .  .  .  .  OpPos: source.go:241:9
  2362  .  .  .  .  .  .  .  Op: !=
  2363  .  .  .  .  .  .  .  Y: *ast.Ident {
  2364  .  .  .  .  .  .  .  .  NamePos: source.go:241:12
  2365  .  .  .  .  .  .  .  .  Name: "nil"
  2366  .  .  .  .  .  .  .  }
  2367  .  .  .  .  .  .  }
  2368  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2369  .  .  .  .  .  .  .  Lbrace: source.go:241:16
  2370  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2371  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2372  .  .  .  .  .  .  .  .  .  Return: source.go:242:3
  2373  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2374  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2375  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2376  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2377  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:242:10
  2378  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2379  .  .  .  .  .  .  .  .  .  .  .  .  }
  2380  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2381  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:242:15
  2382  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2383  .  .  .  .  .  .  .  .  .  .  .  .  }
  2384  .  .  .  .  .  .  .  .  .  .  .  }
  2385  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:242:20
  2386  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2387  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2388  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  2389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:242:21
  2390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2391  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to get marble: \""
  2392  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2393  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:242:46
  2394  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  2395  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  2396  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2397  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2398  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:242:48
  2399  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  2400  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2401  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2402  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2403  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:242:52
  2404  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2405  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2406  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2407  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:242:57
  2408  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2409  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:242:58
  2410  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2411  .  .  .  .  .  .  .  .  .  .  .  .  }
  2412  .  .  .  .  .  .  .  .  .  .  .  }
  2413  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2414  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:242:59
  2415  .  .  .  .  .  .  .  .  .  .  }
  2416  .  .  .  .  .  .  .  .  .  }
  2417  .  .  .  .  .  .  .  .  }
  2418  .  .  .  .  .  .  .  }
  2419  .  .  .  .  .  .  .  Rbrace: source.go:243:2
  2420  .  .  .  .  .  .  }
  2421  .  .  .  .  .  .  Else: *ast.IfStmt {
  2422  .  .  .  .  .  .  .  If: source.go:243:9
  2423  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2424  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2425  .  .  .  .  .  .  .  .  .  NamePos: source.go:243:12
  2426  .  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  2427  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2302)
  2428  .  .  .  .  .  .  .  .  }
  2429  .  .  .  .  .  .  .  .  OpPos: source.go:243:26
  2430  .  .  .  .  .  .  .  .  Op: !=
  2431  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  2432  .  .  .  .  .  .  .  .  .  NamePos: source.go:243:29
  2433  .  .  .  .  .  .  .  .  .  Name: "nil"
  2434  .  .  .  .  .  .  .  .  }
  2435  .  .  .  .  .  .  .  }
  2436  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2437  .  .  .  .  .  .  .  .  Lbrace: source.go:243:33
  2438  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
  2439  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  2440  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2441  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2442  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2443  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:244:3
  2444  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  2445  .  .  .  .  .  .  .  .  .  .  .  .  }
  2446  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2447  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:244:7
  2448  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
  2449  .  .  .  .  .  .  .  .  .  .  .  .  }
  2450  .  .  .  .  .  .  .  .  .  .  .  }
  2451  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:244:14
  2452  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2453  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2454  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  2455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:244:15
  2456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"This marble already exists: \""
  2458  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2459  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:244:46
  2460  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  2461  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  2462  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:244:48
  2464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2466  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:244:60
  2469  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2470  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2471  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2472  .  .  .  .  .  .  .  .  .  .  .  .  }
  2473  .  .  .  .  .  .  .  .  .  .  .  }
  2474  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2475  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:244:64
  2476  .  .  .  .  .  .  .  .  .  .  }
  2477  .  .  .  .  .  .  .  .  .  }
  2478  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
  2479  .  .  .  .  .  .  .  .  .  .  Return: source.go:245:3
  2480  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2481  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2482  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2483  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2484  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:245:10
  2485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2486  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2487  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:245:15
  2489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2490  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2491  .  .  .  .  .  .  .  .  .  .  .  .  }
  2492  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:245:20
  2493  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2494  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  2496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:245:21
  2497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"This marble already exists: \""
  2499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:245:52
  2501  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  2502  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  2503  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:245:54
  2505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:245:66
  2510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2513  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2514  .  .  .  .  .  .  .  .  .  .  .  .  }
  2515  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2516  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:245:70
  2517  .  .  .  .  .  .  .  .  .  .  .  }
  2518  .  .  .  .  .  .  .  .  .  .  }
  2519  .  .  .  .  .  .  .  .  .  }
  2520  .  .  .  .  .  .  .  .  }
  2521  .  .  .  .  .  .  .  .  Rbrace: source.go:246:2
  2522  .  .  .  .  .  .  .  }
  2523  .  .  .  .  .  .  }
  2524  .  .  .  .  .  }
  2525  .  .  .  .  .  19: *ast.AssignStmt {
  2526  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  2527  .  .  .  .  .  .  .  0: *ast.Ident {
  2528  .  .  .  .  .  .  .  .  NamePos: source.go:249:2
  2529  .  .  .  .  .  .  .  .  Name: "marble"
  2530  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2531  .  .  .  .  .  .  .  .  .  Kind: var
  2532  .  .  .  .  .  .  .  .  .  Name: "marble"
  2533  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2525)
  2534  .  .  .  .  .  .  .  .  }
  2535  .  .  .  .  .  .  .  }
  2536  .  .  .  .  .  .  }
  2537  .  .  .  .  .  .  TokPos: source.go:249:9
  2538  .  .  .  .  .  .  Tok: :=
  2539  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2540  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  2541  .  .  .  .  .  .  .  .  OpPos: source.go:249:12
  2542  .  .  .  .  .  .  .  .  Op: &
  2543  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  2544  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  2545  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:249:13
  2546  .  .  .  .  .  .  .  .  .  .  Name: "marble"
  2547  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
  2548  .  .  .  .  .  .  .  .  .  }
  2549  .  .  .  .  .  .  .  .  .  Lbrace: source.go:249:19
  2550  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 5) {
  2551  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  2552  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2553  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:250:3
  2554  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ObjectType"
  2555  .  .  .  .  .  .  .  .  .  .  .  }
  2556  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:250:13
  2557  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.BasicLit {
  2558  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:250:15
  2559  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2560  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble\""
  2561  .  .  .  .  .  .  .  .  .  .  .  }
  2562  .  .  .  .  .  .  .  .  .  .  }
  2563  .  .  .  .  .  .  .  .  .  .  1: *ast.KeyValueExpr {
  2564  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2565  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:251:3
  2566  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2567  .  .  .  .  .  .  .  .  .  .  .  }
  2568  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:251:7
  2569  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  2570  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2571  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:251:15
  2572  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2573  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2574  .  .  .  .  .  .  .  .  .  .  .  .  }
  2575  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2576  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:251:27
  2577  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2578  .  .  .  .  .  .  .  .  .  .  .  .  }
  2579  .  .  .  .  .  .  .  .  .  .  .  }
  2580  .  .  .  .  .  .  .  .  .  .  }
  2581  .  .  .  .  .  .  .  .  .  .  2: *ast.KeyValueExpr {
  2582  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2583  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:252:3
  2584  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  2585  .  .  .  .  .  .  .  .  .  .  .  }
  2586  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:252:8
  2587  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  2588  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2589  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:252:15
  2590  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2591  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2592  .  .  .  .  .  .  .  .  .  .  .  .  }
  2593  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2594  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:252:27
  2595  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  2596  .  .  .  .  .  .  .  .  .  .  .  .  }
  2597  .  .  .  .  .  .  .  .  .  .  .  }
  2598  .  .  .  .  .  .  .  .  .  .  }
  2599  .  .  .  .  .  .  .  .  .  .  3: *ast.KeyValueExpr {
  2600  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2601  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:253:3
  2602  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Size"
  2603  .  .  .  .  .  .  .  .  .  .  .  }
  2604  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:253:7
  2605  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  2606  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2607  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:253:15
  2608  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2609  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2610  .  .  .  .  .  .  .  .  .  .  .  .  }
  2611  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2612  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:253:27
  2613  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Size"
  2614  .  .  .  .  .  .  .  .  .  .  .  .  }
  2615  .  .  .  .  .  .  .  .  .  .  .  }
  2616  .  .  .  .  .  .  .  .  .  .  }
  2617  .  .  .  .  .  .  .  .  .  .  4: *ast.KeyValueExpr {
  2618  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2619  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:254:3
  2620  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  2621  .  .  .  .  .  .  .  .  .  .  .  }
  2622  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:254:8
  2623  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  2624  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2625  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:254:15
  2626  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2627  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2628  .  .  .  .  .  .  .  .  .  .  .  .  }
  2629  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2630  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:254:27
  2631  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  2632  .  .  .  .  .  .  .  .  .  .  .  .  }
  2633  .  .  .  .  .  .  .  .  .  .  .  }
  2634  .  .  .  .  .  .  .  .  .  .  }
  2635  .  .  .  .  .  .  .  .  .  }
  2636  .  .  .  .  .  .  .  .  .  Rbrace: source.go:255:2
  2637  .  .  .  .  .  .  .  .  .  Incomplete: false
  2638  .  .  .  .  .  .  .  .  }
  2639  .  .  .  .  .  .  .  }
  2640  .  .  .  .  .  .  }
  2641  .  .  .  .  .  }
  2642  .  .  .  .  .  20: *ast.AssignStmt {
  2643  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  2644  .  .  .  .  .  .  .  0: *ast.Ident {
  2645  .  .  .  .  .  .  .  .  NamePos: source.go:256:2
  2646  .  .  .  .  .  .  .  .  Name: "marbleJSONasBytes"
  2647  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2648  .  .  .  .  .  .  .  .  .  Kind: var
  2649  .  .  .  .  .  .  .  .  .  Name: "marbleJSONasBytes"
  2650  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2642)
  2651  .  .  .  .  .  .  .  .  }
  2652  .  .  .  .  .  .  .  }
  2653  .  .  .  .  .  .  .  1: *ast.Ident {
  2654  .  .  .  .  .  .  .  .  NamePos: source.go:256:21
  2655  .  .  .  .  .  .  .  .  Name: "err"
  2656  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2657  .  .  .  .  .  .  .  }
  2658  .  .  .  .  .  .  }
  2659  .  .  .  .  .  .  TokPos: source.go:256:25
  2660  .  .  .  .  .  .  Tok: :=
  2661  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2662  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2663  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2664  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2665  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:256:28
  2666  .  .  .  .  .  .  .  .  .  .  Name: "json"
  2667  .  .  .  .  .  .  .  .  .  }
  2668  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2669  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:256:33
  2670  .  .  .  .  .  .  .  .  .  .  Name: "Marshal"
  2671  .  .  .  .  .  .  .  .  .  }
  2672  .  .  .  .  .  .  .  .  }
  2673  .  .  .  .  .  .  .  .  Lparen: source.go:256:40
  2674  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2675  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2676  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:256:41
  2677  .  .  .  .  .  .  .  .  .  .  Name: "marble"
  2678  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2530)
  2679  .  .  .  .  .  .  .  .  .  }
  2680  .  .  .  .  .  .  .  .  }
  2681  .  .  .  .  .  .  .  .  Ellipsis: -
  2682  .  .  .  .  .  .  .  .  Rparen: source.go:256:47
  2683  .  .  .  .  .  .  .  }
  2684  .  .  .  .  .  .  }
  2685  .  .  .  .  .  }
  2686  .  .  .  .  .  21: *ast.IfStmt {
  2687  .  .  .  .  .  .  If: source.go:257:2
  2688  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2689  .  .  .  .  .  .  .  X: *ast.Ident {
  2690  .  .  .  .  .  .  .  .  NamePos: source.go:257:5
  2691  .  .  .  .  .  .  .  .  Name: "err"
  2692  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2693  .  .  .  .  .  .  .  }
  2694  .  .  .  .  .  .  .  OpPos: source.go:257:9
  2695  .  .  .  .  .  .  .  Op: !=
  2696  .  .  .  .  .  .  .  Y: *ast.Ident {
  2697  .  .  .  .  .  .  .  .  NamePos: source.go:257:12
  2698  .  .  .  .  .  .  .  .  Name: "nil"
  2699  .  .  .  .  .  .  .  }
  2700  .  .  .  .  .  .  }
  2701  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2702  .  .  .  .  .  .  .  Lbrace: source.go:257:16
  2703  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2704  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2705  .  .  .  .  .  .  .  .  .  Return: source.go:258:3
  2706  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2707  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2708  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2709  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2710  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:258:10
  2711  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2712  .  .  .  .  .  .  .  .  .  .  .  .  }
  2713  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2714  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:258:15
  2715  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2716  .  .  .  .  .  .  .  .  .  .  .  .  }
  2717  .  .  .  .  .  .  .  .  .  .  .  }
  2718  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:258:20
  2719  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2720  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2721  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:258:21
  2724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  2725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:258:25
  2729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2731  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2732  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:258:30
  2733  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2734  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:258:31
  2735  .  .  .  .  .  .  .  .  .  .  .  .  }
  2736  .  .  .  .  .  .  .  .  .  .  .  }
  2737  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2738  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:258:32
  2739  .  .  .  .  .  .  .  .  .  .  }
  2740  .  .  .  .  .  .  .  .  .  }
  2741  .  .  .  .  .  .  .  .  }
  2742  .  .  .  .  .  .  .  }
  2743  .  .  .  .  .  .  .  Rbrace: source.go:259:2
  2744  .  .  .  .  .  .  }
  2745  .  .  .  .  .  }
  2746  .  .  .  .  .  22: *ast.AssignStmt {
  2747  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  2748  .  .  .  .  .  .  .  0: *ast.Ident {
  2749  .  .  .  .  .  .  .  .  NamePos: source.go:262:2
  2750  .  .  .  .  .  .  .  .  Name: "err"
  2751  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2752  .  .  .  .  .  .  .  }
  2753  .  .  .  .  .  .  }
  2754  .  .  .  .  .  .  TokPos: source.go:262:6
  2755  .  .  .  .  .  .  Tok: =
  2756  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2757  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2758  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2759  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2760  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:262:8
  2761  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  2762  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1271)
  2763  .  .  .  .  .  .  .  .  .  }
  2764  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2765  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:262:13
  2766  .  .  .  .  .  .  .  .  .  .  Name: "PutPrivateData"
  2767  .  .  .  .  .  .  .  .  .  }
  2768  .  .  .  .  .  .  .  .  }
  2769  .  .  .  .  .  .  .  .  Lparen: source.go:262:27
  2770  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  2771  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2772  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:262:28
  2773  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2774  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  2775  .  .  .  .  .  .  .  .  .  }
  2776  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  2777  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2778  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:262:49
  2779  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2780  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2781  .  .  .  .  .  .  .  .  .  .  }
  2782  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2783  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:262:61
  2784  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2785  .  .  .  .  .  .  .  .  .  .  }
  2786  .  .  .  .  .  .  .  .  .  }
  2787  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  2788  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:262:67
  2789  .  .  .  .  .  .  .  .  .  .  Name: "marbleJSONasBytes"
  2790  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2647)
  2791  .  .  .  .  .  .  .  .  .  }
  2792  .  .  .  .  .  .  .  .  }
  2793  .  .  .  .  .  .  .  .  Ellipsis: -
  2794  .  .  .  .  .  .  .  .  Rparen: source.go:262:84
  2795  .  .  .  .  .  .  .  }
  2796  .  .  .  .  .  .  }
  2797  .  .  .  .  .  }
  2798  .  .  .  .  .  23: *ast.IfStmt {
  2799  .  .  .  .  .  .  If: source.go:263:2
  2800  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2801  .  .  .  .  .  .  .  X: *ast.Ident {
  2802  .  .  .  .  .  .  .  .  NamePos: source.go:263:5
  2803  .  .  .  .  .  .  .  .  Name: "err"
  2804  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2805  .  .  .  .  .  .  .  }
  2806  .  .  .  .  .  .  .  OpPos: source.go:263:9
  2807  .  .  .  .  .  .  .  Op: !=
  2808  .  .  .  .  .  .  .  Y: *ast.Ident {
  2809  .  .  .  .  .  .  .  .  NamePos: source.go:263:12
  2810  .  .  .  .  .  .  .  .  Name: "nil"
  2811  .  .  .  .  .  .  .  }
  2812  .  .  .  .  .  .  }
  2813  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2814  .  .  .  .  .  .  .  Lbrace: source.go:263:16
  2815  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  2816  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  2817  .  .  .  .  .  .  .  .  .  Return: source.go:264:3
  2818  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2819  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2820  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2821  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2822  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:264:10
  2823  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  2824  .  .  .  .  .  .  .  .  .  .  .  .  }
  2825  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2826  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:264:15
  2827  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2828  .  .  .  .  .  .  .  .  .  .  .  .  }
  2829  .  .  .  .  .  .  .  .  .  .  .  }
  2830  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:264:20
  2831  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2832  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2833  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:264:21
  2836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  2837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:264:25
  2841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  2842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2843  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2844  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:264:30
  2845  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2846  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:264:31
  2847  .  .  .  .  .  .  .  .  .  .  .  .  }
  2848  .  .  .  .  .  .  .  .  .  .  .  }
  2849  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2850  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:264:32
  2851  .  .  .  .  .  .  .  .  .  .  }
  2852  .  .  .  .  .  .  .  .  .  }
  2853  .  .  .  .  .  .  .  .  }
  2854  .  .  .  .  .  .  .  }
  2855  .  .  .  .  .  .  .  Rbrace: source.go:265:2
  2856  .  .  .  .  .  .  }
  2857  .  .  .  .  .  }
  2858  .  .  .  .  .  24: *ast.AssignStmt {
  2859  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  2860  .  .  .  .  .  .  .  0: *ast.Ident {
  2861  .  .  .  .  .  .  .  .  NamePos: source.go:268:2
  2862  .  .  .  .  .  .  .  .  Name: "marblePrivateDetails"
  2863  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2864  .  .  .  .  .  .  .  .  .  Kind: var
  2865  .  .  .  .  .  .  .  .  .  Name: "marblePrivateDetails"
  2866  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2858)
  2867  .  .  .  .  .  .  .  .  }
  2868  .  .  .  .  .  .  .  }
  2869  .  .  .  .  .  .  }
  2870  .  .  .  .  .  .  TokPos: source.go:268:23
  2871  .  .  .  .  .  .  Tok: :=
  2872  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2873  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  2874  .  .  .  .  .  .  .  .  OpPos: source.go:268:26
  2875  .  .  .  .  .  .  .  .  Op: &
  2876  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  2877  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  2878  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:268:27
  2879  .  .  .  .  .  .  .  .  .  .  Name: "marblePrivateDetails"
  2880  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 244)
  2881  .  .  .  .  .  .  .  .  .  }
  2882  .  .  .  .  .  .  .  .  .  Lbrace: source.go:268:47
  2883  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 3) {
  2884  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  2885  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2886  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:269:3
  2887  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ObjectType"
  2888  .  .  .  .  .  .  .  .  .  .  .  }
  2889  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:269:13
  2890  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.BasicLit {
  2891  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:269:15
  2892  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2893  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marblePrivateDetails\""
  2894  .  .  .  .  .  .  .  .  .  .  .  }
  2895  .  .  .  .  .  .  .  .  .  .  }
  2896  .  .  .  .  .  .  .  .  .  .  1: *ast.KeyValueExpr {
  2897  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2898  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:270:3
  2899  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2900  .  .  .  .  .  .  .  .  .  .  .  }
  2901  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:270:7
  2902  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  2903  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2904  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:270:15
  2905  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2906  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2907  .  .  .  .  .  .  .  .  .  .  .  .  }
  2908  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2909  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:270:27
  2910  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  2911  .  .  .  .  .  .  .  .  .  .  .  .  }
  2912  .  .  .  .  .  .  .  .  .  .  .  }
  2913  .  .  .  .  .  .  .  .  .  .  }
  2914  .  .  .  .  .  .  .  .  .  .  2: *ast.KeyValueExpr {
  2915  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  2916  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:271:3
  2917  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Price"
  2918  .  .  .  .  .  .  .  .  .  .  .  }
  2919  .  .  .  .  .  .  .  .  .  .  .  Colon: source.go:271:8
  2920  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  2921  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2922  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:271:15
  2923  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  2924  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  2925  .  .  .  .  .  .  .  .  .  .  .  .  }
  2926  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2927  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:271:27
  2928  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Price"
  2929  .  .  .  .  .  .  .  .  .  .  .  .  }
  2930  .  .  .  .  .  .  .  .  .  .  .  }
  2931  .  .  .  .  .  .  .  .  .  .  }
  2932  .  .  .  .  .  .  .  .  .  }
  2933  .  .  .  .  .  .  .  .  .  Rbrace: source.go:272:2
  2934  .  .  .  .  .  .  .  .  .  Incomplete: false
  2935  .  .  .  .  .  .  .  .  }
  2936  .  .  .  .  .  .  .  }
  2937  .  .  .  .  .  .  }
  2938  .  .  .  .  .  }
  2939  .  .  .  .  .  25: *ast.AssignStmt {
  2940  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  2941  .  .  .  .  .  .  .  0: *ast.Ident {
  2942  .  .  .  .  .  .  .  .  NamePos: source.go:273:2
  2943  .  .  .  .  .  .  .  .  Name: "marblePrivateDetailsBytes"
  2944  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2945  .  .  .  .  .  .  .  .  .  Kind: var
  2946  .  .  .  .  .  .  .  .  .  Name: "marblePrivateDetailsBytes"
  2947  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2939)
  2948  .  .  .  .  .  .  .  .  }
  2949  .  .  .  .  .  .  .  }
  2950  .  .  .  .  .  .  .  1: *ast.Ident {
  2951  .  .  .  .  .  .  .  .  NamePos: source.go:273:29
  2952  .  .  .  .  .  .  .  .  Name: "err"
  2953  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2954  .  .  .  .  .  .  .  }
  2955  .  .  .  .  .  .  }
  2956  .  .  .  .  .  .  TokPos: source.go:273:33
  2957  .  .  .  .  .  .  Tok: :=
  2958  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2959  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2960  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2961  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2962  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:273:36
  2963  .  .  .  .  .  .  .  .  .  .  Name: "json"
  2964  .  .  .  .  .  .  .  .  .  }
  2965  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2966  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:273:41
  2967  .  .  .  .  .  .  .  .  .  .  Name: "Marshal"
  2968  .  .  .  .  .  .  .  .  .  }
  2969  .  .  .  .  .  .  .  .  }
  2970  .  .  .  .  .  .  .  .  Lparen: source.go:273:48
  2971  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2972  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2973  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:273:49
  2974  .  .  .  .  .  .  .  .  .  .  Name: "marblePrivateDetails"
  2975  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2863)
  2976  .  .  .  .  .  .  .  .  .  }
  2977  .  .  .  .  .  .  .  .  }
  2978  .  .  .  .  .  .  .  .  Ellipsis: -
  2979  .  .  .  .  .  .  .  .  Rparen: source.go:273:69
  2980  .  .  .  .  .  .  .  }
  2981  .  .  .  .  .  .  }
  2982  .  .  .  .  .  }
  2983  .  .  .  .  .  26: *ast.IfStmt {
  2984  .  .  .  .  .  .  If: source.go:274:2
  2985  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  2986  .  .  .  .  .  .  .  X: *ast.Ident {
  2987  .  .  .  .  .  .  .  .  NamePos: source.go:274:5
  2988  .  .  .  .  .  .  .  .  Name: "err"
  2989  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  2990  .  .  .  .  .  .  .  }
  2991  .  .  .  .  .  .  .  OpPos: source.go:274:9
  2992  .  .  .  .  .  .  .  Op: !=
  2993  .  .  .  .  .  .  .  Y: *ast.Ident {
  2994  .  .  .  .  .  .  .  .  NamePos: source.go:274:12
  2995  .  .  .  .  .  .  .  .  Name: "nil"
  2996  .  .  .  .  .  .  .  }
  2997  .  .  .  .  .  .  }
  2998  .  .  .  .  .  .  Body: *ast.BlockStmt {
  2999  .  .  .  .  .  .  .  Lbrace: source.go:274:16
  3000  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  3001  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  3002  .  .  .  .  .  .  .  .  .  Return: source.go:275:3
  3003  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3004  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3005  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3006  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3007  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:275:10
  3008  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3009  .  .  .  .  .  .  .  .  .  .  .  .  }
  3010  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3011  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:275:15
  3012  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3013  .  .  .  .  .  .  .  .  .  .  .  .  }
  3014  .  .  .  .  .  .  .  .  .  .  .  }
  3015  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:275:20
  3016  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3017  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3018  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:275:21
  3021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  3022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:275:25
  3026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3028  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3029  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:275:30
  3030  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3031  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:275:31
  3032  .  .  .  .  .  .  .  .  .  .  .  .  }
  3033  .  .  .  .  .  .  .  .  .  .  .  }
  3034  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3035  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:275:32
  3036  .  .  .  .  .  .  .  .  .  .  }
  3037  .  .  .  .  .  .  .  .  .  }
  3038  .  .  .  .  .  .  .  .  }
  3039  .  .  .  .  .  .  .  }
  3040  .  .  .  .  .  .  .  Rbrace: source.go:276:2
  3041  .  .  .  .  .  .  }
  3042  .  .  .  .  .  }
  3043  .  .  .  .  .  27: *ast.AssignStmt {
  3044  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3045  .  .  .  .  .  .  .  0: *ast.Ident {
  3046  .  .  .  .  .  .  .  .  NamePos: source.go:277:2
  3047  .  .  .  .  .  .  .  .  Name: "err"
  3048  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3049  .  .  .  .  .  .  .  }
  3050  .  .  .  .  .  .  }
  3051  .  .  .  .  .  .  TokPos: source.go:277:6
  3052  .  .  .  .  .  .  Tok: =
  3053  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3054  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3055  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3056  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3057  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:277:8
  3058  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  3059  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1271)
  3060  .  .  .  .  .  .  .  .  .  }
  3061  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3062  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:277:13
  3063  .  .  .  .  .  .  .  .  .  .  Name: "PutPrivateData"
  3064  .  .  .  .  .  .  .  .  .  }
  3065  .  .  .  .  .  .  .  .  }
  3066  .  .  .  .  .  .  .  .  Lparen: source.go:277:27
  3067  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  3068  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3069  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:277:28
  3070  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3071  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarblePrivateDetails\""
  3072  .  .  .  .  .  .  .  .  .  }
  3073  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  3074  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3075  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:277:62
  3076  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleInput"
  3077  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1853)
  3078  .  .  .  .  .  .  .  .  .  .  }
  3079  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3080  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:277:74
  3081  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  3082  .  .  .  .  .  .  .  .  .  .  }
  3083  .  .  .  .  .  .  .  .  .  }
  3084  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  3085  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:277:80
  3086  .  .  .  .  .  .  .  .  .  .  Name: "marblePrivateDetailsBytes"
  3087  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2944)
  3088  .  .  .  .  .  .  .  .  .  }
  3089  .  .  .  .  .  .  .  .  }
  3090  .  .  .  .  .  .  .  .  Ellipsis: -
  3091  .  .  .  .  .  .  .  .  Rparen: source.go:277:105
  3092  .  .  .  .  .  .  .  }
  3093  .  .  .  .  .  .  }
  3094  .  .  .  .  .  }
  3095  .  .  .  .  .  28: *ast.IfStmt {
  3096  .  .  .  .  .  .  If: source.go:278:2
  3097  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  3098  .  .  .  .  .  .  .  X: *ast.Ident {
  3099  .  .  .  .  .  .  .  .  NamePos: source.go:278:5
  3100  .  .  .  .  .  .  .  .  Name: "err"
  3101  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3102  .  .  .  .  .  .  .  }
  3103  .  .  .  .  .  .  .  OpPos: source.go:278:9
  3104  .  .  .  .  .  .  .  Op: !=
  3105  .  .  .  .  .  .  .  Y: *ast.Ident {
  3106  .  .  .  .  .  .  .  .  NamePos: source.go:278:12
  3107  .  .  .  .  .  .  .  .  Name: "nil"
  3108  .  .  .  .  .  .  .  }
  3109  .  .  .  .  .  .  }
  3110  .  .  .  .  .  .  Body: *ast.BlockStmt {
  3111  .  .  .  .  .  .  .  Lbrace: source.go:278:16
  3112  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  3113  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  3114  .  .  .  .  .  .  .  .  .  Return: source.go:279:3
  3115  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3116  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3117  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3118  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3119  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:279:10
  3120  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3121  .  .  .  .  .  .  .  .  .  .  .  .  }
  3122  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3123  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:279:15
  3124  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3125  .  .  .  .  .  .  .  .  .  .  .  .  }
  3126  .  .  .  .  .  .  .  .  .  .  .  }
  3127  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:279:20
  3128  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3129  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3130  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:279:21
  3133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  3134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:279:25
  3138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3140  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3141  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:279:30
  3142  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3143  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:279:31
  3144  .  .  .  .  .  .  .  .  .  .  .  .  }
  3145  .  .  .  .  .  .  .  .  .  .  .  }
  3146  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3147  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:279:32
  3148  .  .  .  .  .  .  .  .  .  .  }
  3149  .  .  .  .  .  .  .  .  .  }
  3150  .  .  .  .  .  .  .  .  }
  3151  .  .  .  .  .  .  .  }
  3152  .  .  .  .  .  .  .  Rbrace: source.go:280:2
  3153  .  .  .  .  .  .  }
  3154  .  .  .  .  .  }
  3155  .  .  .  .  .  29: *ast.AssignStmt {
  3156  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3157  .  .  .  .  .  .  .  0: *ast.Ident {
  3158  .  .  .  .  .  .  .  .  NamePos: source.go:287:2
  3159  .  .  .  .  .  .  .  .  Name: "indexName"
  3160  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3161  .  .  .  .  .  .  .  .  .  Kind: var
  3162  .  .  .  .  .  .  .  .  .  Name: "indexName"
  3163  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3155)
  3164  .  .  .  .  .  .  .  .  }
  3165  .  .  .  .  .  .  .  }
  3166  .  .  .  .  .  .  }
  3167  .  .  .  .  .  .  TokPos: source.go:287:12
  3168  .  .  .  .  .  .  Tok: :=
  3169  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3170  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3171  .  .  .  .  .  .  .  .  ValuePos: source.go:287:15
  3172  .  .  .  .  .  .  .  .  Kind: STRING
  3173  .  .  .  .  .  .  .  .  Value: "\"color~name\""
  3174  .  .  .  .  .  .  .  }
  3175  .  .  .  .  .  .  }
  3176  .  .  .  .  .  }
  3177  .  .  .  .  .  30: *ast.AssignStmt {
  3178  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  3179  .  .  .  .  .  .  .  0: *ast.Ident {
  3180  .  .  .  .  .  .  .  .  NamePos: source.go:288:2
  3181  .  .  .  .  .  .  .  .  Name: "colorNameIndexKey"
  3182  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3183  .  .  .  .  .  .  .  .  .  Kind: var
  3184  .  .  .  .  .  .  .  .  .  Name: "colorNameIndexKey"
  3185  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3177)
  3186  .  .  .  .  .  .  .  .  }
  3187  .  .  .  .  .  .  .  }
  3188  .  .  .  .  .  .  .  1: *ast.Ident {
  3189  .  .  .  .  .  .  .  .  NamePos: source.go:288:21
  3190  .  .  .  .  .  .  .  .  Name: "err"
  3191  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3192  .  .  .  .  .  .  .  }
  3193  .  .  .  .  .  .  }
  3194  .  .  .  .  .  .  TokPos: source.go:288:25
  3195  .  .  .  .  .  .  Tok: :=
  3196  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3197  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3198  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3199  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3200  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:28
  3201  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  3202  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1271)
  3203  .  .  .  .  .  .  .  .  .  }
  3204  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3205  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:33
  3206  .  .  .  .  .  .  .  .  .  .  Name: "CreateCompositeKey"
  3207  .  .  .  .  .  .  .  .  .  }
  3208  .  .  .  .  .  .  .  .  }
  3209  .  .  .  .  .  .  .  .  Lparen: source.go:288:51
  3210  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  3211  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3212  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:52
  3213  .  .  .  .  .  .  .  .  .  .  Name: "indexName"
  3214  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3160)
  3215  .  .  .  .  .  .  .  .  .  }
  3216  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {
  3217  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3218  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:288:63
  3219  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  3220  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:65
  3221  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  3222  .  .  .  .  .  .  .  .  .  .  .  }
  3223  .  .  .  .  .  .  .  .  .  .  }
  3224  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:288:71
  3225  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 2) {
  3226  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  3227  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3228  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:72
  3229  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marble"
  3230  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2530)
  3231  .  .  .  .  .  .  .  .  .  .  .  .  }
  3232  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3233  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:79
  3234  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  3235  .  .  .  .  .  .  .  .  .  .  .  .  }
  3236  .  .  .  .  .  .  .  .  .  .  .  }
  3237  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  3238  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3239  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:86
  3240  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marble"
  3241  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2530)
  3242  .  .  .  .  .  .  .  .  .  .  .  .  }
  3243  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3244  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:288:93
  3245  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  3246  .  .  .  .  .  .  .  .  .  .  .  .  }
  3247  .  .  .  .  .  .  .  .  .  .  .  }
  3248  .  .  .  .  .  .  .  .  .  .  }
  3249  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:288:97
  3250  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  3251  .  .  .  .  .  .  .  .  .  }
  3252  .  .  .  .  .  .  .  .  }
  3253  .  .  .  .  .  .  .  .  Ellipsis: -
  3254  .  .  .  .  .  .  .  .  Rparen: source.go:288:98
  3255  .  .  .  .  .  .  .  }
  3256  .  .  .  .  .  .  }
  3257  .  .  .  .  .  }
  3258  .  .  .  .  .  31: *ast.IfStmt {
  3259  .  .  .  .  .  .  If: source.go:289:2
  3260  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  3261  .  .  .  .  .  .  .  X: *ast.Ident {
  3262  .  .  .  .  .  .  .  .  NamePos: source.go:289:5
  3263  .  .  .  .  .  .  .  .  Name: "err"
  3264  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3265  .  .  .  .  .  .  .  }
  3266  .  .  .  .  .  .  .  OpPos: source.go:289:9
  3267  .  .  .  .  .  .  .  Op: !=
  3268  .  .  .  .  .  .  .  Y: *ast.Ident {
  3269  .  .  .  .  .  .  .  .  NamePos: source.go:289:12
  3270  .  .  .  .  .  .  .  .  Name: "nil"
  3271  .  .  .  .  .  .  .  }
  3272  .  .  .  .  .  .  }
  3273  .  .  .  .  .  .  Body: *ast.BlockStmt {
  3274  .  .  .  .  .  .  .  Lbrace: source.go:289:16
  3275  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  3276  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  3277  .  .  .  .  .  .  .  .  .  Return: source.go:290:3
  3278  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3279  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3280  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3281  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3282  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:290:10
  3283  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3284  .  .  .  .  .  .  .  .  .  .  .  .  }
  3285  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3286  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:290:15
  3287  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3288  .  .  .  .  .  .  .  .  .  .  .  .  }
  3289  .  .  .  .  .  .  .  .  .  .  .  }
  3290  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:290:20
  3291  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3292  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3293  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:290:21
  3296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  3297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1345)
  3298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3300  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:290:25
  3301  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3302  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3303  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3304  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:290:30
  3305  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3306  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:290:31
  3307  .  .  .  .  .  .  .  .  .  .  .  .  }
  3308  .  .  .  .  .  .  .  .  .  .  .  }
  3309  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3310  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:290:32
  3311  .  .  .  .  .  .  .  .  .  .  }
  3312  .  .  .  .  .  .  .  .  .  }
  3313  .  .  .  .  .  .  .  .  }
  3314  .  .  .  .  .  .  .  }
  3315  .  .  .  .  .  .  .  Rbrace: source.go:291:2
  3316  .  .  .  .  .  .  }
  3317  .  .  .  .  .  }
  3318  .  .  .  .  .  32: *ast.AssignStmt {
  3319  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3320  .  .  .  .  .  .  .  0: *ast.Ident {
  3321  .  .  .  .  .  .  .  .  NamePos: source.go:294:2
  3322  .  .  .  .  .  .  .  .  Name: "value"
  3323  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3324  .  .  .  .  .  .  .  .  .  Kind: var
  3325  .  .  .  .  .  .  .  .  .  Name: "value"
  3326  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3318)
  3327  .  .  .  .  .  .  .  .  }
  3328  .  .  .  .  .  .  .  }
  3329  .  .  .  .  .  .  }
  3330  .  .  .  .  .  .  TokPos: source.go:294:8
  3331  .  .  .  .  .  .  Tok: :=
  3332  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3333  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  3334  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3335  .  .  .  .  .  .  .  .  .  Lbrack: source.go:294:11
  3336  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  3337  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:294:13
  3338  .  .  .  .  .  .  .  .  .  .  Name: "byte"
  3339  .  .  .  .  .  .  .  .  .  }
  3340  .  .  .  .  .  .  .  .  }
  3341  .  .  .  .  .  .  .  .  Lbrace: source.go:294:17
  3342  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  3343  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3344  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:294:18
  3345  .  .  .  .  .  .  .  .  .  .  Kind: INT
  3346  .  .  .  .  .  .  .  .  .  .  Value: "0x00"
  3347  .  .  .  .  .  .  .  .  .  }
  3348  .  .  .  .  .  .  .  .  }
  3349  .  .  .  .  .  .  .  .  Rbrace: source.go:294:22
  3350  .  .  .  .  .  .  .  .  Incomplete: false
  3351  .  .  .  .  .  .  .  }
  3352  .  .  .  .  .  .  }
  3353  .  .  .  .  .  }
  3354  .  .  .  .  .  33: *ast.ExprStmt {
  3355  .  .  .  .  .  .  X: *ast.CallExpr {
  3356  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3357  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3358  .  .  .  .  .  .  .  .  .  NamePos: source.go:295:2
  3359  .  .  .  .  .  .  .  .  .  Name: "stub"
  3360  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1271)
  3361  .  .  .  .  .  .  .  .  }
  3362  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3363  .  .  .  .  .  .  .  .  .  NamePos: source.go:295:7
  3364  .  .  .  .  .  .  .  .  .  Name: "PutPrivateData"
  3365  .  .  .  .  .  .  .  .  }
  3366  .  .  .  .  .  .  .  }
  3367  .  .  .  .  .  .  .  Lparen: source.go:295:21
  3368  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  3369  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3370  .  .  .  .  .  .  .  .  .  ValuePos: source.go:295:22
  3371  .  .  .  .  .  .  .  .  .  Kind: STRING
  3372  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  3373  .  .  .  .  .  .  .  .  }
  3374  .  .  .  .  .  .  .  .  1: *ast.Ident {
  3375  .  .  .  .  .  .  .  .  .  NamePos: source.go:295:43
  3376  .  .  .  .  .  .  .  .  .  Name: "colorNameIndexKey"
  3377  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3182)
  3378  .  .  .  .  .  .  .  .  }
  3379  .  .  .  .  .  .  .  .  2: *ast.Ident {
  3380  .  .  .  .  .  .  .  .  .  NamePos: source.go:295:62
  3381  .  .  .  .  .  .  .  .  .  Name: "value"
  3382  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3323)
  3383  .  .  .  .  .  .  .  .  }
  3384  .  .  .  .  .  .  .  }
  3385  .  .  .  .  .  .  .  Ellipsis: -
  3386  .  .  .  .  .  .  .  Rparen: source.go:295:67
  3387  .  .  .  .  .  .  }
  3388  .  .  .  .  .  }
  3389  .  .  .  .  .  34: *ast.ExprStmt {
  3390  .  .  .  .  .  .  X: *ast.CallExpr {
  3391  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3392  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3393  .  .  .  .  .  .  .  .  .  NamePos: source.go:298:2
  3394  .  .  .  .  .  .  .  .  .  Name: "fmt"
  3395  .  .  .  .  .  .  .  .  }
  3396  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3397  .  .  .  .  .  .  .  .  .  NamePos: source.go:298:6
  3398  .  .  .  .  .  .  .  .  .  Name: "Println"
  3399  .  .  .  .  .  .  .  .  }
  3400  .  .  .  .  .  .  .  }
  3401  .  .  .  .  .  .  .  Lparen: source.go:298:13
  3402  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3403  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3404  .  .  .  .  .  .  .  .  .  ValuePos: source.go:298:14
  3405  .  .  .  .  .  .  .  .  .  Kind: STRING
  3406  .  .  .  .  .  .  .  .  .  Value: "\"- end init marble\""
  3407  .  .  .  .  .  .  .  .  }
  3408  .  .  .  .  .  .  .  }
  3409  .  .  .  .  .  .  .  Ellipsis: -
  3410  .  .  .  .  .  .  .  Rparen: source.go:298:33
  3411  .  .  .  .  .  .  }
  3412  .  .  .  .  .  }
  3413  .  .  .  .  .  35: *ast.ReturnStmt {
  3414  .  .  .  .  .  .  Return: source.go:299:2
  3415  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3416  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3417  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3418  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3419  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:299:9
  3420  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3421  .  .  .  .  .  .  .  .  .  }
  3422  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3423  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:299:14
  3424  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  3425  .  .  .  .  .  .  .  .  .  }
  3426  .  .  .  .  .  .  .  .  }
  3427  .  .  .  .  .  .  .  .  Lparen: source.go:299:21
  3428  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3429  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3430  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:299:22
  3431  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  3432  .  .  .  .  .  .  .  .  .  }
  3433  .  .  .  .  .  .  .  .  }
  3434  .  .  .  .  .  .  .  .  Ellipsis: -
  3435  .  .  .  .  .  .  .  .  Rparen: source.go:299:25
  3436  .  .  .  .  .  .  .  }
  3437  .  .  .  .  .  .  }
  3438  .  .  .  .  .  }
  3439  .  .  .  .  }
  3440  .  .  .  .  Rbrace: source.go:300:1
  3441  .  .  .  }
  3442  .  .  }
  3443  .  .  8: *ast.FuncDecl {
  3444  .  .  .  Recv: *ast.FieldList {
  3445  .  .  .  .  Opening: source.go:305:6
  3446  .  .  .  .  List: []*ast.Field (len = 1) {
  3447  .  .  .  .  .  0: *ast.Field {
  3448  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3449  .  .  .  .  .  .  .  0: *ast.Ident {
  3450  .  .  .  .  .  .  .  .  NamePos: source.go:305:7
  3451  .  .  .  .  .  .  .  .  Name: "t"
  3452  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3453  .  .  .  .  .  .  .  .  .  Kind: var
  3454  .  .  .  .  .  .  .  .  .  Name: "t"
  3455  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3447)
  3456  .  .  .  .  .  .  .  .  }
  3457  .  .  .  .  .  .  .  }
  3458  .  .  .  .  .  .  }
  3459  .  .  .  .  .  .  Type: *ast.StarExpr {
  3460  .  .  .  .  .  .  .  Star: source.go:305:9
  3461  .  .  .  .  .  .  .  X: *ast.Ident {
  3462  .  .  .  .  .  .  .  .  NamePos: source.go:305:10
  3463  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  3464  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  3465  .  .  .  .  .  .  .  }
  3466  .  .  .  .  .  .  }
  3467  .  .  .  .  .  }
  3468  .  .  .  .  }
  3469  .  .  .  .  Closing: source.go:305:25
  3470  .  .  .  }
  3471  .  .  .  Name: *ast.Ident {
  3472  .  .  .  .  NamePos: source.go:305:27
  3473  .  .  .  .  Name: "readMarble"
  3474  .  .  .  }
  3475  .  .  .  Type: *ast.FuncType {
  3476  .  .  .  .  Func: source.go:305:1
  3477  .  .  .  .  Params: *ast.FieldList {
  3478  .  .  .  .  .  Opening: source.go:305:37
  3479  .  .  .  .  .  List: []*ast.Field (len = 2) {
  3480  .  .  .  .  .  .  0: *ast.Field {
  3481  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3482  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3483  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:38
  3484  .  .  .  .  .  .  .  .  .  Name: "stub"
  3485  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3486  .  .  .  .  .  .  .  .  .  .  Kind: var
  3487  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  3488  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3480)
  3489  .  .  .  .  .  .  .  .  .  }
  3490  .  .  .  .  .  .  .  .  }
  3491  .  .  .  .  .  .  .  }
  3492  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3493  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3494  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:43
  3495  .  .  .  .  .  .  .  .  .  Name: "shim"
  3496  .  .  .  .  .  .  .  .  }
  3497  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3498  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:48
  3499  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  3500  .  .  .  .  .  .  .  .  }
  3501  .  .  .  .  .  .  .  }
  3502  .  .  .  .  .  .  }
  3503  .  .  .  .  .  .  1: *ast.Field {
  3504  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3505  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3506  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:72
  3507  .  .  .  .  .  .  .  .  .  Name: "args"
  3508  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3509  .  .  .  .  .  .  .  .  .  .  Kind: var
  3510  .  .  .  .  .  .  .  .  .  .  Name: "args"
  3511  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3503)
  3512  .  .  .  .  .  .  .  .  .  }
  3513  .  .  .  .  .  .  .  .  }
  3514  .  .  .  .  .  .  .  }
  3515  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3516  .  .  .  .  .  .  .  .  Lbrack: source.go:305:77
  3517  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  3518  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:79
  3519  .  .  .  .  .  .  .  .  .  Name: "string"
  3520  .  .  .  .  .  .  .  .  }
  3521  .  .  .  .  .  .  .  }
  3522  .  .  .  .  .  .  }
  3523  .  .  .  .  .  }
  3524  .  .  .  .  .  Closing: source.go:305:85
  3525  .  .  .  .  }
  3526  .  .  .  .  Results: *ast.FieldList {
  3527  .  .  .  .  .  Opening: -
  3528  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3529  .  .  .  .  .  .  0: *ast.Field {
  3530  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3531  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3532  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:87
  3533  .  .  .  .  .  .  .  .  .  Name: "pb"
  3534  .  .  .  .  .  .  .  .  }
  3535  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3536  .  .  .  .  .  .  .  .  .  NamePos: source.go:305:90
  3537  .  .  .  .  .  .  .  .  .  Name: "Response"
  3538  .  .  .  .  .  .  .  .  }
  3539  .  .  .  .  .  .  .  }
  3540  .  .  .  .  .  .  }
  3541  .  .  .  .  .  }
  3542  .  .  .  .  .  Closing: -
  3543  .  .  .  .  }
  3544  .  .  .  }
  3545  .  .  .  Body: *ast.BlockStmt {
  3546  .  .  .  .  Lbrace: source.go:305:99
  3547  .  .  .  .  List: []ast.Stmt (len = 7) {
  3548  .  .  .  .  .  0: *ast.DeclStmt {
  3549  .  .  .  .  .  .  Decl: *ast.GenDecl {
  3550  .  .  .  .  .  .  .  TokPos: source.go:306:2
  3551  .  .  .  .  .  .  .  Tok: var
  3552  .  .  .  .  .  .  .  Lparen: -
  3553  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  3554  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  3555  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
  3556  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3557  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:306:6
  3558  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  3559  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3560  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  3561  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  3562  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3554)
  3563  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  3564  .  .  .  .  .  .  .  .  .  .  .  }
  3565  .  .  .  .  .  .  .  .  .  .  }
  3566  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  3567  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:306:12
  3568  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  3569  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3570  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  3571  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  3572  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3554)
  3573  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  3574  .  .  .  .  .  .  .  .  .  .  .  }
  3575  .  .  .  .  .  .  .  .  .  .  }
  3576  .  .  .  .  .  .  .  .  .  }
  3577  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  3578  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:306:21
  3579  .  .  .  .  .  .  .  .  .  .  Name: "string"
  3580  .  .  .  .  .  .  .  .  .  }
  3581  .  .  .  .  .  .  .  .  }
  3582  .  .  .  .  .  .  .  }
  3583  .  .  .  .  .  .  .  Rparen: -
  3584  .  .  .  .  .  .  }
  3585  .  .  .  .  .  }
  3586  .  .  .  .  .  1: *ast.DeclStmt {
  3587  .  .  .  .  .  .  Decl: *ast.GenDecl {
  3588  .  .  .  .  .  .  .  TokPos: source.go:307:2
  3589  .  .  .  .  .  .  .  Tok: var
  3590  .  .  .  .  .  .  .  Lparen: -
  3591  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  3592  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  3593  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3594  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3595  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:307:6
  3596  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  3597  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3598  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  3599  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  3600  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3592)
  3601  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  3602  .  .  .  .  .  .  .  .  .  .  .  }
  3603  .  .  .  .  .  .  .  .  .  .  }
  3604  .  .  .  .  .  .  .  .  .  }
  3605  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  3606  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:307:10
  3607  .  .  .  .  .  .  .  .  .  .  Name: "error"
  3608  .  .  .  .  .  .  .  .  .  }
  3609  .  .  .  .  .  .  .  .  }
  3610  .  .  .  .  .  .  .  }
  3611  .  .  .  .  .  .  .  Rparen: -
  3612  .  .  .  .  .  .  }
  3613  .  .  .  .  .  }
  3614  .  .  .  .  .  2: *ast.IfStmt {
  3615  .  .  .  .  .  .  If: source.go:309:2
  3616  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  3617  .  .  .  .  .  .  .  X: *ast.CallExpr {
  3618  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  3619  .  .  .  .  .  .  .  .  .  NamePos: source.go:309:5
  3620  .  .  .  .  .  .  .  .  .  Name: "len"
  3621  .  .  .  .  .  .  .  .  }
  3622  .  .  .  .  .  .  .  .  Lparen: source.go:309:8
  3623  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3624  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3625  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:309:9
  3626  .  .  .  .  .  .  .  .  .  .  Name: "args"
  3627  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3508)
  3628  .  .  .  .  .  .  .  .  .  }
  3629  .  .  .  .  .  .  .  .  }
  3630  .  .  .  .  .  .  .  .  Ellipsis: -
  3631  .  .  .  .  .  .  .  .  Rparen: source.go:309:13
  3632  .  .  .  .  .  .  .  }
  3633  .  .  .  .  .  .  .  OpPos: source.go:309:15
  3634  .  .  .  .  .  .  .  Op: !=
  3635  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  3636  .  .  .  .  .  .  .  .  ValuePos: source.go:309:18
  3637  .  .  .  .  .  .  .  .  Kind: INT
  3638  .  .  .  .  .  .  .  .  Value: "1"
  3639  .  .  .  .  .  .  .  }
  3640  .  .  .  .  .  .  }
  3641  .  .  .  .  .  .  Body: *ast.BlockStmt {
  3642  .  .  .  .  .  .  .  Lbrace: source.go:309:20
  3643  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  3644  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  3645  .  .  .  .  .  .  .  .  .  Return: source.go:310:3
  3646  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3647  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3648  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3649  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3650  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:310:10
  3651  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3652  .  .  .  .  .  .  .  .  .  .  .  .  }
  3653  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3654  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:310:15
  3655  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3656  .  .  .  .  .  .  .  .  .  .  .  .  }
  3657  .  .  .  .  .  .  .  .  .  .  .  }
  3658  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:310:20
  3659  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3660  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3661  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:310:21
  3662  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3663  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting name of the marble to query\""
  3664  .  .  .  .  .  .  .  .  .  .  .  .  }
  3665  .  .  .  .  .  .  .  .  .  .  .  }
  3666  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3667  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:310:91
  3668  .  .  .  .  .  .  .  .  .  .  }
  3669  .  .  .  .  .  .  .  .  .  }
  3670  .  .  .  .  .  .  .  .  }
  3671  .  .  .  .  .  .  .  }
  3672  .  .  .  .  .  .  .  Rbrace: source.go:311:2
  3673  .  .  .  .  .  .  }
  3674  .  .  .  .  .  }
  3675  .  .  .  .  .  3: *ast.AssignStmt {
  3676  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3677  .  .  .  .  .  .  .  0: *ast.Ident {
  3678  .  .  .  .  .  .  .  .  NamePos: source.go:313:2
  3679  .  .  .  .  .  .  .  .  Name: "name"
  3680  .  .  .  .  .  .  .  .  Obj: *(obj @ 3559)
  3681  .  .  .  .  .  .  .  }
  3682  .  .  .  .  .  .  }
  3683  .  .  .  .  .  .  TokPos: source.go:313:7
  3684  .  .  .  .  .  .  Tok: =
  3685  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3686  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  3687  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3688  .  .  .  .  .  .  .  .  .  NamePos: source.go:313:9
  3689  .  .  .  .  .  .  .  .  .  Name: "args"
  3690  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3508)
  3691  .  .  .  .  .  .  .  .  }
  3692  .  .  .  .  .  .  .  .  Lbrack: source.go:313:13
  3693  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  3694  .  .  .  .  .  .  .  .  .  ValuePos: source.go:313:14
  3695  .  .  .  .  .  .  .  .  .  Kind: INT
  3696  .  .  .  .  .  .  .  .  .  Value: "0"
  3697  .  .  .  .  .  .  .  .  }
  3698  .  .  .  .  .  .  .  .  Rbrack: source.go:313:15
  3699  .  .  .  .  .  .  .  }
  3700  .  .  .  .  .  .  }
  3701  .  .  .  .  .  }
  3702  .  .  .  .  .  4: *ast.AssignStmt {
  3703  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  3704  .  .  .  .  .  .  .  0: *ast.Ident {
  3705  .  .  .  .  .  .  .  .  NamePos: source.go:314:2
  3706  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  3707  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3708  .  .  .  .  .  .  .  .  .  Kind: var
  3709  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  3710  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3702)
  3711  .  .  .  .  .  .  .  .  }
  3712  .  .  .  .  .  .  .  }
  3713  .  .  .  .  .  .  .  1: *ast.Ident {
  3714  .  .  .  .  .  .  .  .  NamePos: source.go:314:14
  3715  .  .  .  .  .  .  .  .  Name: "err"
  3716  .  .  .  .  .  .  .  .  Obj: *(obj @ 3597)
  3717  .  .  .  .  .  .  .  }
  3718  .  .  .  .  .  .  }
  3719  .  .  .  .  .  .  TokPos: source.go:314:18
  3720  .  .  .  .  .  .  Tok: :=
  3721  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3722  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3723  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3724  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3725  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:314:21
  3726  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  3727  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3485)
  3728  .  .  .  .  .  .  .  .  .  }
  3729  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3730  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:314:26
  3731  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateData"
  3732  .  .  .  .  .  .  .  .  .  }
  3733  .  .  .  .  .  .  .  .  }
  3734  .  .  .  .  .  .  .  .  Lparen: source.go:314:40
  3735  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  3736  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  3737  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:314:41
  3738  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3739  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  3740  .  .  .  .  .  .  .  .  .  }
  3741  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  3742  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:314:62
  3743  .  .  .  .  .  .  .  .  .  .  Name: "name"
  3744  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3559)
  3745  .  .  .  .  .  .  .  .  .  }
  3746  .  .  .  .  .  .  .  .  }
  3747  .  .  .  .  .  .  .  .  Ellipsis: -
  3748  .  .  .  .  .  .  .  .  Rparen: source.go:314:66
  3749  .  .  .  .  .  .  .  }
  3750  .  .  .  .  .  .  }
  3751  .  .  .  .  .  }
  3752  .  .  .  .  .  5: *ast.IfStmt {
  3753  .  .  .  .  .  .  If: source.go:315:2
  3754  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  3755  .  .  .  .  .  .  .  X: *ast.Ident {
  3756  .  .  .  .  .  .  .  .  NamePos: source.go:315:5
  3757  .  .  .  .  .  .  .  .  Name: "err"
  3758  .  .  .  .  .  .  .  .  Obj: *(obj @ 3597)
  3759  .  .  .  .  .  .  .  }
  3760  .  .  .  .  .  .  .  OpPos: source.go:315:9
  3761  .  .  .  .  .  .  .  Op: !=
  3762  .  .  .  .  .  .  .  Y: *ast.Ident {
  3763  .  .  .  .  .  .  .  .  NamePos: source.go:315:12
  3764  .  .  .  .  .  .  .  .  Name: "nil"
  3765  .  .  .  .  .  .  .  }
  3766  .  .  .  .  .  .  }
  3767  .  .  .  .  .  .  Body: *ast.BlockStmt {
  3768  .  .  .  .  .  .  .  Lbrace: source.go:315:16
  3769  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
  3770  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  3771  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3772  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3773  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:316:3
  3774  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  3775  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3569)
  3776  .  .  .  .  .  .  .  .  .  .  }
  3777  .  .  .  .  .  .  .  .  .  }
  3778  .  .  .  .  .  .  .  .  .  TokPos: source.go:316:12
  3779  .  .  .  .  .  .  .  .  .  Tok: =
  3780  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3781  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  3782  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  3783  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  3784  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  3785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  3786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:316:14
  3787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"{\\\"Error\\\":\\\"Failed to get state for \""
  3789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:316:54
  3791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  3792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  3793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:316:56
  3794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  3795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3559)
  3796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3797  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3798  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:316:61
  3799  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  3800  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  3801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:316:63
  3802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\": \""
  3804  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3805  .  .  .  .  .  .  .  .  .  .  .  .  }
  3806  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:316:68
  3807  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  3808  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  3809  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:316:70
  3812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  3813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3597)
  3814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:316:74
  3817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3819  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3820  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:316:79
  3821  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3822  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:316:80
  3823  .  .  .  .  .  .  .  .  .  .  .  .  }
  3824  .  .  .  .  .  .  .  .  .  .  .  }
  3825  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:316:82
  3826  .  .  .  .  .  .  .  .  .  .  .  Op: +
  3827  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  3828  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:316:84
  3829  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3830  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\\"}\""
  3831  .  .  .  .  .  .  .  .  .  .  .  }
  3832  .  .  .  .  .  .  .  .  .  .  }
  3833  .  .  .  .  .  .  .  .  .  }
  3834  .  .  .  .  .  .  .  .  }
  3835  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
  3836  .  .  .  .  .  .  .  .  .  Return: source.go:317:3
  3837  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3838  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3839  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3840  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3841  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:317:10
  3842  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3843  .  .  .  .  .  .  .  .  .  .  .  .  }
  3844  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3845  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:317:15
  3846  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3847  .  .  .  .  .  .  .  .  .  .  .  .  }
  3848  .  .  .  .  .  .  .  .  .  .  .  }
  3849  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:317:20
  3850  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3851  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3852  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:317:21
  3853  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  3854  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3569)
  3855  .  .  .  .  .  .  .  .  .  .  .  .  }
  3856  .  .  .  .  .  .  .  .  .  .  .  }
  3857  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3858  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:317:29
  3859  .  .  .  .  .  .  .  .  .  .  }
  3860  .  .  .  .  .  .  .  .  .  }
  3861  .  .  .  .  .  .  .  .  }
  3862  .  .  .  .  .  .  .  }
  3863  .  .  .  .  .  .  .  Rbrace: source.go:318:2
  3864  .  .  .  .  .  .  }
  3865  .  .  .  .  .  .  Else: *ast.IfStmt {
  3866  .  .  .  .  .  .  .  If: source.go:318:9
  3867  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  3868  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3869  .  .  .  .  .  .  .  .  .  NamePos: source.go:318:12
  3870  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  3871  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3707)
  3872  .  .  .  .  .  .  .  .  }
  3873  .  .  .  .  .  .  .  .  OpPos: source.go:318:23
  3874  .  .  .  .  .  .  .  .  Op: ==
  3875  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  3876  .  .  .  .  .  .  .  .  .  NamePos: source.go:318:26
  3877  .  .  .  .  .  .  .  .  .  Name: "nil"
  3878  .  .  .  .  .  .  .  .  }
  3879  .  .  .  .  .  .  .  }
  3880  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  3881  .  .  .  .  .  .  .  .  Lbrace: source.go:318:30
  3882  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
  3883  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  3884  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3885  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3886  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:319:3
  3887  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  3888  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3569)
  3889  .  .  .  .  .  .  .  .  .  .  .  }
  3890  .  .  .  .  .  .  .  .  .  .  }
  3891  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:319:12
  3892  .  .  .  .  .  .  .  .  .  .  Tok: =
  3893  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3894  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  3895  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  3896  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  3897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:319:14
  3898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"{\\\"Error\\\":\\\"Marble does not exist: \""
  3900  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3901  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:319:53
  3902  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  3903  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  3904  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:319:55
  3905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  3906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3559)
  3907  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3908  .  .  .  .  .  .  .  .  .  .  .  .  }
  3909  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:319:60
  3910  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  3911  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  3912  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:319:62
  3913  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  3914  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\\"}\""
  3915  .  .  .  .  .  .  .  .  .  .  .  .  }
  3916  .  .  .  .  .  .  .  .  .  .  .  }
  3917  .  .  .  .  .  .  .  .  .  .  }
  3918  .  .  .  .  .  .  .  .  .  }
  3919  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
  3920  .  .  .  .  .  .  .  .  .  .  Return: source.go:320:3
  3921  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3922  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3923  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3924  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3925  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:320:10
  3926  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3927  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3928  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3929  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:320:15
  3930  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  3931  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3932  .  .  .  .  .  .  .  .  .  .  .  .  }
  3933  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:320:20
  3934  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3935  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:320:21
  3937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  3938  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3569)
  3939  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3940  .  .  .  .  .  .  .  .  .  .  .  .  }
  3941  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3942  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:320:29
  3943  .  .  .  .  .  .  .  .  .  .  .  }
  3944  .  .  .  .  .  .  .  .  .  .  }
  3945  .  .  .  .  .  .  .  .  .  }
  3946  .  .  .  .  .  .  .  .  }
  3947  .  .  .  .  .  .  .  .  Rbrace: source.go:321:2
  3948  .  .  .  .  .  .  .  }
  3949  .  .  .  .  .  .  }
  3950  .  .  .  .  .  }
  3951  .  .  .  .  .  6: *ast.ReturnStmt {
  3952  .  .  .  .  .  .  Return: source.go:323:2
  3953  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3954  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3955  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  3956  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3957  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:323:9
  3958  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  3959  .  .  .  .  .  .  .  .  .  }
  3960  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3961  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:323:14
  3962  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  3963  .  .  .  .  .  .  .  .  .  }
  3964  .  .  .  .  .  .  .  .  }
  3965  .  .  .  .  .  .  .  .  Lparen: source.go:323:21
  3966  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3967  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3968  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:323:22
  3969  .  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  3970  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3707)
  3971  .  .  .  .  .  .  .  .  .  }
  3972  .  .  .  .  .  .  .  .  }
  3973  .  .  .  .  .  .  .  .  Ellipsis: -
  3974  .  .  .  .  .  .  .  .  Rparen: source.go:323:32
  3975  .  .  .  .  .  .  .  }
  3976  .  .  .  .  .  .  }
  3977  .  .  .  .  .  }
  3978  .  .  .  .  }
  3979  .  .  .  .  Rbrace: source.go:324:1
  3980  .  .  .  }
  3981  .  .  }
  3982  .  .  9: *ast.FuncDecl {
  3983  .  .  .  Recv: *ast.FieldList {
  3984  .  .  .  .  Opening: source.go:329:6
  3985  .  .  .  .  List: []*ast.Field (len = 1) {
  3986  .  .  .  .  .  0: *ast.Field {
  3987  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3988  .  .  .  .  .  .  .  0: *ast.Ident {
  3989  .  .  .  .  .  .  .  .  NamePos: source.go:329:7
  3990  .  .  .  .  .  .  .  .  Name: "t"
  3991  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3992  .  .  .  .  .  .  .  .  .  Kind: var
  3993  .  .  .  .  .  .  .  .  .  Name: "t"
  3994  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3986)
  3995  .  .  .  .  .  .  .  .  }
  3996  .  .  .  .  .  .  .  }
  3997  .  .  .  .  .  .  }
  3998  .  .  .  .  .  .  Type: *ast.StarExpr {
  3999  .  .  .  .  .  .  .  Star: source.go:329:9
  4000  .  .  .  .  .  .  .  X: *ast.Ident {
  4001  .  .  .  .  .  .  .  .  NamePos: source.go:329:10
  4002  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  4003  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  4004  .  .  .  .  .  .  .  }
  4005  .  .  .  .  .  .  }
  4006  .  .  .  .  .  }
  4007  .  .  .  .  }
  4008  .  .  .  .  Closing: source.go:329:25
  4009  .  .  .  }
  4010  .  .  .  Name: *ast.Ident {
  4011  .  .  .  .  NamePos: source.go:329:27
  4012  .  .  .  .  Name: "readMarblePrivateDetails"
  4013  .  .  .  }
  4014  .  .  .  Type: *ast.FuncType {
  4015  .  .  .  .  Func: source.go:329:1
  4016  .  .  .  .  Params: *ast.FieldList {
  4017  .  .  .  .  .  Opening: source.go:329:51
  4018  .  .  .  .  .  List: []*ast.Field (len = 2) {
  4019  .  .  .  .  .  .  0: *ast.Field {
  4020  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4021  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4022  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:52
  4023  .  .  .  .  .  .  .  .  .  Name: "stub"
  4024  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4025  .  .  .  .  .  .  .  .  .  .  Kind: var
  4026  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  4027  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4019)
  4028  .  .  .  .  .  .  .  .  .  }
  4029  .  .  .  .  .  .  .  .  }
  4030  .  .  .  .  .  .  .  }
  4031  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4032  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4033  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:57
  4034  .  .  .  .  .  .  .  .  .  Name: "shim"
  4035  .  .  .  .  .  .  .  .  }
  4036  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4037  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:62
  4038  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  4039  .  .  .  .  .  .  .  .  }
  4040  .  .  .  .  .  .  .  }
  4041  .  .  .  .  .  .  }
  4042  .  .  .  .  .  .  1: *ast.Field {
  4043  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4044  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4045  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:86
  4046  .  .  .  .  .  .  .  .  .  Name: "args"
  4047  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4048  .  .  .  .  .  .  .  .  .  .  Kind: var
  4049  .  .  .  .  .  .  .  .  .  .  Name: "args"
  4050  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4042)
  4051  .  .  .  .  .  .  .  .  .  }
  4052  .  .  .  .  .  .  .  .  }
  4053  .  .  .  .  .  .  .  }
  4054  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4055  .  .  .  .  .  .  .  .  Lbrack: source.go:329:91
  4056  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  4057  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:93
  4058  .  .  .  .  .  .  .  .  .  Name: "string"
  4059  .  .  .  .  .  .  .  .  }
  4060  .  .  .  .  .  .  .  }
  4061  .  .  .  .  .  .  }
  4062  .  .  .  .  .  }
  4063  .  .  .  .  .  Closing: source.go:329:99
  4064  .  .  .  .  }
  4065  .  .  .  .  Results: *ast.FieldList {
  4066  .  .  .  .  .  Opening: -
  4067  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4068  .  .  .  .  .  .  0: *ast.Field {
  4069  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4070  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4071  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:101
  4072  .  .  .  .  .  .  .  .  .  Name: "pb"
  4073  .  .  .  .  .  .  .  .  }
  4074  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4075  .  .  .  .  .  .  .  .  .  NamePos: source.go:329:104
  4076  .  .  .  .  .  .  .  .  .  Name: "Response"
  4077  .  .  .  .  .  .  .  .  }
  4078  .  .  .  .  .  .  .  }
  4079  .  .  .  .  .  .  }
  4080  .  .  .  .  .  }
  4081  .  .  .  .  .  Closing: -
  4082  .  .  .  .  }
  4083  .  .  .  }
  4084  .  .  .  Body: *ast.BlockStmt {
  4085  .  .  .  .  Lbrace: source.go:329:113
  4086  .  .  .  .  List: []ast.Stmt (len = 7) {
  4087  .  .  .  .  .  0: *ast.DeclStmt {
  4088  .  .  .  .  .  .  Decl: *ast.GenDecl {
  4089  .  .  .  .  .  .  .  TokPos: source.go:330:2
  4090  .  .  .  .  .  .  .  Tok: var
  4091  .  .  .  .  .  .  .  Lparen: -
  4092  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  4093  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  4094  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
  4095  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4096  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:330:6
  4097  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  4098  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4099  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  4100  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  4101  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4093)
  4102  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  4103  .  .  .  .  .  .  .  .  .  .  .  }
  4104  .  .  .  .  .  .  .  .  .  .  }
  4105  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  4106  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:330:12
  4107  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  4108  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4109  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  4110  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  4111  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4093)
  4112  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  4113  .  .  .  .  .  .  .  .  .  .  .  }
  4114  .  .  .  .  .  .  .  .  .  .  }
  4115  .  .  .  .  .  .  .  .  .  }
  4116  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  4117  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:330:21
  4118  .  .  .  .  .  .  .  .  .  .  Name: "string"
  4119  .  .  .  .  .  .  .  .  .  }
  4120  .  .  .  .  .  .  .  .  }
  4121  .  .  .  .  .  .  .  }
  4122  .  .  .  .  .  .  .  Rparen: -
  4123  .  .  .  .  .  .  }
  4124  .  .  .  .  .  }
  4125  .  .  .  .  .  1: *ast.DeclStmt {
  4126  .  .  .  .  .  .  Decl: *ast.GenDecl {
  4127  .  .  .  .  .  .  .  TokPos: source.go:331:2
  4128  .  .  .  .  .  .  .  Tok: var
  4129  .  .  .  .  .  .  .  Lparen: -
  4130  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  4131  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  4132  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4133  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4134  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:331:6
  4135  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  4136  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4137  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  4138  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  4139  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4131)
  4140  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  4141  .  .  .  .  .  .  .  .  .  .  .  }
  4142  .  .  .  .  .  .  .  .  .  .  }
  4143  .  .  .  .  .  .  .  .  .  }
  4144  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  4145  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:331:10
  4146  .  .  .  .  .  .  .  .  .  .  Name: "error"
  4147  .  .  .  .  .  .  .  .  .  }
  4148  .  .  .  .  .  .  .  .  }
  4149  .  .  .  .  .  .  .  }
  4150  .  .  .  .  .  .  .  Rparen: -
  4151  .  .  .  .  .  .  }
  4152  .  .  .  .  .  }
  4153  .  .  .  .  .  2: *ast.IfStmt {
  4154  .  .  .  .  .  .  If: source.go:333:2
  4155  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  4156  .  .  .  .  .  .  .  X: *ast.CallExpr {
  4157  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4158  .  .  .  .  .  .  .  .  .  NamePos: source.go:333:5
  4159  .  .  .  .  .  .  .  .  .  Name: "len"
  4160  .  .  .  .  .  .  .  .  }
  4161  .  .  .  .  .  .  .  .  Lparen: source.go:333:8
  4162  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4163  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4164  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:333:9
  4165  .  .  .  .  .  .  .  .  .  .  Name: "args"
  4166  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4047)
  4167  .  .  .  .  .  .  .  .  .  }
  4168  .  .  .  .  .  .  .  .  }
  4169  .  .  .  .  .  .  .  .  Ellipsis: -
  4170  .  .  .  .  .  .  .  .  Rparen: source.go:333:13
  4171  .  .  .  .  .  .  .  }
  4172  .  .  .  .  .  .  .  OpPos: source.go:333:15
  4173  .  .  .  .  .  .  .  Op: !=
  4174  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  4175  .  .  .  .  .  .  .  .  ValuePos: source.go:333:18
  4176  .  .  .  .  .  .  .  .  Kind: INT
  4177  .  .  .  .  .  .  .  .  Value: "1"
  4178  .  .  .  .  .  .  .  }
  4179  .  .  .  .  .  .  }
  4180  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4181  .  .  .  .  .  .  .  Lbrace: source.go:333:20
  4182  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4183  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  4184  .  .  .  .  .  .  .  .  .  Return: source.go:334:3
  4185  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4186  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4187  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4188  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4189  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:334:10
  4190  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4191  .  .  .  .  .  .  .  .  .  .  .  .  }
  4192  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4193  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:334:15
  4194  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4195  .  .  .  .  .  .  .  .  .  .  .  .  }
  4196  .  .  .  .  .  .  .  .  .  .  .  }
  4197  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:334:20
  4198  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4199  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  4200  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:334:21
  4201  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4202  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting name of the marble to query\""
  4203  .  .  .  .  .  .  .  .  .  .  .  .  }
  4204  .  .  .  .  .  .  .  .  .  .  .  }
  4205  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4206  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:334:91
  4207  .  .  .  .  .  .  .  .  .  .  }
  4208  .  .  .  .  .  .  .  .  .  }
  4209  .  .  .  .  .  .  .  .  }
  4210  .  .  .  .  .  .  .  }
  4211  .  .  .  .  .  .  .  Rbrace: source.go:335:2
  4212  .  .  .  .  .  .  }
  4213  .  .  .  .  .  }
  4214  .  .  .  .  .  3: *ast.AssignStmt {
  4215  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4216  .  .  .  .  .  .  .  0: *ast.Ident {
  4217  .  .  .  .  .  .  .  .  NamePos: source.go:337:2
  4218  .  .  .  .  .  .  .  .  Name: "name"
  4219  .  .  .  .  .  .  .  .  Obj: *(obj @ 4098)
  4220  .  .  .  .  .  .  .  }
  4221  .  .  .  .  .  .  }
  4222  .  .  .  .  .  .  TokPos: source.go:337:7
  4223  .  .  .  .  .  .  Tok: =
  4224  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4225  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  4226  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4227  .  .  .  .  .  .  .  .  .  NamePos: source.go:337:9
  4228  .  .  .  .  .  .  .  .  .  Name: "args"
  4229  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4047)
  4230  .  .  .  .  .  .  .  .  }
  4231  .  .  .  .  .  .  .  .  Lbrack: source.go:337:13
  4232  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  4233  .  .  .  .  .  .  .  .  .  ValuePos: source.go:337:14
  4234  .  .  .  .  .  .  .  .  .  Kind: INT
  4235  .  .  .  .  .  .  .  .  .  Value: "0"
  4236  .  .  .  .  .  .  .  .  }
  4237  .  .  .  .  .  .  .  .  Rbrack: source.go:337:15
  4238  .  .  .  .  .  .  .  }
  4239  .  .  .  .  .  .  }
  4240  .  .  .  .  .  }
  4241  .  .  .  .  .  4: *ast.AssignStmt {
  4242  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  4243  .  .  .  .  .  .  .  0: *ast.Ident {
  4244  .  .  .  .  .  .  .  .  NamePos: source.go:338:2
  4245  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  4246  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4247  .  .  .  .  .  .  .  .  .  Kind: var
  4248  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  4249  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4241)
  4250  .  .  .  .  .  .  .  .  }
  4251  .  .  .  .  .  .  .  }
  4252  .  .  .  .  .  .  .  1: *ast.Ident {
  4253  .  .  .  .  .  .  .  .  NamePos: source.go:338:14
  4254  .  .  .  .  .  .  .  .  Name: "err"
  4255  .  .  .  .  .  .  .  .  Obj: *(obj @ 4136)
  4256  .  .  .  .  .  .  .  }
  4257  .  .  .  .  .  .  }
  4258  .  .  .  .  .  .  TokPos: source.go:338:18
  4259  .  .  .  .  .  .  Tok: :=
  4260  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4261  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4262  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4263  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4264  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:338:21
  4265  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  4266  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4024)
  4267  .  .  .  .  .  .  .  .  .  }
  4268  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4269  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:338:26
  4270  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateData"
  4271  .  .  .  .  .  .  .  .  .  }
  4272  .  .  .  .  .  .  .  .  }
  4273  .  .  .  .  .  .  .  .  Lparen: source.go:338:40
  4274  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  4275  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  4276  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:338:41
  4277  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4278  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarblePrivateDetails\""
  4279  .  .  .  .  .  .  .  .  .  }
  4280  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  4281  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:338:75
  4282  .  .  .  .  .  .  .  .  .  .  Name: "name"
  4283  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4098)
  4284  .  .  .  .  .  .  .  .  .  }
  4285  .  .  .  .  .  .  .  .  }
  4286  .  .  .  .  .  .  .  .  Ellipsis: -
  4287  .  .  .  .  .  .  .  .  Rparen: source.go:338:79
  4288  .  .  .  .  .  .  .  }
  4289  .  .  .  .  .  .  }
  4290  .  .  .  .  .  }
  4291  .  .  .  .  .  5: *ast.IfStmt {
  4292  .  .  .  .  .  .  If: source.go:339:2
  4293  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  4294  .  .  .  .  .  .  .  X: *ast.Ident {
  4295  .  .  .  .  .  .  .  .  NamePos: source.go:339:5
  4296  .  .  .  .  .  .  .  .  Name: "err"
  4297  .  .  .  .  .  .  .  .  Obj: *(obj @ 4136)
  4298  .  .  .  .  .  .  .  }
  4299  .  .  .  .  .  .  .  OpPos: source.go:339:9
  4300  .  .  .  .  .  .  .  Op: !=
  4301  .  .  .  .  .  .  .  Y: *ast.Ident {
  4302  .  .  .  .  .  .  .  .  NamePos: source.go:339:12
  4303  .  .  .  .  .  .  .  .  Name: "nil"
  4304  .  .  .  .  .  .  .  }
  4305  .  .  .  .  .  .  }
  4306  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4307  .  .  .  .  .  .  .  Lbrace: source.go:339:16
  4308  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
  4309  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  4310  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4311  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4312  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:340:3
  4313  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  4314  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4108)
  4315  .  .  .  .  .  .  .  .  .  .  }
  4316  .  .  .  .  .  .  .  .  .  }
  4317  .  .  .  .  .  .  .  .  .  TokPos: source.go:340:12
  4318  .  .  .  .  .  .  .  .  .  Tok: =
  4319  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4320  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  4321  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  4322  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  4323  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  4324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  4325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:340:14
  4326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4327  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"{\\\"Error\\\":\\\"Failed to get private details for \""
  4328  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4329  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:340:64
  4330  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  4332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:340:66
  4333  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  4334  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4098)
  4335  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4336  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4337  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:340:71
  4338  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4339  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  4340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:340:73
  4341  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4342  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\": \""
  4343  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4344  .  .  .  .  .  .  .  .  .  .  .  .  }
  4345  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:340:78
  4346  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4347  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  4348  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4349  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4350  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:340:80
  4351  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  4352  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4136)
  4353  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4354  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:340:84
  4356  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4357  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4358  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4359  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:340:89
  4360  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4361  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:340:90
  4362  .  .  .  .  .  .  .  .  .  .  .  .  }
  4363  .  .  .  .  .  .  .  .  .  .  .  }
  4364  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:340:92
  4365  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4366  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  4367  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:340:94
  4368  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4369  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\\"}\""
  4370  .  .  .  .  .  .  .  .  .  .  .  }
  4371  .  .  .  .  .  .  .  .  .  .  }
  4372  .  .  .  .  .  .  .  .  .  }
  4373  .  .  .  .  .  .  .  .  }
  4374  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
  4375  .  .  .  .  .  .  .  .  .  Return: source.go:341:3
  4376  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4377  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4378  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4379  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4380  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:341:10
  4381  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4382  .  .  .  .  .  .  .  .  .  .  .  .  }
  4383  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4384  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:341:15
  4385  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4386  .  .  .  .  .  .  .  .  .  .  .  .  }
  4387  .  .  .  .  .  .  .  .  .  .  .  }
  4388  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:341:20
  4389  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4390  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4391  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:341:21
  4392  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  4393  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4108)
  4394  .  .  .  .  .  .  .  .  .  .  .  .  }
  4395  .  .  .  .  .  .  .  .  .  .  .  }
  4396  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4397  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:341:29
  4398  .  .  .  .  .  .  .  .  .  .  }
  4399  .  .  .  .  .  .  .  .  .  }
  4400  .  .  .  .  .  .  .  .  }
  4401  .  .  .  .  .  .  .  }
  4402  .  .  .  .  .  .  .  Rbrace: source.go:342:2
  4403  .  .  .  .  .  .  }
  4404  .  .  .  .  .  .  Else: *ast.IfStmt {
  4405  .  .  .  .  .  .  .  If: source.go:342:9
  4406  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  4407  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4408  .  .  .  .  .  .  .  .  .  NamePos: source.go:342:12
  4409  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  4410  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4246)
  4411  .  .  .  .  .  .  .  .  }
  4412  .  .  .  .  .  .  .  .  OpPos: source.go:342:23
  4413  .  .  .  .  .  .  .  .  Op: ==
  4414  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  4415  .  .  .  .  .  .  .  .  .  NamePos: source.go:342:26
  4416  .  .  .  .  .  .  .  .  .  Name: "nil"
  4417  .  .  .  .  .  .  .  .  }
  4418  .  .  .  .  .  .  .  }
  4419  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4420  .  .  .  .  .  .  .  .  Lbrace: source.go:342:30
  4421  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
  4422  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  4423  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4424  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4425  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:343:3
  4426  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  4427  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4108)
  4428  .  .  .  .  .  .  .  .  .  .  .  }
  4429  .  .  .  .  .  .  .  .  .  .  }
  4430  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:343:12
  4431  .  .  .  .  .  .  .  .  .  .  Tok: =
  4432  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4433  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  4434  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  4435  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  4436  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:343:14
  4437  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4438  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"{\\\"Error\\\":\\\"Marble private details does not exist: \""
  4439  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4440  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:343:69
  4441  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4442  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  4443  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:343:71
  4444  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  4445  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4098)
  4446  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4447  .  .  .  .  .  .  .  .  .  .  .  .  }
  4448  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:343:76
  4449  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4450  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  4451  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:343:78
  4452  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4453  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\\"}\""
  4454  .  .  .  .  .  .  .  .  .  .  .  .  }
  4455  .  .  .  .  .  .  .  .  .  .  .  }
  4456  .  .  .  .  .  .  .  .  .  .  }
  4457  .  .  .  .  .  .  .  .  .  }
  4458  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
  4459  .  .  .  .  .  .  .  .  .  .  Return: source.go:344:3
  4460  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4461  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4462  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4463  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:344:10
  4465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4466  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4467  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:344:15
  4469  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4470  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4471  .  .  .  .  .  .  .  .  .  .  .  .  }
  4472  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:344:20
  4473  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4474  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4475  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:344:21
  4476  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "jsonResp"
  4477  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4108)
  4478  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4479  .  .  .  .  .  .  .  .  .  .  .  .  }
  4480  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4481  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:344:29
  4482  .  .  .  .  .  .  .  .  .  .  .  }
  4483  .  .  .  .  .  .  .  .  .  .  }
  4484  .  .  .  .  .  .  .  .  .  }
  4485  .  .  .  .  .  .  .  .  }
  4486  .  .  .  .  .  .  .  .  Rbrace: source.go:345:2
  4487  .  .  .  .  .  .  .  }
  4488  .  .  .  .  .  .  }
  4489  .  .  .  .  .  }
  4490  .  .  .  .  .  6: *ast.ReturnStmt {
  4491  .  .  .  .  .  .  Return: source.go:347:2
  4492  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4493  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4494  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4495  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4496  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:347:9
  4497  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4498  .  .  .  .  .  .  .  .  .  }
  4499  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4500  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:347:14
  4501  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  4502  .  .  .  .  .  .  .  .  .  }
  4503  .  .  .  .  .  .  .  .  }
  4504  .  .  .  .  .  .  .  .  Lparen: source.go:347:21
  4505  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4506  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4507  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:347:22
  4508  .  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  4509  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4246)
  4510  .  .  .  .  .  .  .  .  .  }
  4511  .  .  .  .  .  .  .  .  }
  4512  .  .  .  .  .  .  .  .  Ellipsis: -
  4513  .  .  .  .  .  .  .  .  Rparen: source.go:347:32
  4514  .  .  .  .  .  .  .  }
  4515  .  .  .  .  .  .  }
  4516  .  .  .  .  .  }
  4517  .  .  .  .  }
  4518  .  .  .  .  Rbrace: source.go:348:1
  4519  .  .  .  }
  4520  .  .  }
  4521  .  .  10: *ast.FuncDecl {
  4522  .  .  .  Recv: *ast.FieldList {
  4523  .  .  .  .  Opening: source.go:353:6
  4524  .  .  .  .  List: []*ast.Field (len = 1) {
  4525  .  .  .  .  .  0: *ast.Field {
  4526  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4527  .  .  .  .  .  .  .  0: *ast.Ident {
  4528  .  .  .  .  .  .  .  .  NamePos: source.go:353:7
  4529  .  .  .  .  .  .  .  .  Name: "t"
  4530  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4531  .  .  .  .  .  .  .  .  .  Kind: var
  4532  .  .  .  .  .  .  .  .  .  Name: "t"
  4533  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4525)
  4534  .  .  .  .  .  .  .  .  }
  4535  .  .  .  .  .  .  .  }
  4536  .  .  .  .  .  .  }
  4537  .  .  .  .  .  .  Type: *ast.StarExpr {
  4538  .  .  .  .  .  .  .  Star: source.go:353:9
  4539  .  .  .  .  .  .  .  X: *ast.Ident {
  4540  .  .  .  .  .  .  .  .  NamePos: source.go:353:10
  4541  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  4542  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  4543  .  .  .  .  .  .  .  }
  4544  .  .  .  .  .  .  }
  4545  .  .  .  .  .  }
  4546  .  .  .  .  }
  4547  .  .  .  .  Closing: source.go:353:25
  4548  .  .  .  }
  4549  .  .  .  Name: *ast.Ident {
  4550  .  .  .  .  NamePos: source.go:353:27
  4551  .  .  .  .  Name: "delete"
  4552  .  .  .  }
  4553  .  .  .  Type: *ast.FuncType {
  4554  .  .  .  .  Func: source.go:353:1
  4555  .  .  .  .  Params: *ast.FieldList {
  4556  .  .  .  .  .  Opening: source.go:353:33
  4557  .  .  .  .  .  List: []*ast.Field (len = 2) {
  4558  .  .  .  .  .  .  0: *ast.Field {
  4559  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4560  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4561  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:34
  4562  .  .  .  .  .  .  .  .  .  Name: "stub"
  4563  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4564  .  .  .  .  .  .  .  .  .  .  Kind: var
  4565  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  4566  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4558)
  4567  .  .  .  .  .  .  .  .  .  }
  4568  .  .  .  .  .  .  .  .  }
  4569  .  .  .  .  .  .  .  }
  4570  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4571  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4572  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:39
  4573  .  .  .  .  .  .  .  .  .  Name: "shim"
  4574  .  .  .  .  .  .  .  .  }
  4575  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4576  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:44
  4577  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  4578  .  .  .  .  .  .  .  .  }
  4579  .  .  .  .  .  .  .  }
  4580  .  .  .  .  .  .  }
  4581  .  .  .  .  .  .  1: *ast.Field {
  4582  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4583  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4584  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:68
  4585  .  .  .  .  .  .  .  .  .  Name: "args"
  4586  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4587  .  .  .  .  .  .  .  .  .  .  Kind: var
  4588  .  .  .  .  .  .  .  .  .  .  Name: "args"
  4589  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4581)
  4590  .  .  .  .  .  .  .  .  .  }
  4591  .  .  .  .  .  .  .  .  }
  4592  .  .  .  .  .  .  .  }
  4593  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4594  .  .  .  .  .  .  .  .  Lbrack: source.go:353:73
  4595  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  4596  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:75
  4597  .  .  .  .  .  .  .  .  .  Name: "string"
  4598  .  .  .  .  .  .  .  .  }
  4599  .  .  .  .  .  .  .  }
  4600  .  .  .  .  .  .  }
  4601  .  .  .  .  .  }
  4602  .  .  .  .  .  Closing: source.go:353:81
  4603  .  .  .  .  }
  4604  .  .  .  .  Results: *ast.FieldList {
  4605  .  .  .  .  .  Opening: -
  4606  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4607  .  .  .  .  .  .  0: *ast.Field {
  4608  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4609  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4610  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:83
  4611  .  .  .  .  .  .  .  .  .  Name: "pb"
  4612  .  .  .  .  .  .  .  .  }
  4613  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4614  .  .  .  .  .  .  .  .  .  NamePos: source.go:353:86
  4615  .  .  .  .  .  .  .  .  .  Name: "Response"
  4616  .  .  .  .  .  .  .  .  }
  4617  .  .  .  .  .  .  .  }
  4618  .  .  .  .  .  .  }
  4619  .  .  .  .  .  }
  4620  .  .  .  .  .  Closing: -
  4621  .  .  .  .  }
  4622  .  .  .  }
  4623  .  .  .  Body: *ast.BlockStmt {
  4624  .  .  .  .  Lbrace: source.go:353:95
  4625  .  .  .  .  List: []ast.Stmt (len = 27) {
  4626  .  .  .  .  .  0: *ast.ExprStmt {
  4627  .  .  .  .  .  .  X: *ast.CallExpr {
  4628  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4629  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4630  .  .  .  .  .  .  .  .  .  NamePos: source.go:354:2
  4631  .  .  .  .  .  .  .  .  .  Name: "fmt"
  4632  .  .  .  .  .  .  .  .  }
  4633  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4634  .  .  .  .  .  .  .  .  .  NamePos: source.go:354:6
  4635  .  .  .  .  .  .  .  .  .  Name: "Println"
  4636  .  .  .  .  .  .  .  .  }
  4637  .  .  .  .  .  .  .  }
  4638  .  .  .  .  .  .  .  Lparen: source.go:354:13
  4639  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4640  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  4641  .  .  .  .  .  .  .  .  .  ValuePos: source.go:354:14
  4642  .  .  .  .  .  .  .  .  .  Kind: STRING
  4643  .  .  .  .  .  .  .  .  .  Value: "\"- start delete marble\""
  4644  .  .  .  .  .  .  .  .  }
  4645  .  .  .  .  .  .  .  }
  4646  .  .  .  .  .  .  .  Ellipsis: -
  4647  .  .  .  .  .  .  .  Rparen: source.go:354:37
  4648  .  .  .  .  .  .  }
  4649  .  .  .  .  .  }
  4650  .  .  .  .  .  1: *ast.DeclStmt {
  4651  .  .  .  .  .  .  Decl: *ast.GenDecl {
  4652  .  .  .  .  .  .  .  TokPos: source.go:356:2
  4653  .  .  .  .  .  .  .  Tok: type
  4654  .  .  .  .  .  .  .  Lparen: -
  4655  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  4656  .  .  .  .  .  .  .  .  0: *ast.TypeSpec {
  4657  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
  4658  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:356:7
  4659  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteTransientInput"
  4660  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4661  .  .  .  .  .  .  .  .  .  .  .  Kind: type
  4662  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteTransientInput"
  4663  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4656)
  4664  .  .  .  .  .  .  .  .  .  .  }
  4665  .  .  .  .  .  .  .  .  .  }
  4666  .  .  .  .  .  .  .  .  .  Assign: -
  4667  .  .  .  .  .  .  .  .  .  Type: *ast.StructType {
  4668  .  .  .  .  .  .  .  .  .  .  Struct: source.go:356:34
  4669  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {
  4670  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:356:41
  4671  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4672  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  4673  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:357:3
  4676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  4677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  4679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  4680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4672)
  4681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4683  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4684  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  4685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:357:8
  4686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  4687  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4688  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  4689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:357:15
  4690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"name\"`"
  4692  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4693  .  .  .  .  .  .  .  .  .  .  .  .  }
  4694  .  .  .  .  .  .  .  .  .  .  .  }
  4695  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:358:2
  4696  .  .  .  .  .  .  .  .  .  .  }
  4697  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  4698  .  .  .  .  .  .  .  .  .  }
  4699  .  .  .  .  .  .  .  .  }
  4700  .  .  .  .  .  .  .  }
  4701  .  .  .  .  .  .  .  Rparen: -
  4702  .  .  .  .  .  .  }
  4703  .  .  .  .  .  }
  4704  .  .  .  .  .  2: *ast.IfStmt {
  4705  .  .  .  .  .  .  If: source.go:360:2
  4706  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  4707  .  .  .  .  .  .  .  X: *ast.CallExpr {
  4708  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4709  .  .  .  .  .  .  .  .  .  NamePos: source.go:360:5
  4710  .  .  .  .  .  .  .  .  .  Name: "len"
  4711  .  .  .  .  .  .  .  .  }
  4712  .  .  .  .  .  .  .  .  Lparen: source.go:360:8
  4713  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4714  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4715  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:360:9
  4716  .  .  .  .  .  .  .  .  .  .  Name: "args"
  4717  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4586)
  4718  .  .  .  .  .  .  .  .  .  }
  4719  .  .  .  .  .  .  .  .  }
  4720  .  .  .  .  .  .  .  .  Ellipsis: -
  4721  .  .  .  .  .  .  .  .  Rparen: source.go:360:13
  4722  .  .  .  .  .  .  .  }
  4723  .  .  .  .  .  .  .  OpPos: source.go:360:15
  4724  .  .  .  .  .  .  .  Op: !=
  4725  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  4726  .  .  .  .  .  .  .  .  ValuePos: source.go:360:18
  4727  .  .  .  .  .  .  .  .  Kind: INT
  4728  .  .  .  .  .  .  .  .  Value: "0"
  4729  .  .  .  .  .  .  .  }
  4730  .  .  .  .  .  .  }
  4731  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4732  .  .  .  .  .  .  .  Lbrace: source.go:360:20
  4733  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4734  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  4735  .  .  .  .  .  .  .  .  .  Return: source.go:361:3
  4736  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4737  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4738  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4739  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4740  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:361:10
  4741  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4742  .  .  .  .  .  .  .  .  .  .  .  .  }
  4743  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4744  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:361:15
  4745  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4746  .  .  .  .  .  .  .  .  .  .  .  .  }
  4747  .  .  .  .  .  .  .  .  .  .  .  }
  4748  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:361:20
  4749  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4750  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  4751  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:361:21
  4752  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4753  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Private marble name must be passed in transient map.\""
  4754  .  .  .  .  .  .  .  .  .  .  .  .  }
  4755  .  .  .  .  .  .  .  .  .  .  .  }
  4756  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4757  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:361:106
  4758  .  .  .  .  .  .  .  .  .  .  }
  4759  .  .  .  .  .  .  .  .  .  }
  4760  .  .  .  .  .  .  .  .  }
  4761  .  .  .  .  .  .  .  }
  4762  .  .  .  .  .  .  .  Rbrace: source.go:362:2
  4763  .  .  .  .  .  .  }
  4764  .  .  .  .  .  }
  4765  .  .  .  .  .  3: *ast.AssignStmt {
  4766  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  4767  .  .  .  .  .  .  .  0: *ast.Ident {
  4768  .  .  .  .  .  .  .  .  NamePos: source.go:364:2
  4769  .  .  .  .  .  .  .  .  Name: "transMap"
  4770  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4771  .  .  .  .  .  .  .  .  .  Kind: var
  4772  .  .  .  .  .  .  .  .  .  Name: "transMap"
  4773  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4765)
  4774  .  .  .  .  .  .  .  .  }
  4775  .  .  .  .  .  .  .  }
  4776  .  .  .  .  .  .  .  1: *ast.Ident {
  4777  .  .  .  .  .  .  .  .  NamePos: source.go:364:12
  4778  .  .  .  .  .  .  .  .  Name: "err"
  4779  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4780  .  .  .  .  .  .  .  .  .  Kind: var
  4781  .  .  .  .  .  .  .  .  .  Name: "err"
  4782  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4765)
  4783  .  .  .  .  .  .  .  .  }
  4784  .  .  .  .  .  .  .  }
  4785  .  .  .  .  .  .  }
  4786  .  .  .  .  .  .  TokPos: source.go:364:16
  4787  .  .  .  .  .  .  Tok: :=
  4788  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4789  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4790  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4791  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4792  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:364:19
  4793  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  4794  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4563)
  4795  .  .  .  .  .  .  .  .  .  }
  4796  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4797  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:364:24
  4798  .  .  .  .  .  .  .  .  .  .  Name: "GetTransient"
  4799  .  .  .  .  .  .  .  .  .  }
  4800  .  .  .  .  .  .  .  .  }
  4801  .  .  .  .  .  .  .  .  Lparen: source.go:364:36
  4802  .  .  .  .  .  .  .  .  Ellipsis: -
  4803  .  .  .  .  .  .  .  .  Rparen: source.go:364:37
  4804  .  .  .  .  .  .  .  }
  4805  .  .  .  .  .  .  }
  4806  .  .  .  .  .  }
  4807  .  .  .  .  .  4: *ast.IfStmt {
  4808  .  .  .  .  .  .  If: source.go:365:2
  4809  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  4810  .  .  .  .  .  .  .  X: *ast.Ident {
  4811  .  .  .  .  .  .  .  .  NamePos: source.go:365:5
  4812  .  .  .  .  .  .  .  .  Name: "err"
  4813  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  4814  .  .  .  .  .  .  .  }
  4815  .  .  .  .  .  .  .  OpPos: source.go:365:9
  4816  .  .  .  .  .  .  .  Op: !=
  4817  .  .  .  .  .  .  .  Y: *ast.Ident {
  4818  .  .  .  .  .  .  .  .  NamePos: source.go:365:12
  4819  .  .  .  .  .  .  .  .  Name: "nil"
  4820  .  .  .  .  .  .  .  }
  4821  .  .  .  .  .  .  }
  4822  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4823  .  .  .  .  .  .  .  Lbrace: source.go:365:16
  4824  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4825  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  4826  .  .  .  .  .  .  .  .  .  Return: source.go:366:3
  4827  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4828  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4829  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4830  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4831  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:366:10
  4832  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4833  .  .  .  .  .  .  .  .  .  .  .  .  }
  4834  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4835  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:366:15
  4836  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4837  .  .  .  .  .  .  .  .  .  .  .  .  }
  4838  .  .  .  .  .  .  .  .  .  .  .  }
  4839  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:366:20
  4840  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4841  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  4842  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  4843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:366:21
  4844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Error getting transient: \""
  4846  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4847  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:366:49
  4848  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  4849  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  4850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:366:51
  4853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  4854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  4855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:366:55
  4858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:366:60
  4862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:366:61
  4864  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4865  .  .  .  .  .  .  .  .  .  .  .  .  }
  4866  .  .  .  .  .  .  .  .  .  .  .  }
  4867  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4868  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:366:62
  4869  .  .  .  .  .  .  .  .  .  .  }
  4870  .  .  .  .  .  .  .  .  .  }
  4871  .  .  .  .  .  .  .  .  }
  4872  .  .  .  .  .  .  .  }
  4873  .  .  .  .  .  .  .  Rbrace: source.go:367:2
  4874  .  .  .  .  .  .  }
  4875  .  .  .  .  .  }
  4876  .  .  .  .  .  5: *ast.AssignStmt {
  4877  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  4878  .  .  .  .  .  .  .  0: *ast.Ident {
  4879  .  .  .  .  .  .  .  .  NamePos: source.go:369:2
  4880  .  .  .  .  .  .  .  .  Name: "marbleDeleteJsonBytes"
  4881  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4882  .  .  .  .  .  .  .  .  .  Kind: var
  4883  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteJsonBytes"
  4884  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4876)
  4885  .  .  .  .  .  .  .  .  }
  4886  .  .  .  .  .  .  .  }
  4887  .  .  .  .  .  .  .  1: *ast.Ident {
  4888  .  .  .  .  .  .  .  .  NamePos: source.go:369:25
  4889  .  .  .  .  .  .  .  .  Name: "ok"
  4890  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4891  .  .  .  .  .  .  .  .  .  Kind: var
  4892  .  .  .  .  .  .  .  .  .  Name: "ok"
  4893  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4876)
  4894  .  .  .  .  .  .  .  .  }
  4895  .  .  .  .  .  .  .  }
  4896  .  .  .  .  .  .  }
  4897  .  .  .  .  .  .  TokPos: source.go:369:28
  4898  .  .  .  .  .  .  Tok: :=
  4899  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4900  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  4901  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4902  .  .  .  .  .  .  .  .  .  NamePos: source.go:369:31
  4903  .  .  .  .  .  .  .  .  .  Name: "transMap"
  4904  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4770)
  4905  .  .  .  .  .  .  .  .  }
  4906  .  .  .  .  .  .  .  .  Lbrack: source.go:369:39
  4907  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  4908  .  .  .  .  .  .  .  .  .  ValuePos: source.go:369:40
  4909  .  .  .  .  .  .  .  .  .  Kind: STRING
  4910  .  .  .  .  .  .  .  .  .  Value: "\"marble_delete\""
  4911  .  .  .  .  .  .  .  .  }
  4912  .  .  .  .  .  .  .  .  Rbrack: source.go:369:55
  4913  .  .  .  .  .  .  .  }
  4914  .  .  .  .  .  .  }
  4915  .  .  .  .  .  }
  4916  .  .  .  .  .  6: *ast.IfStmt {
  4917  .  .  .  .  .  .  If: source.go:370:2
  4918  .  .  .  .  .  .  Cond: *ast.UnaryExpr {
  4919  .  .  .  .  .  .  .  OpPos: source.go:370:5
  4920  .  .  .  .  .  .  .  Op: !
  4921  .  .  .  .  .  .  .  X: *ast.Ident {
  4922  .  .  .  .  .  .  .  .  NamePos: source.go:370:6
  4923  .  .  .  .  .  .  .  .  Name: "ok"
  4924  .  .  .  .  .  .  .  .  Obj: *(obj @ 4890)
  4925  .  .  .  .  .  .  .  }
  4926  .  .  .  .  .  .  }
  4927  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4928  .  .  .  .  .  .  .  Lbrace: source.go:370:9
  4929  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4930  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  4931  .  .  .  .  .  .  .  .  .  Return: source.go:371:3
  4932  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4933  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4934  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4935  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4936  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:371:10
  4937  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4938  .  .  .  .  .  .  .  .  .  .  .  .  }
  4939  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4940  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:371:15
  4941  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  4942  .  .  .  .  .  .  .  .  .  .  .  .  }
  4943  .  .  .  .  .  .  .  .  .  .  .  }
  4944  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:371:20
  4945  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4946  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  4947  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:371:21
  4948  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  4949  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble_delete must be a key in the transient map\""
  4950  .  .  .  .  .  .  .  .  .  .  .  .  }
  4951  .  .  .  .  .  .  .  .  .  .  .  }
  4952  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4953  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:371:71
  4954  .  .  .  .  .  .  .  .  .  .  }
  4955  .  .  .  .  .  .  .  .  .  }
  4956  .  .  .  .  .  .  .  .  }
  4957  .  .  .  .  .  .  .  }
  4958  .  .  .  .  .  .  .  Rbrace: source.go:372:2
  4959  .  .  .  .  .  .  }
  4960  .  .  .  .  .  }
  4961  .  .  .  .  .  7: *ast.IfStmt {
  4962  .  .  .  .  .  .  If: source.go:374:2
  4963  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  4964  .  .  .  .  .  .  .  X: *ast.CallExpr {
  4965  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4966  .  .  .  .  .  .  .  .  .  NamePos: source.go:374:5
  4967  .  .  .  .  .  .  .  .  .  Name: "len"
  4968  .  .  .  .  .  .  .  .  }
  4969  .  .  .  .  .  .  .  .  Lparen: source.go:374:8
  4970  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4971  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4972  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:374:9
  4973  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteJsonBytes"
  4974  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4881)
  4975  .  .  .  .  .  .  .  .  .  }
  4976  .  .  .  .  .  .  .  .  }
  4977  .  .  .  .  .  .  .  .  Ellipsis: -
  4978  .  .  .  .  .  .  .  .  Rparen: source.go:374:30
  4979  .  .  .  .  .  .  .  }
  4980  .  .  .  .  .  .  .  OpPos: source.go:374:32
  4981  .  .  .  .  .  .  .  Op: ==
  4982  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  4983  .  .  .  .  .  .  .  .  ValuePos: source.go:374:35
  4984  .  .  .  .  .  .  .  .  Kind: INT
  4985  .  .  .  .  .  .  .  .  Value: "0"
  4986  .  .  .  .  .  .  .  }
  4987  .  .  .  .  .  .  }
  4988  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4989  .  .  .  .  .  .  .  Lbrace: source.go:374:37
  4990  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4991  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  4992  .  .  .  .  .  .  .  .  .  Return: source.go:375:3
  4993  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4994  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4995  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  4996  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4997  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:375:10
  4998  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  4999  .  .  .  .  .  .  .  .  .  .  .  .  }
  5000  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5001  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:375:15
  5002  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5003  .  .  .  .  .  .  .  .  .  .  .  .  }
  5004  .  .  .  .  .  .  .  .  .  .  .  }
  5005  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:375:20
  5006  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5007  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5008  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:375:21
  5009  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5010  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble_delete value in the transient map must be a non-empty JSON string\""
  5011  .  .  .  .  .  .  .  .  .  .  .  .  }
  5012  .  .  .  .  .  .  .  .  .  .  .  }
  5013  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5014  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:375:95
  5015  .  .  .  .  .  .  .  .  .  .  }
  5016  .  .  .  .  .  .  .  .  .  }
  5017  .  .  .  .  .  .  .  .  }
  5018  .  .  .  .  .  .  .  }
  5019  .  .  .  .  .  .  .  Rbrace: source.go:376:2
  5020  .  .  .  .  .  .  }
  5021  .  .  .  .  .  }
  5022  .  .  .  .  .  8: *ast.DeclStmt {
  5023  .  .  .  .  .  .  Decl: *ast.GenDecl {
  5024  .  .  .  .  .  .  .  TokPos: source.go:378:2
  5025  .  .  .  .  .  .  .  Tok: var
  5026  .  .  .  .  .  .  .  Lparen: -
  5027  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  5028  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  5029  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  5030  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5031  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:378:6
  5032  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5033  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  5034  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  5035  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5036  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 5028)
  5037  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  5038  .  .  .  .  .  .  .  .  .  .  .  }
  5039  .  .  .  .  .  .  .  .  .  .  }
  5040  .  .  .  .  .  .  .  .  .  }
  5041  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  5042  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:378:24
  5043  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteTransientInput"
  5044  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4660)
  5045  .  .  .  .  .  .  .  .  .  }
  5046  .  .  .  .  .  .  .  .  }
  5047  .  .  .  .  .  .  .  }
  5048  .  .  .  .  .  .  .  Rparen: -
  5049  .  .  .  .  .  .  }
  5050  .  .  .  .  .  }
  5051  .  .  .  .  .  9: *ast.AssignStmt {
  5052  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  5053  .  .  .  .  .  .  .  0: *ast.Ident {
  5054  .  .  .  .  .  .  .  .  NamePos: source.go:379:2
  5055  .  .  .  .  .  .  .  .  Name: "err"
  5056  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5057  .  .  .  .  .  .  .  }
  5058  .  .  .  .  .  .  }
  5059  .  .  .  .  .  .  TokPos: source.go:379:6
  5060  .  .  .  .  .  .  Tok: =
  5061  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5062  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5063  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5064  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5065  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:379:8
  5066  .  .  .  .  .  .  .  .  .  .  Name: "json"
  5067  .  .  .  .  .  .  .  .  .  }
  5068  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5069  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:379:13
  5070  .  .  .  .  .  .  .  .  .  .  Name: "Unmarshal"
  5071  .  .  .  .  .  .  .  .  .  }
  5072  .  .  .  .  .  .  .  .  }
  5073  .  .  .  .  .  .  .  .  Lparen: source.go:379:22
  5074  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5075  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5076  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:379:23
  5077  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteJsonBytes"
  5078  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4881)
  5079  .  .  .  .  .  .  .  .  .  }
  5080  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  5081  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:379:46
  5082  .  .  .  .  .  .  .  .  .  .  Op: &
  5083  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5084  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:379:47
  5085  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5086  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5087  .  .  .  .  .  .  .  .  .  .  }
  5088  .  .  .  .  .  .  .  .  .  }
  5089  .  .  .  .  .  .  .  .  }
  5090  .  .  .  .  .  .  .  .  Ellipsis: -
  5091  .  .  .  .  .  .  .  .  Rparen: source.go:379:64
  5092  .  .  .  .  .  .  .  }
  5093  .  .  .  .  .  .  }
  5094  .  .  .  .  .  }
  5095  .  .  .  .  .  10: *ast.IfStmt {
  5096  .  .  .  .  .  .  If: source.go:380:2
  5097  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5098  .  .  .  .  .  .  .  X: *ast.Ident {
  5099  .  .  .  .  .  .  .  .  NamePos: source.go:380:5
  5100  .  .  .  .  .  .  .  .  Name: "err"
  5101  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5102  .  .  .  .  .  .  .  }
  5103  .  .  .  .  .  .  .  OpPos: source.go:380:9
  5104  .  .  .  .  .  .  .  Op: !=
  5105  .  .  .  .  .  .  .  Y: *ast.Ident {
  5106  .  .  .  .  .  .  .  .  NamePos: source.go:380:12
  5107  .  .  .  .  .  .  .  .  Name: "nil"
  5108  .  .  .  .  .  .  .  }
  5109  .  .  .  .  .  .  }
  5110  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5111  .  .  .  .  .  .  .  Lbrace: source.go:380:16
  5112  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5113  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5114  .  .  .  .  .  .  .  .  .  Return: source.go:381:3
  5115  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5116  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5117  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5118  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5119  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:381:10
  5120  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5121  .  .  .  .  .  .  .  .  .  .  .  .  }
  5122  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5123  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:381:15
  5124  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5125  .  .  .  .  .  .  .  .  .  .  .  .  }
  5126  .  .  .  .  .  .  .  .  .  .  .  }
  5127  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:381:20
  5128  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5129  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  5130  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  5131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:381:21
  5132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to decode JSON of: \""
  5134  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5135  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:381:50
  5136  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  5137  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  5138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  5139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:381:52
  5140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  5141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:381:58
  5143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:381:59
  5146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteJsonBytes"
  5147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4881)
  5148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:381:80
  5152  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5153  .  .  .  .  .  .  .  .  .  .  .  .  }
  5154  .  .  .  .  .  .  .  .  .  .  .  }
  5155  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5156  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:381:81
  5157  .  .  .  .  .  .  .  .  .  .  }
  5158  .  .  .  .  .  .  .  .  .  }
  5159  .  .  .  .  .  .  .  .  }
  5160  .  .  .  .  .  .  .  }
  5161  .  .  .  .  .  .  .  Rbrace: source.go:382:2
  5162  .  .  .  .  .  .  }
  5163  .  .  .  .  .  }
  5164  .  .  .  .  .  11: *ast.IfStmt {
  5165  .  .  .  .  .  .  If: source.go:384:2
  5166  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5167  .  .  .  .  .  .  .  X: *ast.CallExpr {
  5168  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  5169  .  .  .  .  .  .  .  .  .  NamePos: source.go:384:5
  5170  .  .  .  .  .  .  .  .  .  Name: "len"
  5171  .  .  .  .  .  .  .  .  }
  5172  .  .  .  .  .  .  .  .  Lparen: source.go:384:8
  5173  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5174  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  5175  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5176  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:384:9
  5177  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5178  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5179  .  .  .  .  .  .  .  .  .  .  }
  5180  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5181  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:384:27
  5182  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5183  .  .  .  .  .  .  .  .  .  .  }
  5184  .  .  .  .  .  .  .  .  .  }
  5185  .  .  .  .  .  .  .  .  }
  5186  .  .  .  .  .  .  .  .  Ellipsis: -
  5187  .  .  .  .  .  .  .  .  Rparen: source.go:384:31
  5188  .  .  .  .  .  .  .  }
  5189  .  .  .  .  .  .  .  OpPos: source.go:384:33
  5190  .  .  .  .  .  .  .  Op: ==
  5191  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  5192  .  .  .  .  .  .  .  .  ValuePos: source.go:384:36
  5193  .  .  .  .  .  .  .  .  Kind: INT
  5194  .  .  .  .  .  .  .  .  Value: "0"
  5195  .  .  .  .  .  .  .  }
  5196  .  .  .  .  .  .  }
  5197  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5198  .  .  .  .  .  .  .  Lbrace: source.go:384:38
  5199  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5200  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5201  .  .  .  .  .  .  .  .  .  Return: source.go:385:3
  5202  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5203  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5204  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5205  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5206  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:385:10
  5207  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5208  .  .  .  .  .  .  .  .  .  .  .  .  }
  5209  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5210  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:385:15
  5211  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5212  .  .  .  .  .  .  .  .  .  .  .  .  }
  5213  .  .  .  .  .  .  .  .  .  .  .  }
  5214  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:385:20
  5215  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5216  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5217  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:385:21
  5218  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5219  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"name field must be a non-empty string\""
  5220  .  .  .  .  .  .  .  .  .  .  .  .  }
  5221  .  .  .  .  .  .  .  .  .  .  .  }
  5222  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5223  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:385:60
  5224  .  .  .  .  .  .  .  .  .  .  }
  5225  .  .  .  .  .  .  .  .  .  }
  5226  .  .  .  .  .  .  .  .  }
  5227  .  .  .  .  .  .  .  }
  5228  .  .  .  .  .  .  .  Rbrace: source.go:386:2
  5229  .  .  .  .  .  .  }
  5230  .  .  .  .  .  }
  5231  .  .  .  .  .  12: *ast.AssignStmt {
  5232  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  5233  .  .  .  .  .  .  .  0: *ast.Ident {
  5234  .  .  .  .  .  .  .  .  NamePos: source.go:389:2
  5235  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  5236  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  5237  .  .  .  .  .  .  .  .  .  Kind: var
  5238  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  5239  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 5231)
  5240  .  .  .  .  .  .  .  .  }
  5241  .  .  .  .  .  .  .  }
  5242  .  .  .  .  .  .  .  1: *ast.Ident {
  5243  .  .  .  .  .  .  .  .  NamePos: source.go:389:14
  5244  .  .  .  .  .  .  .  .  Name: "err"
  5245  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5246  .  .  .  .  .  .  .  }
  5247  .  .  .  .  .  .  }
  5248  .  .  .  .  .  .  TokPos: source.go:389:18
  5249  .  .  .  .  .  .  Tok: :=
  5250  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5251  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5252  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5253  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5254  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:389:21
  5255  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  5256  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4563)
  5257  .  .  .  .  .  .  .  .  .  }
  5258  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5259  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:389:26
  5260  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateData"
  5261  .  .  .  .  .  .  .  .  .  }
  5262  .  .  .  .  .  .  .  .  }
  5263  .  .  .  .  .  .  .  .  Lparen: source.go:389:40
  5264  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5265  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5266  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:389:41
  5267  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5268  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  5269  .  .  .  .  .  .  .  .  .  }
  5270  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  5271  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5272  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:389:62
  5273  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5274  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5275  .  .  .  .  .  .  .  .  .  .  }
  5276  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5277  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:389:80
  5278  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5279  .  .  .  .  .  .  .  .  .  .  }
  5280  .  .  .  .  .  .  .  .  .  }
  5281  .  .  .  .  .  .  .  .  }
  5282  .  .  .  .  .  .  .  .  Ellipsis: -
  5283  .  .  .  .  .  .  .  .  Rparen: source.go:389:84
  5284  .  .  .  .  .  .  .  }
  5285  .  .  .  .  .  .  }
  5286  .  .  .  .  .  }
  5287  .  .  .  .  .  13: *ast.IfStmt {
  5288  .  .  .  .  .  .  If: source.go:390:2
  5289  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5290  .  .  .  .  .  .  .  X: *ast.Ident {
  5291  .  .  .  .  .  .  .  .  NamePos: source.go:390:5
  5292  .  .  .  .  .  .  .  .  Name: "err"
  5293  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5294  .  .  .  .  .  .  .  }
  5295  .  .  .  .  .  .  .  OpPos: source.go:390:9
  5296  .  .  .  .  .  .  .  Op: !=
  5297  .  .  .  .  .  .  .  Y: *ast.Ident {
  5298  .  .  .  .  .  .  .  .  NamePos: source.go:390:12
  5299  .  .  .  .  .  .  .  .  Name: "nil"
  5300  .  .  .  .  .  .  .  }
  5301  .  .  .  .  .  .  }
  5302  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5303  .  .  .  .  .  .  .  Lbrace: source.go:390:16
  5304  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5305  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5306  .  .  .  .  .  .  .  .  .  Return: source.go:391:3
  5307  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5308  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5309  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5310  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5311  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:391:10
  5312  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5313  .  .  .  .  .  .  .  .  .  .  .  .  }
  5314  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5315  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:391:15
  5316  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5317  .  .  .  .  .  .  .  .  .  .  .  .  }
  5318  .  .  .  .  .  .  .  .  .  .  .  }
  5319  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:391:20
  5320  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5321  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  5322  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  5323  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:391:21
  5324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to get state for \""
  5326  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5327  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:391:48
  5328  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  5329  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  5330  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:391:50
  5332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5333  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5334  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5335  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5336  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:391:68
  5337  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5339  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5340  .  .  .  .  .  .  .  .  .  .  .  .  }
  5341  .  .  .  .  .  .  .  .  .  .  .  }
  5342  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5343  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:391:72
  5344  .  .  .  .  .  .  .  .  .  .  }
  5345  .  .  .  .  .  .  .  .  .  }
  5346  .  .  .  .  .  .  .  .  }
  5347  .  .  .  .  .  .  .  }
  5348  .  .  .  .  .  .  .  Rbrace: source.go:392:2
  5349  .  .  .  .  .  .  }
  5350  .  .  .  .  .  .  Else: *ast.IfStmt {
  5351  .  .  .  .  .  .  .  If: source.go:392:9
  5352  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5353  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5354  .  .  .  .  .  .  .  .  .  NamePos: source.go:392:12
  5355  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  5356  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5236)
  5357  .  .  .  .  .  .  .  .  }
  5358  .  .  .  .  .  .  .  .  OpPos: source.go:392:23
  5359  .  .  .  .  .  .  .  .  Op: ==
  5360  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  5361  .  .  .  .  .  .  .  .  .  NamePos: source.go:392:26
  5362  .  .  .  .  .  .  .  .  .  Name: "nil"
  5363  .  .  .  .  .  .  .  .  }
  5364  .  .  .  .  .  .  .  }
  5365  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5366  .  .  .  .  .  .  .  .  Lbrace: source.go:392:30
  5367  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5368  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5369  .  .  .  .  .  .  .  .  .  .  Return: source.go:393:3
  5370  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5371  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5372  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5373  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5374  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:393:10
  5375  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5376  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5377  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5378  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:393:15
  5379  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5380  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5381  .  .  .  .  .  .  .  .  .  .  .  .  }
  5382  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:393:20
  5383  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5384  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  5385  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  5386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:393:21
  5387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Marble does not exist: \""
  5389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:393:47
  5391  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  5392  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  5393  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:393:49
  5395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5396  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5397  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5398  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5399  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:393:67
  5400  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5401  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5402  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5403  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5404  .  .  .  .  .  .  .  .  .  .  .  .  }
  5405  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5406  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:393:71
  5407  .  .  .  .  .  .  .  .  .  .  .  }
  5408  .  .  .  .  .  .  .  .  .  .  }
  5409  .  .  .  .  .  .  .  .  .  }
  5410  .  .  .  .  .  .  .  .  }
  5411  .  .  .  .  .  .  .  .  Rbrace: source.go:394:2
  5412  .  .  .  .  .  .  .  }
  5413  .  .  .  .  .  .  }
  5414  .  .  .  .  .  }
  5415  .  .  .  .  .  14: *ast.DeclStmt {
  5416  .  .  .  .  .  .  Decl: *ast.GenDecl {
  5417  .  .  .  .  .  .  .  TokPos: source.go:396:2
  5418  .  .  .  .  .  .  .  Tok: var
  5419  .  .  .  .  .  .  .  Lparen: -
  5420  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  5421  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  5422  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  5423  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5424  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:396:6
  5425  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToDelete"
  5426  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  5427  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  5428  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToDelete"
  5429  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 5421)
  5430  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  5431  .  .  .  .  .  .  .  .  .  .  .  }
  5432  .  .  .  .  .  .  .  .  .  .  }
  5433  .  .  .  .  .  .  .  .  .  }
  5434  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  5435  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:396:21
  5436  .  .  .  .  .  .  .  .  .  .  Name: "marble"
  5437  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
  5438  .  .  .  .  .  .  .  .  .  }
  5439  .  .  .  .  .  .  .  .  }
  5440  .  .  .  .  .  .  .  }
  5441  .  .  .  .  .  .  .  Rparen: -
  5442  .  .  .  .  .  .  }
  5443  .  .  .  .  .  }
  5444  .  .  .  .  .  15: *ast.AssignStmt {
  5445  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  5446  .  .  .  .  .  .  .  0: *ast.Ident {
  5447  .  .  .  .  .  .  .  .  NamePos: source.go:397:2
  5448  .  .  .  .  .  .  .  .  Name: "err"
  5449  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5450  .  .  .  .  .  .  .  }
  5451  .  .  .  .  .  .  }
  5452  .  .  .  .  .  .  TokPos: source.go:397:6
  5453  .  .  .  .  .  .  Tok: =
  5454  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5455  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5456  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5457  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5458  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:397:8
  5459  .  .  .  .  .  .  .  .  .  .  Name: "json"
  5460  .  .  .  .  .  .  .  .  .  }
  5461  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5462  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:397:13
  5463  .  .  .  .  .  .  .  .  .  .  Name: "Unmarshal"
  5464  .  .  .  .  .  .  .  .  .  }
  5465  .  .  .  .  .  .  .  .  }
  5466  .  .  .  .  .  .  .  .  Lparen: source.go:397:22
  5467  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5468  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5469  .  .  .  .  .  .  .  .  .  .  Fun: *ast.ArrayType {
  5470  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:397:23
  5471  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  5472  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:397:25
  5473  .  .  .  .  .  .  .  .  .  .  .  .  Name: "byte"
  5474  .  .  .  .  .  .  .  .  .  .  .  }
  5475  .  .  .  .  .  .  .  .  .  .  }
  5476  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:397:29
  5477  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5478  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5479  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:397:30
  5480  .  .  .  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  5481  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5236)
  5482  .  .  .  .  .  .  .  .  .  .  .  }
  5483  .  .  .  .  .  .  .  .  .  .  }
  5484  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5485  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:397:40
  5486  .  .  .  .  .  .  .  .  .  }
  5487  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  5488  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:397:43
  5489  .  .  .  .  .  .  .  .  .  .  Op: &
  5490  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5491  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:397:44
  5492  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToDelete"
  5493  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5426)
  5494  .  .  .  .  .  .  .  .  .  .  }
  5495  .  .  .  .  .  .  .  .  .  }
  5496  .  .  .  .  .  .  .  .  }
  5497  .  .  .  .  .  .  .  .  Ellipsis: -
  5498  .  .  .  .  .  .  .  .  Rparen: source.go:397:58
  5499  .  .  .  .  .  .  .  }
  5500  .  .  .  .  .  .  }
  5501  .  .  .  .  .  }
  5502  .  .  .  .  .  16: *ast.IfStmt {
  5503  .  .  .  .  .  .  If: source.go:398:2
  5504  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5505  .  .  .  .  .  .  .  X: *ast.Ident {
  5506  .  .  .  .  .  .  .  .  NamePos: source.go:398:5
  5507  .  .  .  .  .  .  .  .  Name: "err"
  5508  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5509  .  .  .  .  .  .  .  }
  5510  .  .  .  .  .  .  .  OpPos: source.go:398:9
  5511  .  .  .  .  .  .  .  Op: !=
  5512  .  .  .  .  .  .  .  Y: *ast.Ident {
  5513  .  .  .  .  .  .  .  .  NamePos: source.go:398:12
  5514  .  .  .  .  .  .  .  .  Name: "nil"
  5515  .  .  .  .  .  .  .  }
  5516  .  .  .  .  .  .  }
  5517  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5518  .  .  .  .  .  .  .  Lbrace: source.go:398:16
  5519  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5520  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5521  .  .  .  .  .  .  .  .  .  Return: source.go:399:3
  5522  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5523  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5524  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5525  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5526  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:399:10
  5527  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5528  .  .  .  .  .  .  .  .  .  .  .  .  }
  5529  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5530  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:399:15
  5531  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5532  .  .  .  .  .  .  .  .  .  .  .  .  }
  5533  .  .  .  .  .  .  .  .  .  .  .  }
  5534  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:399:20
  5535  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5536  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  5537  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  5538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:399:21
  5539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to decode JSON of: \""
  5541  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5542  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:399:50
  5543  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  5544  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  5545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  5546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:399:52
  5547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  5548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:399:58
  5550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:399:59
  5553  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "valAsbytes"
  5554  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5236)
  5555  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5557  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5558  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:399:69
  5559  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5560  .  .  .  .  .  .  .  .  .  .  .  .  }
  5561  .  .  .  .  .  .  .  .  .  .  .  }
  5562  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5563  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:399:70
  5564  .  .  .  .  .  .  .  .  .  .  }
  5565  .  .  .  .  .  .  .  .  .  }
  5566  .  .  .  .  .  .  .  .  }
  5567  .  .  .  .  .  .  .  }
  5568  .  .  .  .  .  .  .  Rbrace: source.go:400:2
  5569  .  .  .  .  .  .  }
  5570  .  .  .  .  .  }
  5571  .  .  .  .  .  17: *ast.AssignStmt {
  5572  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  5573  .  .  .  .  .  .  .  0: *ast.Ident {
  5574  .  .  .  .  .  .  .  .  NamePos: source.go:403:2
  5575  .  .  .  .  .  .  .  .  Name: "err"
  5576  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5577  .  .  .  .  .  .  .  }
  5578  .  .  .  .  .  .  }
  5579  .  .  .  .  .  .  TokPos: source.go:403:6
  5580  .  .  .  .  .  .  Tok: =
  5581  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5582  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5583  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5584  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5585  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:403:8
  5586  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  5587  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4563)
  5588  .  .  .  .  .  .  .  .  .  }
  5589  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5590  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:403:13
  5591  .  .  .  .  .  .  .  .  .  .  Name: "DelPrivateData"
  5592  .  .  .  .  .  .  .  .  .  }
  5593  .  .  .  .  .  .  .  .  }
  5594  .  .  .  .  .  .  .  .  Lparen: source.go:403:27
  5595  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5596  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5597  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:403:28
  5598  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5599  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  5600  .  .  .  .  .  .  .  .  .  }
  5601  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  5602  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5603  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:403:49
  5604  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5605  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5606  .  .  .  .  .  .  .  .  .  .  }
  5607  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5608  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:403:67
  5609  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5610  .  .  .  .  .  .  .  .  .  .  }
  5611  .  .  .  .  .  .  .  .  .  }
  5612  .  .  .  .  .  .  .  .  }
  5613  .  .  .  .  .  .  .  .  Ellipsis: -
  5614  .  .  .  .  .  .  .  .  Rparen: source.go:403:71
  5615  .  .  .  .  .  .  .  }
  5616  .  .  .  .  .  .  }
  5617  .  .  .  .  .  }
  5618  .  .  .  .  .  18: *ast.IfStmt {
  5619  .  .  .  .  .  .  If: source.go:404:2
  5620  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5621  .  .  .  .  .  .  .  X: *ast.Ident {
  5622  .  .  .  .  .  .  .  .  NamePos: source.go:404:5
  5623  .  .  .  .  .  .  .  .  Name: "err"
  5624  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5625  .  .  .  .  .  .  .  }
  5626  .  .  .  .  .  .  .  OpPos: source.go:404:9
  5627  .  .  .  .  .  .  .  Op: !=
  5628  .  .  .  .  .  .  .  Y: *ast.Ident {
  5629  .  .  .  .  .  .  .  .  NamePos: source.go:404:12
  5630  .  .  .  .  .  .  .  .  Name: "nil"
  5631  .  .  .  .  .  .  .  }
  5632  .  .  .  .  .  .  }
  5633  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5634  .  .  .  .  .  .  .  Lbrace: source.go:404:16
  5635  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5636  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5637  .  .  .  .  .  .  .  .  .  Return: source.go:405:3
  5638  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5639  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5640  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5641  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5642  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:405:10
  5643  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5644  .  .  .  .  .  .  .  .  .  .  .  .  }
  5645  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5646  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:405:15
  5647  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5648  .  .  .  .  .  .  .  .  .  .  .  .  }
  5649  .  .  .  .  .  .  .  .  .  .  .  }
  5650  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:405:20
  5651  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5652  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  5653  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  5654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:405:21
  5655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to delete state:\""
  5657  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5658  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:405:47
  5659  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  5660  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  5661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:405:49
  5664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  5665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:405:53
  5669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:405:58
  5673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:405:59
  5675  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5676  .  .  .  .  .  .  .  .  .  .  .  .  }
  5677  .  .  .  .  .  .  .  .  .  .  .  }
  5678  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5679  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:405:60
  5680  .  .  .  .  .  .  .  .  .  .  }
  5681  .  .  .  .  .  .  .  .  .  }
  5682  .  .  .  .  .  .  .  .  }
  5683  .  .  .  .  .  .  .  }
  5684  .  .  .  .  .  .  .  Rbrace: source.go:406:2
  5685  .  .  .  .  .  .  }
  5686  .  .  .  .  .  }
  5687  .  .  .  .  .  19: *ast.AssignStmt {
  5688  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  5689  .  .  .  .  .  .  .  0: *ast.Ident {
  5690  .  .  .  .  .  .  .  .  NamePos: source.go:409:2
  5691  .  .  .  .  .  .  .  .  Name: "indexName"
  5692  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  5693  .  .  .  .  .  .  .  .  .  Kind: var
  5694  .  .  .  .  .  .  .  .  .  Name: "indexName"
  5695  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 5687)
  5696  .  .  .  .  .  .  .  .  }
  5697  .  .  .  .  .  .  .  }
  5698  .  .  .  .  .  .  }
  5699  .  .  .  .  .  .  TokPos: source.go:409:12
  5700  .  .  .  .  .  .  Tok: :=
  5701  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5702  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5703  .  .  .  .  .  .  .  .  ValuePos: source.go:409:15
  5704  .  .  .  .  .  .  .  .  Kind: STRING
  5705  .  .  .  .  .  .  .  .  Value: "\"color~name\""
  5706  .  .  .  .  .  .  .  }
  5707  .  .  .  .  .  .  }
  5708  .  .  .  .  .  }
  5709  .  .  .  .  .  20: *ast.AssignStmt {
  5710  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  5711  .  .  .  .  .  .  .  0: *ast.Ident {
  5712  .  .  .  .  .  .  .  .  NamePos: source.go:410:2
  5713  .  .  .  .  .  .  .  .  Name: "colorNameIndexKey"
  5714  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  5715  .  .  .  .  .  .  .  .  .  Kind: var
  5716  .  .  .  .  .  .  .  .  .  Name: "colorNameIndexKey"
  5717  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 5709)
  5718  .  .  .  .  .  .  .  .  }
  5719  .  .  .  .  .  .  .  }
  5720  .  .  .  .  .  .  .  1: *ast.Ident {
  5721  .  .  .  .  .  .  .  .  NamePos: source.go:410:21
  5722  .  .  .  .  .  .  .  .  Name: "err"
  5723  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5724  .  .  .  .  .  .  .  }
  5725  .  .  .  .  .  .  }
  5726  .  .  .  .  .  .  TokPos: source.go:410:25
  5727  .  .  .  .  .  .  Tok: :=
  5728  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5729  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5730  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5731  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5732  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:28
  5733  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  5734  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4563)
  5735  .  .  .  .  .  .  .  .  .  }
  5736  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5737  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:33
  5738  .  .  .  .  .  .  .  .  .  .  Name: "CreateCompositeKey"
  5739  .  .  .  .  .  .  .  .  .  }
  5740  .  .  .  .  .  .  .  .  }
  5741  .  .  .  .  .  .  .  .  Lparen: source.go:410:51
  5742  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5743  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  5744  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:52
  5745  .  .  .  .  .  .  .  .  .  .  Name: "indexName"
  5746  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5692)
  5747  .  .  .  .  .  .  .  .  .  }
  5748  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {
  5749  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  5750  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:410:63
  5751  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  5752  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:65
  5753  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  5754  .  .  .  .  .  .  .  .  .  .  .  }
  5755  .  .  .  .  .  .  .  .  .  .  }
  5756  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:410:71
  5757  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 2) {
  5758  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  5759  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5760  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:72
  5761  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToDelete"
  5762  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5426)
  5763  .  .  .  .  .  .  .  .  .  .  .  .  }
  5764  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5765  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:87
  5766  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Color"
  5767  .  .  .  .  .  .  .  .  .  .  .  .  }
  5768  .  .  .  .  .  .  .  .  .  .  .  }
  5769  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  5770  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5771  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:94
  5772  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToDelete"
  5773  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5426)
  5774  .  .  .  .  .  .  .  .  .  .  .  .  }
  5775  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5776  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:410:109
  5777  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5778  .  .  .  .  .  .  .  .  .  .  .  .  }
  5779  .  .  .  .  .  .  .  .  .  .  .  }
  5780  .  .  .  .  .  .  .  .  .  .  }
  5781  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:410:113
  5782  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  5783  .  .  .  .  .  .  .  .  .  }
  5784  .  .  .  .  .  .  .  .  }
  5785  .  .  .  .  .  .  .  .  Ellipsis: -
  5786  .  .  .  .  .  .  .  .  Rparen: source.go:410:114
  5787  .  .  .  .  .  .  .  }
  5788  .  .  .  .  .  .  }
  5789  .  .  .  .  .  }
  5790  .  .  .  .  .  21: *ast.IfStmt {
  5791  .  .  .  .  .  .  If: source.go:411:2
  5792  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5793  .  .  .  .  .  .  .  X: *ast.Ident {
  5794  .  .  .  .  .  .  .  .  NamePos: source.go:411:5
  5795  .  .  .  .  .  .  .  .  Name: "err"
  5796  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5797  .  .  .  .  .  .  .  }
  5798  .  .  .  .  .  .  .  OpPos: source.go:411:9
  5799  .  .  .  .  .  .  .  Op: !=
  5800  .  .  .  .  .  .  .  Y: *ast.Ident {
  5801  .  .  .  .  .  .  .  .  NamePos: source.go:411:12
  5802  .  .  .  .  .  .  .  .  Name: "nil"
  5803  .  .  .  .  .  .  .  }
  5804  .  .  .  .  .  .  }
  5805  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5806  .  .  .  .  .  .  .  Lbrace: source.go:411:16
  5807  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5808  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5809  .  .  .  .  .  .  .  .  .  Return: source.go:412:3
  5810  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5811  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5812  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5813  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5814  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:412:10
  5815  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5816  .  .  .  .  .  .  .  .  .  .  .  .  }
  5817  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5818  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:412:15
  5819  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5820  .  .  .  .  .  .  .  .  .  .  .  .  }
  5821  .  .  .  .  .  .  .  .  .  .  .  }
  5822  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:412:20
  5823  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5824  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5825  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:412:21
  5828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  5829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:412:25
  5833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5835  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5836  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:412:30
  5837  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5838  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:412:31
  5839  .  .  .  .  .  .  .  .  .  .  .  .  }
  5840  .  .  .  .  .  .  .  .  .  .  .  }
  5841  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5842  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:412:32
  5843  .  .  .  .  .  .  .  .  .  .  }
  5844  .  .  .  .  .  .  .  .  .  }
  5845  .  .  .  .  .  .  .  .  }
  5846  .  .  .  .  .  .  .  }
  5847  .  .  .  .  .  .  .  Rbrace: source.go:413:2
  5848  .  .  .  .  .  .  }
  5849  .  .  .  .  .  }
  5850  .  .  .  .  .  22: *ast.AssignStmt {
  5851  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  5852  .  .  .  .  .  .  .  0: *ast.Ident {
  5853  .  .  .  .  .  .  .  .  NamePos: source.go:414:2
  5854  .  .  .  .  .  .  .  .  Name: "err"
  5855  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5856  .  .  .  .  .  .  .  }
  5857  .  .  .  .  .  .  }
  5858  .  .  .  .  .  .  TokPos: source.go:414:6
  5859  .  .  .  .  .  .  Tok: =
  5860  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5861  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5862  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5863  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5864  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:414:8
  5865  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  5866  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4563)
  5867  .  .  .  .  .  .  .  .  .  }
  5868  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5869  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:414:13
  5870  .  .  .  .  .  .  .  .  .  .  Name: "DelPrivateData"
  5871  .  .  .  .  .  .  .  .  .  }
  5872  .  .  .  .  .  .  .  .  }
  5873  .  .  .  .  .  .  .  .  Lparen: source.go:414:27
  5874  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5875  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5876  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:414:28
  5877  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5878  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  5879  .  .  .  .  .  .  .  .  .  }
  5880  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  5881  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:414:49
  5882  .  .  .  .  .  .  .  .  .  .  Name: "colorNameIndexKey"
  5883  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5714)
  5884  .  .  .  .  .  .  .  .  .  }
  5885  .  .  .  .  .  .  .  .  }
  5886  .  .  .  .  .  .  .  .  Ellipsis: -
  5887  .  .  .  .  .  .  .  .  Rparen: source.go:414:66
  5888  .  .  .  .  .  .  .  }
  5889  .  .  .  .  .  .  }
  5890  .  .  .  .  .  }
  5891  .  .  .  .  .  23: *ast.IfStmt {
  5892  .  .  .  .  .  .  If: source.go:415:2
  5893  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  5894  .  .  .  .  .  .  .  X: *ast.Ident {
  5895  .  .  .  .  .  .  .  .  NamePos: source.go:415:5
  5896  .  .  .  .  .  .  .  .  Name: "err"
  5897  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5898  .  .  .  .  .  .  .  }
  5899  .  .  .  .  .  .  .  OpPos: source.go:415:9
  5900  .  .  .  .  .  .  .  Op: !=
  5901  .  .  .  .  .  .  .  Y: *ast.Ident {
  5902  .  .  .  .  .  .  .  .  NamePos: source.go:415:12
  5903  .  .  .  .  .  .  .  .  Name: "nil"
  5904  .  .  .  .  .  .  .  }
  5905  .  .  .  .  .  .  }
  5906  .  .  .  .  .  .  Body: *ast.BlockStmt {
  5907  .  .  .  .  .  .  .  Lbrace: source.go:415:16
  5908  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  5909  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  5910  .  .  .  .  .  .  .  .  .  Return: source.go:416:3
  5911  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5912  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5913  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5914  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5915  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:416:10
  5916  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  5917  .  .  .  .  .  .  .  .  .  .  .  .  }
  5918  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5919  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:416:15
  5920  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5921  .  .  .  .  .  .  .  .  .  .  .  .  }
  5922  .  .  .  .  .  .  .  .  .  .  .  }
  5923  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:416:20
  5924  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  5925  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  5926  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  5927  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:416:21
  5928  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5929  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to delete state:\""
  5930  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5931  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:416:47
  5932  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  5933  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  5934  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5935  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:416:49
  5937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  5938  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5939  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5940  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:416:53
  5942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  5943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:416:58
  5946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:416:59
  5948  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5949  .  .  .  .  .  .  .  .  .  .  .  .  }
  5950  .  .  .  .  .  .  .  .  .  .  .  }
  5951  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  5952  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:416:60
  5953  .  .  .  .  .  .  .  .  .  .  }
  5954  .  .  .  .  .  .  .  .  .  }
  5955  .  .  .  .  .  .  .  .  }
  5956  .  .  .  .  .  .  .  }
  5957  .  .  .  .  .  .  .  Rbrace: source.go:417:2
  5958  .  .  .  .  .  .  }
  5959  .  .  .  .  .  }
  5960  .  .  .  .  .  24: *ast.AssignStmt {
  5961  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  5962  .  .  .  .  .  .  .  0: *ast.Ident {
  5963  .  .  .  .  .  .  .  .  NamePos: source.go:420:2
  5964  .  .  .  .  .  .  .  .  Name: "err"
  5965  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  5966  .  .  .  .  .  .  .  }
  5967  .  .  .  .  .  .  }
  5968  .  .  .  .  .  .  TokPos: source.go:420:6
  5969  .  .  .  .  .  .  Tok: =
  5970  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  5971  .  .  .  .  .  .  .  0: *ast.CallExpr {
  5972  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  5973  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5974  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:420:8
  5975  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  5976  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4563)
  5977  .  .  .  .  .  .  .  .  .  }
  5978  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5979  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:420:13
  5980  .  .  .  .  .  .  .  .  .  .  Name: "DelPrivateData"
  5981  .  .  .  .  .  .  .  .  .  }
  5982  .  .  .  .  .  .  .  .  }
  5983  .  .  .  .  .  .  .  .  Lparen: source.go:420:27
  5984  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  5985  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  5986  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:420:28
  5987  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  5988  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarblePrivateDetails\""
  5989  .  .  .  .  .  .  .  .  .  }
  5990  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  5991  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5992  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:420:62
  5993  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleDeleteInput"
  5994  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 5033)
  5995  .  .  .  .  .  .  .  .  .  .  }
  5996  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5997  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:420:80
  5998  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  5999  .  .  .  .  .  .  .  .  .  .  }
  6000  .  .  .  .  .  .  .  .  .  }
  6001  .  .  .  .  .  .  .  .  }
  6002  .  .  .  .  .  .  .  .  Ellipsis: -
  6003  .  .  .  .  .  .  .  .  Rparen: source.go:420:84
  6004  .  .  .  .  .  .  .  }
  6005  .  .  .  .  .  .  }
  6006  .  .  .  .  .  }
  6007  .  .  .  .  .  25: *ast.IfStmt {
  6008  .  .  .  .  .  .  If: source.go:421:2
  6009  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6010  .  .  .  .  .  .  .  X: *ast.Ident {
  6011  .  .  .  .  .  .  .  .  NamePos: source.go:421:5
  6012  .  .  .  .  .  .  .  .  Name: "err"
  6013  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  6014  .  .  .  .  .  .  .  }
  6015  .  .  .  .  .  .  .  OpPos: source.go:421:9
  6016  .  .  .  .  .  .  .  Op: !=
  6017  .  .  .  .  .  .  .  Y: *ast.Ident {
  6018  .  .  .  .  .  .  .  .  NamePos: source.go:421:12
  6019  .  .  .  .  .  .  .  .  Name: "nil"
  6020  .  .  .  .  .  .  .  }
  6021  .  .  .  .  .  .  }
  6022  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6023  .  .  .  .  .  .  .  Lbrace: source.go:421:16
  6024  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6025  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6026  .  .  .  .  .  .  .  .  .  Return: source.go:422:3
  6027  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6028  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6029  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6030  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6031  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:422:10
  6032  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6033  .  .  .  .  .  .  .  .  .  .  .  .  }
  6034  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6035  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:422:15
  6036  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6037  .  .  .  .  .  .  .  .  .  .  .  .  }
  6038  .  .  .  .  .  .  .  .  .  .  .  }
  6039  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:422:20
  6040  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6041  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6042  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:422:21
  6045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  6046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4779)
  6047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:422:25
  6050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6052  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6053  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:422:30
  6054  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6055  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:422:31
  6056  .  .  .  .  .  .  .  .  .  .  .  .  }
  6057  .  .  .  .  .  .  .  .  .  .  .  }
  6058  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6059  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:422:32
  6060  .  .  .  .  .  .  .  .  .  .  }
  6061  .  .  .  .  .  .  .  .  .  }
  6062  .  .  .  .  .  .  .  .  }
  6063  .  .  .  .  .  .  .  }
  6064  .  .  .  .  .  .  .  Rbrace: source.go:423:2
  6065  .  .  .  .  .  .  }
  6066  .  .  .  .  .  }
  6067  .  .  .  .  .  26: *ast.ReturnStmt {
  6068  .  .  .  .  .  .  Return: source.go:425:2
  6069  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6070  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6071  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6072  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6073  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:425:9
  6074  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6075  .  .  .  .  .  .  .  .  .  }
  6076  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6077  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:425:14
  6078  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  6079  .  .  .  .  .  .  .  .  .  }
  6080  .  .  .  .  .  .  .  .  }
  6081  .  .  .  .  .  .  .  .  Lparen: source.go:425:21
  6082  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6083  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6084  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:425:22
  6085  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  6086  .  .  .  .  .  .  .  .  .  }
  6087  .  .  .  .  .  .  .  .  }
  6088  .  .  .  .  .  .  .  .  Ellipsis: -
  6089  .  .  .  .  .  .  .  .  Rparen: source.go:425:25
  6090  .  .  .  .  .  .  .  }
  6091  .  .  .  .  .  .  }
  6092  .  .  .  .  .  }
  6093  .  .  .  .  }
  6094  .  .  .  .  Rbrace: source.go:426:1
  6095  .  .  .  }
  6096  .  .  }
  6097  .  .  11: *ast.FuncDecl {
  6098  .  .  .  Recv: *ast.FieldList {
  6099  .  .  .  .  Opening: source.go:431:6
  6100  .  .  .  .  List: []*ast.Field (len = 1) {
  6101  .  .  .  .  .  0: *ast.Field {
  6102  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  6103  .  .  .  .  .  .  .  0: *ast.Ident {
  6104  .  .  .  .  .  .  .  .  NamePos: source.go:431:7
  6105  .  .  .  .  .  .  .  .  Name: "t"
  6106  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6107  .  .  .  .  .  .  .  .  .  Kind: var
  6108  .  .  .  .  .  .  .  .  .  Name: "t"
  6109  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6101)
  6110  .  .  .  .  .  .  .  .  }
  6111  .  .  .  .  .  .  .  }
  6112  .  .  .  .  .  .  }
  6113  .  .  .  .  .  .  Type: *ast.StarExpr {
  6114  .  .  .  .  .  .  .  Star: source.go:431:9
  6115  .  .  .  .  .  .  .  X: *ast.Ident {
  6116  .  .  .  .  .  .  .  .  NamePos: source.go:431:10
  6117  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  6118  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  6119  .  .  .  .  .  .  .  }
  6120  .  .  .  .  .  .  }
  6121  .  .  .  .  .  }
  6122  .  .  .  .  }
  6123  .  .  .  .  Closing: source.go:431:25
  6124  .  .  .  }
  6125  .  .  .  Name: *ast.Ident {
  6126  .  .  .  .  NamePos: source.go:431:27
  6127  .  .  .  .  Name: "transferMarble"
  6128  .  .  .  }
  6129  .  .  .  Type: *ast.FuncType {
  6130  .  .  .  .  Func: source.go:431:1
  6131  .  .  .  .  Params: *ast.FieldList {
  6132  .  .  .  .  .  Opening: source.go:431:41
  6133  .  .  .  .  .  List: []*ast.Field (len = 2) {
  6134  .  .  .  .  .  .  0: *ast.Field {
  6135  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  6136  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6137  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:42
  6138  .  .  .  .  .  .  .  .  .  Name: "stub"
  6139  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6140  .  .  .  .  .  .  .  .  .  .  Kind: var
  6141  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  6142  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6134)
  6143  .  .  .  .  .  .  .  .  .  }
  6144  .  .  .  .  .  .  .  .  }
  6145  .  .  .  .  .  .  .  }
  6146  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  6147  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6148  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:47
  6149  .  .  .  .  .  .  .  .  .  Name: "shim"
  6150  .  .  .  .  .  .  .  .  }
  6151  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6152  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:52
  6153  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  6154  .  .  .  .  .  .  .  .  }
  6155  .  .  .  .  .  .  .  }
  6156  .  .  .  .  .  .  }
  6157  .  .  .  .  .  .  1: *ast.Field {
  6158  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  6159  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6160  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:76
  6161  .  .  .  .  .  .  .  .  .  Name: "args"
  6162  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6163  .  .  .  .  .  .  .  .  .  .  Kind: var
  6164  .  .  .  .  .  .  .  .  .  .  Name: "args"
  6165  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6157)
  6166  .  .  .  .  .  .  .  .  .  }
  6167  .  .  .  .  .  .  .  .  }
  6168  .  .  .  .  .  .  .  }
  6169  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  6170  .  .  .  .  .  .  .  .  Lbrack: source.go:431:81
  6171  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  6172  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:83
  6173  .  .  .  .  .  .  .  .  .  Name: "string"
  6174  .  .  .  .  .  .  .  .  }
  6175  .  .  .  .  .  .  .  }
  6176  .  .  .  .  .  .  }
  6177  .  .  .  .  .  }
  6178  .  .  .  .  .  Closing: source.go:431:89
  6179  .  .  .  .  }
  6180  .  .  .  .  Results: *ast.FieldList {
  6181  .  .  .  .  .  Opening: -
  6182  .  .  .  .  .  List: []*ast.Field (len = 1) {
  6183  .  .  .  .  .  .  0: *ast.Field {
  6184  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  6185  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6186  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:91
  6187  .  .  .  .  .  .  .  .  .  Name: "pb"
  6188  .  .  .  .  .  .  .  .  }
  6189  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6190  .  .  .  .  .  .  .  .  .  NamePos: source.go:431:94
  6191  .  .  .  .  .  .  .  .  .  Name: "Response"
  6192  .  .  .  .  .  .  .  .  }
  6193  .  .  .  .  .  .  .  }
  6194  .  .  .  .  .  .  }
  6195  .  .  .  .  .  }
  6196  .  .  .  .  .  Closing: -
  6197  .  .  .  .  }
  6198  .  .  .  }
  6199  .  .  .  Body: *ast.BlockStmt {
  6200  .  .  .  .  Lbrace: source.go:431:103
  6201  .  .  .  .  List: []ast.Stmt (len = 24) {
  6202  .  .  .  .  .  0: *ast.ExprStmt {
  6203  .  .  .  .  .  .  X: *ast.CallExpr {
  6204  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6205  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6206  .  .  .  .  .  .  .  .  .  NamePos: source.go:433:2
  6207  .  .  .  .  .  .  .  .  .  Name: "fmt"
  6208  .  .  .  .  .  .  .  .  }
  6209  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6210  .  .  .  .  .  .  .  .  .  NamePos: source.go:433:6
  6211  .  .  .  .  .  .  .  .  .  Name: "Println"
  6212  .  .  .  .  .  .  .  .  }
  6213  .  .  .  .  .  .  .  }
  6214  .  .  .  .  .  .  .  Lparen: source.go:433:13
  6215  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6216  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6217  .  .  .  .  .  .  .  .  .  ValuePos: source.go:433:14
  6218  .  .  .  .  .  .  .  .  .  Kind: STRING
  6219  .  .  .  .  .  .  .  .  .  Value: "\"- start transfer marble\""
  6220  .  .  .  .  .  .  .  .  }
  6221  .  .  .  .  .  .  .  }
  6222  .  .  .  .  .  .  .  Ellipsis: -
  6223  .  .  .  .  .  .  .  Rparen: source.go:433:39
  6224  .  .  .  .  .  .  }
  6225  .  .  .  .  .  }
  6226  .  .  .  .  .  1: *ast.DeclStmt {
  6227  .  .  .  .  .  .  Decl: *ast.GenDecl {
  6228  .  .  .  .  .  .  .  TokPos: source.go:435:2
  6229  .  .  .  .  .  .  .  Tok: type
  6230  .  .  .  .  .  .  .  Lparen: -
  6231  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  6232  .  .  .  .  .  .  .  .  0: *ast.TypeSpec {
  6233  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
  6234  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:435:7
  6235  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferTransientInput"
  6236  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6237  .  .  .  .  .  .  .  .  .  .  .  Kind: type
  6238  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferTransientInput"
  6239  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6232)
  6240  .  .  .  .  .  .  .  .  .  .  }
  6241  .  .  .  .  .  .  .  .  .  }
  6242  .  .  .  .  .  .  .  .  .  Assign: -
  6243  .  .  .  .  .  .  .  .  .  Type: *ast.StructType {
  6244  .  .  .  .  .  .  .  .  .  .  Struct: source.go:435:36
  6245  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {
  6246  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:435:43
  6247  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
  6248  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  6249  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  6250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:436:3
  6252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  6253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  6255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  6256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6248)
  6257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6259  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6260  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  6261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:436:9
  6262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  6263  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6264  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  6265  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:436:16
  6266  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6267  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"name\"`"
  6268  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6269  .  .  .  .  .  .  .  .  .  .  .  .  }
  6270  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
  6271  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  6272  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6273  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:437:3
  6274  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  6275  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6276  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  6277  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  6278  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6270)
  6279  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6280  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6281  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6282  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  6283  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:437:9
  6284  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  6285  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6286  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  6287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:437:16
  6288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"owner\"`"
  6290  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6291  .  .  .  .  .  .  .  .  .  .  .  .  }
  6292  .  .  .  .  .  .  .  .  .  .  .  }
  6293  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:438:2
  6294  .  .  .  .  .  .  .  .  .  .  }
  6295  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  6296  .  .  .  .  .  .  .  .  .  }
  6297  .  .  .  .  .  .  .  .  }
  6298  .  .  .  .  .  .  .  }
  6299  .  .  .  .  .  .  .  Rparen: -
  6300  .  .  .  .  .  .  }
  6301  .  .  .  .  .  }
  6302  .  .  .  .  .  2: *ast.IfStmt {
  6303  .  .  .  .  .  .  If: source.go:440:2
  6304  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6305  .  .  .  .  .  .  .  X: *ast.CallExpr {
  6306  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  6307  .  .  .  .  .  .  .  .  .  NamePos: source.go:440:5
  6308  .  .  .  .  .  .  .  .  .  Name: "len"
  6309  .  .  .  .  .  .  .  .  }
  6310  .  .  .  .  .  .  .  .  Lparen: source.go:440:8
  6311  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6312  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6313  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:440:9
  6314  .  .  .  .  .  .  .  .  .  .  Name: "args"
  6315  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6162)
  6316  .  .  .  .  .  .  .  .  .  }
  6317  .  .  .  .  .  .  .  .  }
  6318  .  .  .  .  .  .  .  .  Ellipsis: -
  6319  .  .  .  .  .  .  .  .  Rparen: source.go:440:13
  6320  .  .  .  .  .  .  .  }
  6321  .  .  .  .  .  .  .  OpPos: source.go:440:15
  6322  .  .  .  .  .  .  .  Op: !=
  6323  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  6324  .  .  .  .  .  .  .  .  ValuePos: source.go:440:18
  6325  .  .  .  .  .  .  .  .  Kind: INT
  6326  .  .  .  .  .  .  .  .  Value: "0"
  6327  .  .  .  .  .  .  .  }
  6328  .  .  .  .  .  .  }
  6329  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6330  .  .  .  .  .  .  .  Lbrace: source.go:440:20
  6331  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6332  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6333  .  .  .  .  .  .  .  .  .  Return: source.go:441:3
  6334  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6335  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6336  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6337  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6338  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:441:10
  6339  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6340  .  .  .  .  .  .  .  .  .  .  .  .  }
  6341  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6342  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:441:15
  6343  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6344  .  .  .  .  .  .  .  .  .  .  .  .  }
  6345  .  .  .  .  .  .  .  .  .  .  .  }
  6346  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:441:20
  6347  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6348  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6349  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:441:21
  6350  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6351  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Private marble data must be passed in transient map.\""
  6352  .  .  .  .  .  .  .  .  .  .  .  .  }
  6353  .  .  .  .  .  .  .  .  .  .  .  }
  6354  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6355  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:441:106
  6356  .  .  .  .  .  .  .  .  .  .  }
  6357  .  .  .  .  .  .  .  .  .  }
  6358  .  .  .  .  .  .  .  .  }
  6359  .  .  .  .  .  .  .  }
  6360  .  .  .  .  .  .  .  Rbrace: source.go:442:2
  6361  .  .  .  .  .  .  }
  6362  .  .  .  .  .  }
  6363  .  .  .  .  .  3: *ast.AssignStmt {
  6364  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  6365  .  .  .  .  .  .  .  0: *ast.Ident {
  6366  .  .  .  .  .  .  .  .  NamePos: source.go:444:2
  6367  .  .  .  .  .  .  .  .  Name: "transMap"
  6368  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6369  .  .  .  .  .  .  .  .  .  Kind: var
  6370  .  .  .  .  .  .  .  .  .  Name: "transMap"
  6371  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6363)
  6372  .  .  .  .  .  .  .  .  }
  6373  .  .  .  .  .  .  .  }
  6374  .  .  .  .  .  .  .  1: *ast.Ident {
  6375  .  .  .  .  .  .  .  .  NamePos: source.go:444:12
  6376  .  .  .  .  .  .  .  .  Name: "err"
  6377  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6378  .  .  .  .  .  .  .  .  .  Kind: var
  6379  .  .  .  .  .  .  .  .  .  Name: "err"
  6380  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6363)
  6381  .  .  .  .  .  .  .  .  }
  6382  .  .  .  .  .  .  .  }
  6383  .  .  .  .  .  .  }
  6384  .  .  .  .  .  .  TokPos: source.go:444:16
  6385  .  .  .  .  .  .  Tok: :=
  6386  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  6387  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6388  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6389  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6390  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:444:19
  6391  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  6392  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6139)
  6393  .  .  .  .  .  .  .  .  .  }
  6394  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6395  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:444:24
  6396  .  .  .  .  .  .  .  .  .  .  Name: "GetTransient"
  6397  .  .  .  .  .  .  .  .  .  }
  6398  .  .  .  .  .  .  .  .  }
  6399  .  .  .  .  .  .  .  .  Lparen: source.go:444:36
  6400  .  .  .  .  .  .  .  .  Ellipsis: -
  6401  .  .  .  .  .  .  .  .  Rparen: source.go:444:37
  6402  .  .  .  .  .  .  .  }
  6403  .  .  .  .  .  .  }
  6404  .  .  .  .  .  }
  6405  .  .  .  .  .  4: *ast.IfStmt {
  6406  .  .  .  .  .  .  If: source.go:445:2
  6407  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6408  .  .  .  .  .  .  .  X: *ast.Ident {
  6409  .  .  .  .  .  .  .  .  NamePos: source.go:445:5
  6410  .  .  .  .  .  .  .  .  Name: "err"
  6411  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  6412  .  .  .  .  .  .  .  }
  6413  .  .  .  .  .  .  .  OpPos: source.go:445:9
  6414  .  .  .  .  .  .  .  Op: !=
  6415  .  .  .  .  .  .  .  Y: *ast.Ident {
  6416  .  .  .  .  .  .  .  .  NamePos: source.go:445:12
  6417  .  .  .  .  .  .  .  .  Name: "nil"
  6418  .  .  .  .  .  .  .  }
  6419  .  .  .  .  .  .  }
  6420  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6421  .  .  .  .  .  .  .  Lbrace: source.go:445:16
  6422  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6423  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6424  .  .  .  .  .  .  .  .  .  Return: source.go:446:3
  6425  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6426  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6427  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6428  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6429  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:446:10
  6430  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6431  .  .  .  .  .  .  .  .  .  .  .  .  }
  6432  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6433  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:446:15
  6434  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6435  .  .  .  .  .  .  .  .  .  .  .  .  }
  6436  .  .  .  .  .  .  .  .  .  .  .  }
  6437  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:446:20
  6438  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6439  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  6440  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  6441  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:446:21
  6442  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6443  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Error getting transient: \""
  6444  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6445  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:446:49
  6446  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  6447  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  6448  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6449  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6450  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:446:51
  6451  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  6452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  6453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:446:55
  6456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:446:60
  6460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:446:61
  6462  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6463  .  .  .  .  .  .  .  .  .  .  .  .  }
  6464  .  .  .  .  .  .  .  .  .  .  .  }
  6465  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6466  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:446:62
  6467  .  .  .  .  .  .  .  .  .  .  }
  6468  .  .  .  .  .  .  .  .  .  }
  6469  .  .  .  .  .  .  .  .  }
  6470  .  .  .  .  .  .  .  }
  6471  .  .  .  .  .  .  .  Rbrace: source.go:447:2
  6472  .  .  .  .  .  .  }
  6473  .  .  .  .  .  }
  6474  .  .  .  .  .  5: *ast.AssignStmt {
  6475  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  6476  .  .  .  .  .  .  .  0: *ast.Ident {
  6477  .  .  .  .  .  .  .  .  NamePos: source.go:449:2
  6478  .  .  .  .  .  .  .  .  Name: "marbleOwnerJsonBytes"
  6479  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6480  .  .  .  .  .  .  .  .  .  Kind: var
  6481  .  .  .  .  .  .  .  .  .  Name: "marbleOwnerJsonBytes"
  6482  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6474)
  6483  .  .  .  .  .  .  .  .  }
  6484  .  .  .  .  .  .  .  }
  6485  .  .  .  .  .  .  .  1: *ast.Ident {
  6486  .  .  .  .  .  .  .  .  NamePos: source.go:449:24
  6487  .  .  .  .  .  .  .  .  Name: "ok"
  6488  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6489  .  .  .  .  .  .  .  .  .  Kind: var
  6490  .  .  .  .  .  .  .  .  .  Name: "ok"
  6491  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6474)
  6492  .  .  .  .  .  .  .  .  }
  6493  .  .  .  .  .  .  .  }
  6494  .  .  .  .  .  .  }
  6495  .  .  .  .  .  .  TokPos: source.go:449:27
  6496  .  .  .  .  .  .  Tok: :=
  6497  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  6498  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  6499  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6500  .  .  .  .  .  .  .  .  .  NamePos: source.go:449:30
  6501  .  .  .  .  .  .  .  .  .  Name: "transMap"
  6502  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6368)
  6503  .  .  .  .  .  .  .  .  }
  6504  .  .  .  .  .  .  .  .  Lbrack: source.go:449:38
  6505  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  6506  .  .  .  .  .  .  .  .  .  ValuePos: source.go:449:39
  6507  .  .  .  .  .  .  .  .  .  Kind: STRING
  6508  .  .  .  .  .  .  .  .  .  Value: "\"marble_owner\""
  6509  .  .  .  .  .  .  .  .  }
  6510  .  .  .  .  .  .  .  .  Rbrack: source.go:449:53
  6511  .  .  .  .  .  .  .  }
  6512  .  .  .  .  .  .  }
  6513  .  .  .  .  .  }
  6514  .  .  .  .  .  6: *ast.IfStmt {
  6515  .  .  .  .  .  .  If: source.go:450:2
  6516  .  .  .  .  .  .  Cond: *ast.UnaryExpr {
  6517  .  .  .  .  .  .  .  OpPos: source.go:450:5
  6518  .  .  .  .  .  .  .  Op: !
  6519  .  .  .  .  .  .  .  X: *ast.Ident {
  6520  .  .  .  .  .  .  .  .  NamePos: source.go:450:6
  6521  .  .  .  .  .  .  .  .  Name: "ok"
  6522  .  .  .  .  .  .  .  .  Obj: *(obj @ 6488)
  6523  .  .  .  .  .  .  .  }
  6524  .  .  .  .  .  .  }
  6525  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6526  .  .  .  .  .  .  .  Lbrace: source.go:450:9
  6527  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6528  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6529  .  .  .  .  .  .  .  .  .  Return: source.go:451:3
  6530  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6531  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6532  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6533  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6534  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:451:10
  6535  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6536  .  .  .  .  .  .  .  .  .  .  .  .  }
  6537  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6538  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:451:15
  6539  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6540  .  .  .  .  .  .  .  .  .  .  .  .  }
  6541  .  .  .  .  .  .  .  .  .  .  .  }
  6542  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:451:20
  6543  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6544  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6545  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:451:21
  6546  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6547  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble_owner must be a key in the transient map\""
  6548  .  .  .  .  .  .  .  .  .  .  .  .  }
  6549  .  .  .  .  .  .  .  .  .  .  .  }
  6550  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6551  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:451:70
  6552  .  .  .  .  .  .  .  .  .  .  }
  6553  .  .  .  .  .  .  .  .  .  }
  6554  .  .  .  .  .  .  .  .  }
  6555  .  .  .  .  .  .  .  }
  6556  .  .  .  .  .  .  .  Rbrace: source.go:452:2
  6557  .  .  .  .  .  .  }
  6558  .  .  .  .  .  }
  6559  .  .  .  .  .  7: *ast.IfStmt {
  6560  .  .  .  .  .  .  If: source.go:454:2
  6561  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6562  .  .  .  .  .  .  .  X: *ast.CallExpr {
  6563  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  6564  .  .  .  .  .  .  .  .  .  NamePos: source.go:454:5
  6565  .  .  .  .  .  .  .  .  .  Name: "len"
  6566  .  .  .  .  .  .  .  .  }
  6567  .  .  .  .  .  .  .  .  Lparen: source.go:454:8
  6568  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6569  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6570  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:454:9
  6571  .  .  .  .  .  .  .  .  .  .  Name: "marbleOwnerJsonBytes"
  6572  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6479)
  6573  .  .  .  .  .  .  .  .  .  }
  6574  .  .  .  .  .  .  .  .  }
  6575  .  .  .  .  .  .  .  .  Ellipsis: -
  6576  .  .  .  .  .  .  .  .  Rparen: source.go:454:29
  6577  .  .  .  .  .  .  .  }
  6578  .  .  .  .  .  .  .  OpPos: source.go:454:31
  6579  .  .  .  .  .  .  .  Op: ==
  6580  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  6581  .  .  .  .  .  .  .  .  ValuePos: source.go:454:34
  6582  .  .  .  .  .  .  .  .  Kind: INT
  6583  .  .  .  .  .  .  .  .  Value: "0"
  6584  .  .  .  .  .  .  .  }
  6585  .  .  .  .  .  .  }
  6586  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6587  .  .  .  .  .  .  .  Lbrace: source.go:454:36
  6588  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6589  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6590  .  .  .  .  .  .  .  .  .  Return: source.go:455:3
  6591  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6592  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6593  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6594  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6595  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:455:10
  6596  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6597  .  .  .  .  .  .  .  .  .  .  .  .  }
  6598  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6599  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:455:15
  6600  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6601  .  .  .  .  .  .  .  .  .  .  .  .  }
  6602  .  .  .  .  .  .  .  .  .  .  .  }
  6603  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:455:20
  6604  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6605  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6606  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:455:21
  6607  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6608  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"marble_owner value in the transient map must be a non-empty JSON string\""
  6609  .  .  .  .  .  .  .  .  .  .  .  .  }
  6610  .  .  .  .  .  .  .  .  .  .  .  }
  6611  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6612  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:455:94
  6613  .  .  .  .  .  .  .  .  .  .  }
  6614  .  .  .  .  .  .  .  .  .  }
  6615  .  .  .  .  .  .  .  .  }
  6616  .  .  .  .  .  .  .  }
  6617  .  .  .  .  .  .  .  Rbrace: source.go:456:2
  6618  .  .  .  .  .  .  }
  6619  .  .  .  .  .  }
  6620  .  .  .  .  .  8: *ast.DeclStmt {
  6621  .  .  .  .  .  .  Decl: *ast.GenDecl {
  6622  .  .  .  .  .  .  .  TokPos: source.go:458:2
  6623  .  .  .  .  .  .  .  Tok: var
  6624  .  .  .  .  .  .  .  Lparen: -
  6625  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  6626  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  6627  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  6628  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6629  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:458:6
  6630  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  6631  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6632  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  6633  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  6634  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6626)
  6635  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  6636  .  .  .  .  .  .  .  .  .  .  .  }
  6637  .  .  .  .  .  .  .  .  .  .  }
  6638  .  .  .  .  .  .  .  .  .  }
  6639  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  6640  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:458:26
  6641  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferTransientInput"
  6642  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6236)
  6643  .  .  .  .  .  .  .  .  .  }
  6644  .  .  .  .  .  .  .  .  }
  6645  .  .  .  .  .  .  .  }
  6646  .  .  .  .  .  .  .  Rparen: -
  6647  .  .  .  .  .  .  }
  6648  .  .  .  .  .  }
  6649  .  .  .  .  .  9: *ast.AssignStmt {
  6650  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  6651  .  .  .  .  .  .  .  0: *ast.Ident {
  6652  .  .  .  .  .  .  .  .  NamePos: source.go:459:2
  6653  .  .  .  .  .  .  .  .  Name: "err"
  6654  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  6655  .  .  .  .  .  .  .  }
  6656  .  .  .  .  .  .  }
  6657  .  .  .  .  .  .  TokPos: source.go:459:6
  6658  .  .  .  .  .  .  Tok: =
  6659  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  6660  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6661  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6662  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6663  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:459:8
  6664  .  .  .  .  .  .  .  .  .  .  Name: "json"
  6665  .  .  .  .  .  .  .  .  .  }
  6666  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6667  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:459:13
  6668  .  .  .  .  .  .  .  .  .  .  Name: "Unmarshal"
  6669  .  .  .  .  .  .  .  .  .  }
  6670  .  .  .  .  .  .  .  .  }
  6671  .  .  .  .  .  .  .  .  Lparen: source.go:459:22
  6672  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  6673  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6674  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:459:23
  6675  .  .  .  .  .  .  .  .  .  .  Name: "marbleOwnerJsonBytes"
  6676  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6479)
  6677  .  .  .  .  .  .  .  .  .  }
  6678  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  6679  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:459:45
  6680  .  .  .  .  .  .  .  .  .  .  Op: &
  6681  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6682  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:459:46
  6683  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  6684  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6631)
  6685  .  .  .  .  .  .  .  .  .  .  }
  6686  .  .  .  .  .  .  .  .  .  }
  6687  .  .  .  .  .  .  .  .  }
  6688  .  .  .  .  .  .  .  .  Ellipsis: -
  6689  .  .  .  .  .  .  .  .  Rparen: source.go:459:65
  6690  .  .  .  .  .  .  .  }
  6691  .  .  .  .  .  .  }
  6692  .  .  .  .  .  }
  6693  .  .  .  .  .  10: *ast.IfStmt {
  6694  .  .  .  .  .  .  If: source.go:460:2
  6695  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6696  .  .  .  .  .  .  .  X: *ast.Ident {
  6697  .  .  .  .  .  .  .  .  NamePos: source.go:460:5
  6698  .  .  .  .  .  .  .  .  Name: "err"
  6699  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  6700  .  .  .  .  .  .  .  }
  6701  .  .  .  .  .  .  .  OpPos: source.go:460:9
  6702  .  .  .  .  .  .  .  Op: !=
  6703  .  .  .  .  .  .  .  Y: *ast.Ident {
  6704  .  .  .  .  .  .  .  .  NamePos: source.go:460:12
  6705  .  .  .  .  .  .  .  .  Name: "nil"
  6706  .  .  .  .  .  .  .  }
  6707  .  .  .  .  .  .  }
  6708  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6709  .  .  .  .  .  .  .  Lbrace: source.go:460:16
  6710  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6711  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6712  .  .  .  .  .  .  .  .  .  Return: source.go:461:3
  6713  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6714  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6715  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6716  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6717  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:461:10
  6718  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6719  .  .  .  .  .  .  .  .  .  .  .  .  }
  6720  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6721  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:461:15
  6722  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6723  .  .  .  .  .  .  .  .  .  .  .  .  }
  6724  .  .  .  .  .  .  .  .  .  .  .  }
  6725  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:461:20
  6726  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6727  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  6728  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  6729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:461:21
  6730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to decode JSON of: \""
  6732  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6733  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:461:50
  6734  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  6735  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  6736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  6737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:461:52
  6738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  6739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:461:58
  6741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  6743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:461:59
  6744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleOwnerJsonBytes"
  6745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6479)
  6746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:461:79
  6750  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6751  .  .  .  .  .  .  .  .  .  .  .  .  }
  6752  .  .  .  .  .  .  .  .  .  .  .  }
  6753  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6754  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:461:80
  6755  .  .  .  .  .  .  .  .  .  .  }
  6756  .  .  .  .  .  .  .  .  .  }
  6757  .  .  .  .  .  .  .  .  }
  6758  .  .  .  .  .  .  .  }
  6759  .  .  .  .  .  .  .  Rbrace: source.go:462:2
  6760  .  .  .  .  .  .  }
  6761  .  .  .  .  .  }
  6762  .  .  .  .  .  11: *ast.IfStmt {
  6763  .  .  .  .  .  .  If: source.go:464:2
  6764  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6765  .  .  .  .  .  .  .  X: *ast.CallExpr {
  6766  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  6767  .  .  .  .  .  .  .  .  .  NamePos: source.go:464:5
  6768  .  .  .  .  .  .  .  .  .  Name: "len"
  6769  .  .  .  .  .  .  .  .  }
  6770  .  .  .  .  .  .  .  .  Lparen: source.go:464:8
  6771  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6772  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  6773  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6774  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:464:9
  6775  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  6776  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6631)
  6777  .  .  .  .  .  .  .  .  .  .  }
  6778  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6779  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:464:29
  6780  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  6781  .  .  .  .  .  .  .  .  .  .  }
  6782  .  .  .  .  .  .  .  .  .  }
  6783  .  .  .  .  .  .  .  .  }
  6784  .  .  .  .  .  .  .  .  Ellipsis: -
  6785  .  .  .  .  .  .  .  .  Rparen: source.go:464:33
  6786  .  .  .  .  .  .  .  }
  6787  .  .  .  .  .  .  .  OpPos: source.go:464:35
  6788  .  .  .  .  .  .  .  Op: ==
  6789  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  6790  .  .  .  .  .  .  .  .  ValuePos: source.go:464:38
  6791  .  .  .  .  .  .  .  .  Kind: INT
  6792  .  .  .  .  .  .  .  .  Value: "0"
  6793  .  .  .  .  .  .  .  }
  6794  .  .  .  .  .  .  }
  6795  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6796  .  .  .  .  .  .  .  Lbrace: source.go:464:40
  6797  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6798  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6799  .  .  .  .  .  .  .  .  .  Return: source.go:465:3
  6800  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6801  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6802  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6803  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6804  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:465:10
  6805  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6806  .  .  .  .  .  .  .  .  .  .  .  .  }
  6807  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6808  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:465:15
  6809  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6810  .  .  .  .  .  .  .  .  .  .  .  .  }
  6811  .  .  .  .  .  .  .  .  .  .  .  }
  6812  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:465:20
  6813  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6814  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6815  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:465:21
  6816  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6817  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"name field must be a non-empty string\""
  6818  .  .  .  .  .  .  .  .  .  .  .  .  }
  6819  .  .  .  .  .  .  .  .  .  .  .  }
  6820  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6821  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:465:60
  6822  .  .  .  .  .  .  .  .  .  .  }
  6823  .  .  .  .  .  .  .  .  .  }
  6824  .  .  .  .  .  .  .  .  }
  6825  .  .  .  .  .  .  .  }
  6826  .  .  .  .  .  .  .  Rbrace: source.go:466:2
  6827  .  .  .  .  .  .  }
  6828  .  .  .  .  .  }
  6829  .  .  .  .  .  12: *ast.IfStmt {
  6830  .  .  .  .  .  .  If: source.go:467:2
  6831  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6832  .  .  .  .  .  .  .  X: *ast.CallExpr {
  6833  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  6834  .  .  .  .  .  .  .  .  .  NamePos: source.go:467:5
  6835  .  .  .  .  .  .  .  .  .  Name: "len"
  6836  .  .  .  .  .  .  .  .  }
  6837  .  .  .  .  .  .  .  .  Lparen: source.go:467:8
  6838  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6839  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  6840  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6841  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:467:9
  6842  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  6843  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6631)
  6844  .  .  .  .  .  .  .  .  .  .  }
  6845  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6846  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:467:29
  6847  .  .  .  .  .  .  .  .  .  .  .  Name: "Owner"
  6848  .  .  .  .  .  .  .  .  .  .  }
  6849  .  .  .  .  .  .  .  .  .  }
  6850  .  .  .  .  .  .  .  .  }
  6851  .  .  .  .  .  .  .  .  Ellipsis: -
  6852  .  .  .  .  .  .  .  .  Rparen: source.go:467:34
  6853  .  .  .  .  .  .  .  }
  6854  .  .  .  .  .  .  .  OpPos: source.go:467:36
  6855  .  .  .  .  .  .  .  Op: ==
  6856  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  6857  .  .  .  .  .  .  .  .  ValuePos: source.go:467:39
  6858  .  .  .  .  .  .  .  .  Kind: INT
  6859  .  .  .  .  .  .  .  .  Value: "0"
  6860  .  .  .  .  .  .  .  }
  6861  .  .  .  .  .  .  }
  6862  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6863  .  .  .  .  .  .  .  Lbrace: source.go:467:41
  6864  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6865  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6866  .  .  .  .  .  .  .  .  .  Return: source.go:468:3
  6867  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6868  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6869  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6870  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6871  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:468:10
  6872  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6873  .  .  .  .  .  .  .  .  .  .  .  .  }
  6874  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6875  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:468:15
  6876  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6877  .  .  .  .  .  .  .  .  .  .  .  .  }
  6878  .  .  .  .  .  .  .  .  .  .  .  }
  6879  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:468:20
  6880  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6881  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6882  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:468:21
  6883  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6884  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"owner field must be a non-empty string\""
  6885  .  .  .  .  .  .  .  .  .  .  .  .  }
  6886  .  .  .  .  .  .  .  .  .  .  .  }
  6887  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  6888  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:468:61
  6889  .  .  .  .  .  .  .  .  .  .  }
  6890  .  .  .  .  .  .  .  .  .  }
  6891  .  .  .  .  .  .  .  .  }
  6892  .  .  .  .  .  .  .  }
  6893  .  .  .  .  .  .  .  Rbrace: source.go:469:2
  6894  .  .  .  .  .  .  }
  6895  .  .  .  .  .  }
  6896  .  .  .  .  .  13: *ast.AssignStmt {
  6897  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  6898  .  .  .  .  .  .  .  0: *ast.Ident {
  6899  .  .  .  .  .  .  .  .  NamePos: source.go:471:2
  6900  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  6901  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  6902  .  .  .  .  .  .  .  .  .  Kind: var
  6903  .  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  6904  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 6896)
  6905  .  .  .  .  .  .  .  .  }
  6906  .  .  .  .  .  .  .  }
  6907  .  .  .  .  .  .  .  1: *ast.Ident {
  6908  .  .  .  .  .  .  .  .  NamePos: source.go:471:17
  6909  .  .  .  .  .  .  .  .  Name: "err"
  6910  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  6911  .  .  .  .  .  .  .  }
  6912  .  .  .  .  .  .  }
  6913  .  .  .  .  .  .  TokPos: source.go:471:21
  6914  .  .  .  .  .  .  Tok: :=
  6915  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  6916  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6917  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6918  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6919  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:471:24
  6920  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  6921  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6139)
  6922  .  .  .  .  .  .  .  .  .  }
  6923  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6924  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:471:29
  6925  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateData"
  6926  .  .  .  .  .  .  .  .  .  }
  6927  .  .  .  .  .  .  .  .  }
  6928  .  .  .  .  .  .  .  .  Lparen: source.go:471:43
  6929  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  6930  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  6931  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:471:44
  6932  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6933  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  6934  .  .  .  .  .  .  .  .  .  }
  6935  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  6936  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6937  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:471:65
  6938  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  6939  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6631)
  6940  .  .  .  .  .  .  .  .  .  .  }
  6941  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6942  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:471:85
  6943  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  6944  .  .  .  .  .  .  .  .  .  .  }
  6945  .  .  .  .  .  .  .  .  .  }
  6946  .  .  .  .  .  .  .  .  }
  6947  .  .  .  .  .  .  .  .  Ellipsis: -
  6948  .  .  .  .  .  .  .  .  Rparen: source.go:471:89
  6949  .  .  .  .  .  .  .  }
  6950  .  .  .  .  .  .  }
  6951  .  .  .  .  .  }
  6952  .  .  .  .  .  14: *ast.IfStmt {
  6953  .  .  .  .  .  .  If: source.go:472:2
  6954  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  6955  .  .  .  .  .  .  .  X: *ast.Ident {
  6956  .  .  .  .  .  .  .  .  NamePos: source.go:472:5
  6957  .  .  .  .  .  .  .  .  Name: "err"
  6958  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  6959  .  .  .  .  .  .  .  }
  6960  .  .  .  .  .  .  .  OpPos: source.go:472:9
  6961  .  .  .  .  .  .  .  Op: !=
  6962  .  .  .  .  .  .  .  Y: *ast.Ident {
  6963  .  .  .  .  .  .  .  .  NamePos: source.go:472:12
  6964  .  .  .  .  .  .  .  .  Name: "nil"
  6965  .  .  .  .  .  .  .  }
  6966  .  .  .  .  .  .  }
  6967  .  .  .  .  .  .  Body: *ast.BlockStmt {
  6968  .  .  .  .  .  .  .  Lbrace: source.go:472:16
  6969  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  6970  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  6971  .  .  .  .  .  .  .  .  .  Return: source.go:473:3
  6972  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  6973  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  6974  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6975  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6976  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:473:10
  6977  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  6978  .  .  .  .  .  .  .  .  .  .  .  .  }
  6979  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  6980  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:473:15
  6981  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  6982  .  .  .  .  .  .  .  .  .  .  .  .  }
  6983  .  .  .  .  .  .  .  .  .  .  .  }
  6984  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:473:20
  6985  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  6986  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  6987  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  6988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:473:21
  6989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  6990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to get marble:\""
  6991  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  6992  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:473:45
  6993  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  6994  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
  6995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  6996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  6997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:473:47
  6998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  6999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:473:51
  7003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:473:56
  7007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:473:57
  7009  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7010  .  .  .  .  .  .  .  .  .  .  .  .  }
  7011  .  .  .  .  .  .  .  .  .  .  .  }
  7012  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7013  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:473:58
  7014  .  .  .  .  .  .  .  .  .  .  }
  7015  .  .  .  .  .  .  .  .  .  }
  7016  .  .  .  .  .  .  .  .  }
  7017  .  .  .  .  .  .  .  }
  7018  .  .  .  .  .  .  .  Rbrace: source.go:474:2
  7019  .  .  .  .  .  .  }
  7020  .  .  .  .  .  .  Else: *ast.IfStmt {
  7021  .  .  .  .  .  .  .  If: source.go:474:9
  7022  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  7023  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7024  .  .  .  .  .  .  .  .  .  NamePos: source.go:474:12
  7025  .  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  7026  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6901)
  7027  .  .  .  .  .  .  .  .  }
  7028  .  .  .  .  .  .  .  .  OpPos: source.go:474:26
  7029  .  .  .  .  .  .  .  .  Op: ==
  7030  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  7031  .  .  .  .  .  .  .  .  .  NamePos: source.go:474:29
  7032  .  .  .  .  .  .  .  .  .  Name: "nil"
  7033  .  .  .  .  .  .  .  .  }
  7034  .  .  .  .  .  .  .  }
  7035  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7036  .  .  .  .  .  .  .  .  Lbrace: source.go:474:33
  7037  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  7038  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  7039  .  .  .  .  .  .  .  .  .  .  Return: source.go:475:3
  7040  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7041  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7042  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7043  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:475:10
  7045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7046  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7047  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:475:15
  7049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7050  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7051  .  .  .  .  .  .  .  .  .  .  .  .  }
  7052  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:475:20
  7053  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7054  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  7055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
  7056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:475:21
  7057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  7058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Marble does not exist: \""
  7059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:475:47
  7061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
  7062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  7063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:475:49
  7065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  7066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6631)
  7067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:475:69
  7070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  7071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7073  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7074  .  .  .  .  .  .  .  .  .  .  .  .  }
  7075  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7076  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:475:73
  7077  .  .  .  .  .  .  .  .  .  .  .  }
  7078  .  .  .  .  .  .  .  .  .  .  }
  7079  .  .  .  .  .  .  .  .  .  }
  7080  .  .  .  .  .  .  .  .  }
  7081  .  .  .  .  .  .  .  .  Rbrace: source.go:476:2
  7082  .  .  .  .  .  .  .  }
  7083  .  .  .  .  .  .  }
  7084  .  .  .  .  .  }
  7085  .  .  .  .  .  15: *ast.AssignStmt {
  7086  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7087  .  .  .  .  .  .  .  0: *ast.Ident {
  7088  .  .  .  .  .  .  .  .  NamePos: source.go:478:2
  7089  .  .  .  .  .  .  .  .  Name: "marbleToTransfer"
  7090  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7091  .  .  .  .  .  .  .  .  .  Kind: var
  7092  .  .  .  .  .  .  .  .  .  Name: "marbleToTransfer"
  7093  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7085)
  7094  .  .  .  .  .  .  .  .  }
  7095  .  .  .  .  .  .  .  }
  7096  .  .  .  .  .  .  }
  7097  .  .  .  .  .  .  TokPos: source.go:478:19
  7098  .  .  .  .  .  .  Tok: :=
  7099  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7100  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  7101  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  7102  .  .  .  .  .  .  .  .  .  NamePos: source.go:478:22
  7103  .  .  .  .  .  .  .  .  .  Name: "marble"
  7104  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 104)
  7105  .  .  .  .  .  .  .  .  }
  7106  .  .  .  .  .  .  .  .  Lbrace: source.go:478:28
  7107  .  .  .  .  .  .  .  .  Rbrace: source.go:478:29
  7108  .  .  .  .  .  .  .  .  Incomplete: false
  7109  .  .  .  .  .  .  .  }
  7110  .  .  .  .  .  .  }
  7111  .  .  .  .  .  }
  7112  .  .  .  .  .  16: *ast.AssignStmt {
  7113  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7114  .  .  .  .  .  .  .  0: *ast.Ident {
  7115  .  .  .  .  .  .  .  .  NamePos: source.go:479:2
  7116  .  .  .  .  .  .  .  .  Name: "err"
  7117  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7118  .  .  .  .  .  .  .  }
  7119  .  .  .  .  .  .  }
  7120  .  .  .  .  .  .  TokPos: source.go:479:6
  7121  .  .  .  .  .  .  Tok: =
  7122  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7123  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7124  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7125  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7126  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:479:8
  7127  .  .  .  .  .  .  .  .  .  .  Name: "json"
  7128  .  .  .  .  .  .  .  .  .  }
  7129  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7130  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:479:13
  7131  .  .  .  .  .  .  .  .  .  .  Name: "Unmarshal"
  7132  .  .  .  .  .  .  .  .  .  }
  7133  .  .  .  .  .  .  .  .  }
  7134  .  .  .  .  .  .  .  .  Lparen: source.go:479:22
  7135  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  7136  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7137  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:479:23
  7138  .  .  .  .  .  .  .  .  .  .  Name: "marbleAsBytes"
  7139  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6901)
  7140  .  .  .  .  .  .  .  .  .  }
  7141  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {
  7142  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:479:38
  7143  .  .  .  .  .  .  .  .  .  .  Op: &
  7144  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7145  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:479:39
  7146  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToTransfer"
  7147  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7090)
  7148  .  .  .  .  .  .  .  .  .  .  }
  7149  .  .  .  .  .  .  .  .  .  }
  7150  .  .  .  .  .  .  .  .  }
  7151  .  .  .  .  .  .  .  .  Ellipsis: -
  7152  .  .  .  .  .  .  .  .  Rparen: source.go:479:55
  7153  .  .  .  .  .  .  .  }
  7154  .  .  .  .  .  .  }
  7155  .  .  .  .  .  }
  7156  .  .  .  .  .  17: *ast.IfStmt {
  7157  .  .  .  .  .  .  If: source.go:480:2
  7158  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  7159  .  .  .  .  .  .  .  X: *ast.Ident {
  7160  .  .  .  .  .  .  .  .  NamePos: source.go:480:5
  7161  .  .  .  .  .  .  .  .  Name: "err"
  7162  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7163  .  .  .  .  .  .  .  }
  7164  .  .  .  .  .  .  .  OpPos: source.go:480:9
  7165  .  .  .  .  .  .  .  Op: !=
  7166  .  .  .  .  .  .  .  Y: *ast.Ident {
  7167  .  .  .  .  .  .  .  .  NamePos: source.go:480:12
  7168  .  .  .  .  .  .  .  .  Name: "nil"
  7169  .  .  .  .  .  .  .  }
  7170  .  .  .  .  .  .  }
  7171  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7172  .  .  .  .  .  .  .  Lbrace: source.go:480:16
  7173  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  7174  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  7175  .  .  .  .  .  .  .  .  .  Return: source.go:481:3
  7176  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7177  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7178  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7179  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7180  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:481:10
  7181  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7182  .  .  .  .  .  .  .  .  .  .  .  .  }
  7183  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7184  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:481:15
  7185  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7186  .  .  .  .  .  .  .  .  .  .  .  .  }
  7187  .  .  .  .  .  .  .  .  .  .  .  }
  7188  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:481:20
  7189  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7190  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7191  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:481:21
  7194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  7195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:481:25
  7199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7201  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7202  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:481:30
  7203  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7204  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:481:31
  7205  .  .  .  .  .  .  .  .  .  .  .  .  }
  7206  .  .  .  .  .  .  .  .  .  .  .  }
  7207  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7208  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:481:32
  7209  .  .  .  .  .  .  .  .  .  .  }
  7210  .  .  .  .  .  .  .  .  .  }
  7211  .  .  .  .  .  .  .  .  }
  7212  .  .  .  .  .  .  .  }
  7213  .  .  .  .  .  .  .  Rbrace: source.go:482:2
  7214  .  .  .  .  .  .  }
  7215  .  .  .  .  .  }
  7216  .  .  .  .  .  18: *ast.AssignStmt {
  7217  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7218  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  7219  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7220  .  .  .  .  .  .  .  .  .  NamePos: source.go:483:2
  7221  .  .  .  .  .  .  .  .  .  Name: "marbleToTransfer"
  7222  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7090)
  7223  .  .  .  .  .  .  .  .  }
  7224  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7225  .  .  .  .  .  .  .  .  .  NamePos: source.go:483:19
  7226  .  .  .  .  .  .  .  .  .  Name: "Owner"
  7227  .  .  .  .  .  .  .  .  }
  7228  .  .  .  .  .  .  .  }
  7229  .  .  .  .  .  .  }
  7230  .  .  .  .  .  .  TokPos: source.go:483:25
  7231  .  .  .  .  .  .  Tok: =
  7232  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7233  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  7234  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7235  .  .  .  .  .  .  .  .  .  NamePos: source.go:483:27
  7236  .  .  .  .  .  .  .  .  .  Name: "marbleTransferInput"
  7237  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6631)
  7238  .  .  .  .  .  .  .  .  }
  7239  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7240  .  .  .  .  .  .  .  .  .  NamePos: source.go:483:47
  7241  .  .  .  .  .  .  .  .  .  Name: "Owner"
  7242  .  .  .  .  .  .  .  .  }
  7243  .  .  .  .  .  .  .  }
  7244  .  .  .  .  .  .  }
  7245  .  .  .  .  .  }
  7246  .  .  .  .  .  19: *ast.AssignStmt {
  7247  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  7248  .  .  .  .  .  .  .  0: *ast.Ident {
  7249  .  .  .  .  .  .  .  .  NamePos: source.go:485:2
  7250  .  .  .  .  .  .  .  .  Name: "marbleJSONasBytes"
  7251  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7252  .  .  .  .  .  .  .  .  .  Kind: var
  7253  .  .  .  .  .  .  .  .  .  Name: "marbleJSONasBytes"
  7254  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7246)
  7255  .  .  .  .  .  .  .  .  }
  7256  .  .  .  .  .  .  .  }
  7257  .  .  .  .  .  .  .  1: *ast.Ident {
  7258  .  .  .  .  .  .  .  .  NamePos: source.go:485:21
  7259  .  .  .  .  .  .  .  .  Name: "_"
  7260  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7261  .  .  .  .  .  .  .  .  .  Kind: var
  7262  .  .  .  .  .  .  .  .  .  Name: "_"
  7263  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7246)
  7264  .  .  .  .  .  .  .  .  }
  7265  .  .  .  .  .  .  .  }
  7266  .  .  .  .  .  .  }
  7267  .  .  .  .  .  .  TokPos: source.go:485:23
  7268  .  .  .  .  .  .  Tok: :=
  7269  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7270  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7271  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7272  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7273  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:485:26
  7274  .  .  .  .  .  .  .  .  .  .  Name: "json"
  7275  .  .  .  .  .  .  .  .  .  }
  7276  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7277  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:485:31
  7278  .  .  .  .  .  .  .  .  .  .  Name: "Marshal"
  7279  .  .  .  .  .  .  .  .  .  }
  7280  .  .  .  .  .  .  .  .  }
  7281  .  .  .  .  .  .  .  .  Lparen: source.go:485:38
  7282  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7283  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7284  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:485:39
  7285  .  .  .  .  .  .  .  .  .  .  Name: "marbleToTransfer"
  7286  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7090)
  7287  .  .  .  .  .  .  .  .  .  }
  7288  .  .  .  .  .  .  .  .  }
  7289  .  .  .  .  .  .  .  .  Ellipsis: -
  7290  .  .  .  .  .  .  .  .  Rparen: source.go:485:55
  7291  .  .  .  .  .  .  .  }
  7292  .  .  .  .  .  .  }
  7293  .  .  .  .  .  }
  7294  .  .  .  .  .  20: *ast.AssignStmt {
  7295  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7296  .  .  .  .  .  .  .  0: *ast.Ident {
  7297  .  .  .  .  .  .  .  .  NamePos: source.go:486:2
  7298  .  .  .  .  .  .  .  .  Name: "err"
  7299  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7300  .  .  .  .  .  .  .  }
  7301  .  .  .  .  .  .  }
  7302  .  .  .  .  .  .  TokPos: source.go:486:6
  7303  .  .  .  .  .  .  Tok: =
  7304  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7305  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7306  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7307  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7308  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:486:8
  7309  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  7310  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6139)
  7311  .  .  .  .  .  .  .  .  .  }
  7312  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7313  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:486:13
  7314  .  .  .  .  .  .  .  .  .  .  Name: "PutPrivateData"
  7315  .  .  .  .  .  .  .  .  .  }
  7316  .  .  .  .  .  .  .  .  }
  7317  .  .  .  .  .  .  .  .  Lparen: source.go:486:27
  7318  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  7319  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  7320  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:486:28
  7321  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  7322  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  7323  .  .  .  .  .  .  .  .  .  }
  7324  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  7325  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7326  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:486:49
  7327  .  .  .  .  .  .  .  .  .  .  .  Name: "marbleToTransfer"
  7328  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7090)
  7329  .  .  .  .  .  .  .  .  .  .  }
  7330  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7331  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:486:66
  7332  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
  7333  .  .  .  .  .  .  .  .  .  .  }
  7334  .  .  .  .  .  .  .  .  .  }
  7335  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  7336  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:486:72
  7337  .  .  .  .  .  .  .  .  .  .  Name: "marbleJSONasBytes"
  7338  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7251)
  7339  .  .  .  .  .  .  .  .  .  }
  7340  .  .  .  .  .  .  .  .  }
  7341  .  .  .  .  .  .  .  .  Ellipsis: -
  7342  .  .  .  .  .  .  .  .  Rparen: source.go:486:89
  7343  .  .  .  .  .  .  .  }
  7344  .  .  .  .  .  .  }
  7345  .  .  .  .  .  }
  7346  .  .  .  .  .  21: *ast.IfStmt {
  7347  .  .  .  .  .  .  If: source.go:487:2
  7348  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  7349  .  .  .  .  .  .  .  X: *ast.Ident {
  7350  .  .  .  .  .  .  .  .  NamePos: source.go:487:5
  7351  .  .  .  .  .  .  .  .  Name: "err"
  7352  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7353  .  .  .  .  .  .  .  }
  7354  .  .  .  .  .  .  .  OpPos: source.go:487:9
  7355  .  .  .  .  .  .  .  Op: !=
  7356  .  .  .  .  .  .  .  Y: *ast.Ident {
  7357  .  .  .  .  .  .  .  .  NamePos: source.go:487:12
  7358  .  .  .  .  .  .  .  .  Name: "nil"
  7359  .  .  .  .  .  .  .  }
  7360  .  .  .  .  .  .  }
  7361  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7362  .  .  .  .  .  .  .  Lbrace: source.go:487:16
  7363  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  7364  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  7365  .  .  .  .  .  .  .  .  .  Return: source.go:488:3
  7366  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7367  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7368  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7369  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7370  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:488:10
  7371  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7372  .  .  .  .  .  .  .  .  .  .  .  .  }
  7373  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7374  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:488:15
  7375  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7376  .  .  .  .  .  .  .  .  .  .  .  .  }
  7377  .  .  .  .  .  .  .  .  .  .  .  }
  7378  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:488:20
  7379  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7380  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7381  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7383  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:488:21
  7384  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  7385  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 6377)
  7386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:488:25
  7389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7391  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7392  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:488:30
  7393  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7394  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:488:31
  7395  .  .  .  .  .  .  .  .  .  .  .  .  }
  7396  .  .  .  .  .  .  .  .  .  .  .  }
  7397  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7398  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:488:32
  7399  .  .  .  .  .  .  .  .  .  .  }
  7400  .  .  .  .  .  .  .  .  .  }
  7401  .  .  .  .  .  .  .  .  }
  7402  .  .  .  .  .  .  .  }
  7403  .  .  .  .  .  .  .  Rbrace: source.go:489:2
  7404  .  .  .  .  .  .  }
  7405  .  .  .  .  .  }
  7406  .  .  .  .  .  22: *ast.ExprStmt {
  7407  .  .  .  .  .  .  X: *ast.CallExpr {
  7408  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7409  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7410  .  .  .  .  .  .  .  .  .  NamePos: source.go:491:2
  7411  .  .  .  .  .  .  .  .  .  Name: "fmt"
  7412  .  .  .  .  .  .  .  .  }
  7413  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7414  .  .  .  .  .  .  .  .  .  NamePos: source.go:491:6
  7415  .  .  .  .  .  .  .  .  .  Name: "Println"
  7416  .  .  .  .  .  .  .  .  }
  7417  .  .  .  .  .  .  .  }
  7418  .  .  .  .  .  .  .  Lparen: source.go:491:13
  7419  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7420  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  7421  .  .  .  .  .  .  .  .  .  ValuePos: source.go:491:14
  7422  .  .  .  .  .  .  .  .  .  Kind: STRING
  7423  .  .  .  .  .  .  .  .  .  Value: "\"- end transferMarble (success)\""
  7424  .  .  .  .  .  .  .  .  }
  7425  .  .  .  .  .  .  .  }
  7426  .  .  .  .  .  .  .  Ellipsis: -
  7427  .  .  .  .  .  .  .  Rparen: source.go:491:46
  7428  .  .  .  .  .  .  }
  7429  .  .  .  .  .  }
  7430  .  .  .  .  .  23: *ast.ReturnStmt {
  7431  .  .  .  .  .  .  Return: source.go:492:2
  7432  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7433  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7434  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7435  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7436  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:492:9
  7437  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7438  .  .  .  .  .  .  .  .  .  }
  7439  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7440  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:492:14
  7441  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  7442  .  .  .  .  .  .  .  .  .  }
  7443  .  .  .  .  .  .  .  .  }
  7444  .  .  .  .  .  .  .  .  Lparen: source.go:492:21
  7445  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7446  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7447  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:492:22
  7448  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  7449  .  .  .  .  .  .  .  .  .  }
  7450  .  .  .  .  .  .  .  .  }
  7451  .  .  .  .  .  .  .  .  Ellipsis: -
  7452  .  .  .  .  .  .  .  .  Rparen: source.go:492:25
  7453  .  .  .  .  .  .  .  }
  7454  .  .  .  .  .  .  }
  7455  .  .  .  .  .  }
  7456  .  .  .  .  }
  7457  .  .  .  .  Rbrace: source.go:493:1
  7458  .  .  .  }
  7459  .  .  }
  7460  .  .  12: *ast.FuncDecl {
  7461  .  .  .  Recv: *ast.FieldList {
  7462  .  .  .  .  Opening: source.go:506:6
  7463  .  .  .  .  List: []*ast.Field (len = 1) {
  7464  .  .  .  .  .  0: *ast.Field {
  7465  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  7466  .  .  .  .  .  .  .  0: *ast.Ident {
  7467  .  .  .  .  .  .  .  .  NamePos: source.go:506:7
  7468  .  .  .  .  .  .  .  .  Name: "t"
  7469  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7470  .  .  .  .  .  .  .  .  .  Kind: var
  7471  .  .  .  .  .  .  .  .  .  Name: "t"
  7472  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7464)
  7473  .  .  .  .  .  .  .  .  }
  7474  .  .  .  .  .  .  .  }
  7475  .  .  .  .  .  .  }
  7476  .  .  .  .  .  .  Type: *ast.StarExpr {
  7477  .  .  .  .  .  .  .  Star: source.go:506:9
  7478  .  .  .  .  .  .  .  X: *ast.Ident {
  7479  .  .  .  .  .  .  .  .  NamePos: source.go:506:10
  7480  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  7481  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  7482  .  .  .  .  .  .  .  }
  7483  .  .  .  .  .  .  }
  7484  .  .  .  .  .  }
  7485  .  .  .  .  }
  7486  .  .  .  .  Closing: source.go:506:25
  7487  .  .  .  }
  7488  .  .  .  Name: *ast.Ident {
  7489  .  .  .  .  NamePos: source.go:506:27
  7490  .  .  .  .  Name: "getMarblesByRange"
  7491  .  .  .  }
  7492  .  .  .  Type: *ast.FuncType {
  7493  .  .  .  .  Func: source.go:506:1
  7494  .  .  .  .  Params: *ast.FieldList {
  7495  .  .  .  .  .  Opening: source.go:506:44
  7496  .  .  .  .  .  List: []*ast.Field (len = 2) {
  7497  .  .  .  .  .  .  0: *ast.Field {
  7498  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  7499  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7500  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:45
  7501  .  .  .  .  .  .  .  .  .  Name: "stub"
  7502  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7503  .  .  .  .  .  .  .  .  .  .  Kind: var
  7504  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  7505  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7497)
  7506  .  .  .  .  .  .  .  .  .  }
  7507  .  .  .  .  .  .  .  .  }
  7508  .  .  .  .  .  .  .  }
  7509  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  7510  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7511  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:50
  7512  .  .  .  .  .  .  .  .  .  Name: "shim"
  7513  .  .  .  .  .  .  .  .  }
  7514  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7515  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:55
  7516  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  7517  .  .  .  .  .  .  .  .  }
  7518  .  .  .  .  .  .  .  }
  7519  .  .  .  .  .  .  }
  7520  .  .  .  .  .  .  1: *ast.Field {
  7521  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  7522  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7523  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:79
  7524  .  .  .  .  .  .  .  .  .  Name: "args"
  7525  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7526  .  .  .  .  .  .  .  .  .  .  Kind: var
  7527  .  .  .  .  .  .  .  .  .  .  Name: "args"
  7528  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7520)
  7529  .  .  .  .  .  .  .  .  .  }
  7530  .  .  .  .  .  .  .  .  }
  7531  .  .  .  .  .  .  .  }
  7532  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  7533  .  .  .  .  .  .  .  .  Lbrack: source.go:506:84
  7534  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  7535  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:86
  7536  .  .  .  .  .  .  .  .  .  Name: "string"
  7537  .  .  .  .  .  .  .  .  }
  7538  .  .  .  .  .  .  .  }
  7539  .  .  .  .  .  .  }
  7540  .  .  .  .  .  }
  7541  .  .  .  .  .  Closing: source.go:506:92
  7542  .  .  .  .  }
  7543  .  .  .  .  Results: *ast.FieldList {
  7544  .  .  .  .  .  Opening: -
  7545  .  .  .  .  .  List: []*ast.Field (len = 1) {
  7546  .  .  .  .  .  .  0: *ast.Field {
  7547  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  7548  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7549  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:94
  7550  .  .  .  .  .  .  .  .  .  Name: "pb"
  7551  .  .  .  .  .  .  .  .  }
  7552  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7553  .  .  .  .  .  .  .  .  .  NamePos: source.go:506:97
  7554  .  .  .  .  .  .  .  .  .  Name: "Response"
  7555  .  .  .  .  .  .  .  .  }
  7556  .  .  .  .  .  .  .  }
  7557  .  .  .  .  .  .  }
  7558  .  .  .  .  .  }
  7559  .  .  .  .  .  Closing: -
  7560  .  .  .  .  }
  7561  .  .  .  }
  7562  .  .  .  Body: *ast.BlockStmt {
  7563  .  .  .  .  Lbrace: source.go:506:106
  7564  .  .  .  .  List: []ast.Stmt (len = 13) {
  7565  .  .  .  .  .  0: *ast.IfStmt {
  7566  .  .  .  .  .  .  If: source.go:508:2
  7567  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  7568  .  .  .  .  .  .  .  X: *ast.CallExpr {
  7569  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  7570  .  .  .  .  .  .  .  .  .  NamePos: source.go:508:5
  7571  .  .  .  .  .  .  .  .  .  Name: "len"
  7572  .  .  .  .  .  .  .  .  }
  7573  .  .  .  .  .  .  .  .  Lparen: source.go:508:8
  7574  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7575  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7576  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:508:9
  7577  .  .  .  .  .  .  .  .  .  .  Name: "args"
  7578  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7525)
  7579  .  .  .  .  .  .  .  .  .  }
  7580  .  .  .  .  .  .  .  .  }
  7581  .  .  .  .  .  .  .  .  Ellipsis: -
  7582  .  .  .  .  .  .  .  .  Rparen: source.go:508:13
  7583  .  .  .  .  .  .  .  }
  7584  .  .  .  .  .  .  .  OpPos: source.go:508:15
  7585  .  .  .  .  .  .  .  Op: <
  7586  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  7587  .  .  .  .  .  .  .  .  ValuePos: source.go:508:17
  7588  .  .  .  .  .  .  .  .  Kind: INT
  7589  .  .  .  .  .  .  .  .  Value: "2"
  7590  .  .  .  .  .  .  .  }
  7591  .  .  .  .  .  .  }
  7592  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7593  .  .  .  .  .  .  .  Lbrace: source.go:508:19
  7594  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  7595  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  7596  .  .  .  .  .  .  .  .  .  Return: source.go:509:3
  7597  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7598  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7599  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7600  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7601  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:509:10
  7602  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7603  .  .  .  .  .  .  .  .  .  .  .  .  }
  7604  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7605  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:509:15
  7606  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7607  .  .  .  .  .  .  .  .  .  .  .  .  }
  7608  .  .  .  .  .  .  .  .  .  .  .  }
  7609  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:509:20
  7610  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7611  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  7612  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:509:21
  7613  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  7614  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting 2\""
  7615  .  .  .  .  .  .  .  .  .  .  .  .  }
  7616  .  .  .  .  .  .  .  .  .  .  .  }
  7617  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7618  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:509:65
  7619  .  .  .  .  .  .  .  .  .  .  }
  7620  .  .  .  .  .  .  .  .  .  }
  7621  .  .  .  .  .  .  .  .  }
  7622  .  .  .  .  .  .  .  }
  7623  .  .  .  .  .  .  .  Rbrace: source.go:510:2
  7624  .  .  .  .  .  .  }
  7625  .  .  .  .  .  }
  7626  .  .  .  .  .  1: *ast.AssignStmt {
  7627  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7628  .  .  .  .  .  .  .  0: *ast.Ident {
  7629  .  .  .  .  .  .  .  .  NamePos: source.go:512:2
  7630  .  .  .  .  .  .  .  .  Name: "startKey"
  7631  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7632  .  .  .  .  .  .  .  .  .  Kind: var
  7633  .  .  .  .  .  .  .  .  .  Name: "startKey"
  7634  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7626)
  7635  .  .  .  .  .  .  .  .  }
  7636  .  .  .  .  .  .  .  }
  7637  .  .  .  .  .  .  }
  7638  .  .  .  .  .  .  TokPos: source.go:512:11
  7639  .  .  .  .  .  .  Tok: :=
  7640  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7641  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  7642  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7643  .  .  .  .  .  .  .  .  .  NamePos: source.go:512:14
  7644  .  .  .  .  .  .  .  .  .  Name: "args"
  7645  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7525)
  7646  .  .  .  .  .  .  .  .  }
  7647  .  .  .  .  .  .  .  .  Lbrack: source.go:512:18
  7648  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  7649  .  .  .  .  .  .  .  .  .  ValuePos: source.go:512:19
  7650  .  .  .  .  .  .  .  .  .  Kind: INT
  7651  .  .  .  .  .  .  .  .  .  Value: "0"
  7652  .  .  .  .  .  .  .  .  }
  7653  .  .  .  .  .  .  .  .  Rbrack: source.go:512:20
  7654  .  .  .  .  .  .  .  }
  7655  .  .  .  .  .  .  }
  7656  .  .  .  .  .  }
  7657  .  .  .  .  .  2: *ast.AssignStmt {
  7658  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7659  .  .  .  .  .  .  .  0: *ast.Ident {
  7660  .  .  .  .  .  .  .  .  NamePos: source.go:513:2
  7661  .  .  .  .  .  .  .  .  Name: "endKey"
  7662  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7663  .  .  .  .  .  .  .  .  .  Kind: var
  7664  .  .  .  .  .  .  .  .  .  Name: "endKey"
  7665  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7657)
  7666  .  .  .  .  .  .  .  .  }
  7667  .  .  .  .  .  .  .  }
  7668  .  .  .  .  .  .  }
  7669  .  .  .  .  .  .  TokPos: source.go:513:9
  7670  .  .  .  .  .  .  Tok: :=
  7671  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7672  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  7673  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7674  .  .  .  .  .  .  .  .  .  NamePos: source.go:513:12
  7675  .  .  .  .  .  .  .  .  .  Name: "args"
  7676  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7525)
  7677  .  .  .  .  .  .  .  .  }
  7678  .  .  .  .  .  .  .  .  Lbrack: source.go:513:16
  7679  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  7680  .  .  .  .  .  .  .  .  .  ValuePos: source.go:513:17
  7681  .  .  .  .  .  .  .  .  .  Kind: INT
  7682  .  .  .  .  .  .  .  .  .  Value: "1"
  7683  .  .  .  .  .  .  .  .  }
  7684  .  .  .  .  .  .  .  .  Rbrack: source.go:513:18
  7685  .  .  .  .  .  .  .  }
  7686  .  .  .  .  .  .  }
  7687  .  .  .  .  .  }
  7688  .  .  .  .  .  3: *ast.AssignStmt {
  7689  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  7690  .  .  .  .  .  .  .  0: *ast.Ident {
  7691  .  .  .  .  .  .  .  .  NamePos: source.go:515:2
  7692  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  7693  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7694  .  .  .  .  .  .  .  .  .  Kind: var
  7695  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  7696  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7688)
  7697  .  .  .  .  .  .  .  .  }
  7698  .  .  .  .  .  .  .  }
  7699  .  .  .  .  .  .  .  1: *ast.Ident {
  7700  .  .  .  .  .  .  .  .  NamePos: source.go:515:19
  7701  .  .  .  .  .  .  .  .  Name: "err"
  7702  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7703  .  .  .  .  .  .  .  .  .  Kind: var
  7704  .  .  .  .  .  .  .  .  .  Name: "err"
  7705  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7688)
  7706  .  .  .  .  .  .  .  .  }
  7707  .  .  .  .  .  .  .  }
  7708  .  .  .  .  .  .  }
  7709  .  .  .  .  .  .  TokPos: source.go:515:23
  7710  .  .  .  .  .  .  Tok: :=
  7711  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7712  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7713  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7714  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7715  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:515:26
  7716  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  7717  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7502)
  7718  .  .  .  .  .  .  .  .  .  }
  7719  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7720  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:515:31
  7721  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateDataByRange"
  7722  .  .  .  .  .  .  .  .  .  }
  7723  .  .  .  .  .  .  .  .  }
  7724  .  .  .  .  .  .  .  .  Lparen: source.go:515:52
  7725  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  7726  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  7727  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:515:53
  7728  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  7729  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  7730  .  .  .  .  .  .  .  .  .  }
  7731  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  7732  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:515:74
  7733  .  .  .  .  .  .  .  .  .  .  Name: "startKey"
  7734  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7631)
  7735  .  .  .  .  .  .  .  .  .  }
  7736  .  .  .  .  .  .  .  .  .  2: *ast.Ident {
  7737  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:515:84
  7738  .  .  .  .  .  .  .  .  .  .  Name: "endKey"
  7739  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7662)
  7740  .  .  .  .  .  .  .  .  .  }
  7741  .  .  .  .  .  .  .  .  }
  7742  .  .  .  .  .  .  .  .  Ellipsis: -
  7743  .  .  .  .  .  .  .  .  Rparen: source.go:515:90
  7744  .  .  .  .  .  .  .  }
  7745  .  .  .  .  .  .  }
  7746  .  .  .  .  .  }
  7747  .  .  .  .  .  4: *ast.IfStmt {
  7748  .  .  .  .  .  .  If: source.go:516:2
  7749  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  7750  .  .  .  .  .  .  .  X: *ast.Ident {
  7751  .  .  .  .  .  .  .  .  NamePos: source.go:516:5
  7752  .  .  .  .  .  .  .  .  Name: "err"
  7753  .  .  .  .  .  .  .  .  Obj: *(obj @ 7702)
  7754  .  .  .  .  .  .  .  }
  7755  .  .  .  .  .  .  .  OpPos: source.go:516:9
  7756  .  .  .  .  .  .  .  Op: !=
  7757  .  .  .  .  .  .  .  Y: *ast.Ident {
  7758  .  .  .  .  .  .  .  .  NamePos: source.go:516:12
  7759  .  .  .  .  .  .  .  .  Name: "nil"
  7760  .  .  .  .  .  .  .  }
  7761  .  .  .  .  .  .  }
  7762  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7763  .  .  .  .  .  .  .  Lbrace: source.go:516:16
  7764  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  7765  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  7766  .  .  .  .  .  .  .  .  .  Return: source.go:517:3
  7767  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7768  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7769  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7770  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7771  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:517:10
  7772  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7773  .  .  .  .  .  .  .  .  .  .  .  .  }
  7774  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7775  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:517:15
  7776  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7777  .  .  .  .  .  .  .  .  .  .  .  .  }
  7778  .  .  .  .  .  .  .  .  .  .  .  }
  7779  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:517:20
  7780  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7781  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7782  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:517:21
  7785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  7786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7702)
  7787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:517:25
  7790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7792  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7793  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:517:30
  7794  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7795  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:517:31
  7796  .  .  .  .  .  .  .  .  .  .  .  .  }
  7797  .  .  .  .  .  .  .  .  .  .  .  }
  7798  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7799  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:517:32
  7800  .  .  .  .  .  .  .  .  .  .  }
  7801  .  .  .  .  .  .  .  .  .  }
  7802  .  .  .  .  .  .  .  .  }
  7803  .  .  .  .  .  .  .  }
  7804  .  .  .  .  .  .  .  Rbrace: source.go:518:2
  7805  .  .  .  .  .  .  }
  7806  .  .  .  .  .  }
  7807  .  .  .  .  .  5: *ast.DeferStmt {
  7808  .  .  .  .  .  .  Defer: source.go:519:2
  7809  .  .  .  .  .  .  Call: *ast.CallExpr {
  7810  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7811  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7812  .  .  .  .  .  .  .  .  .  NamePos: source.go:519:8
  7813  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  7814  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7693)
  7815  .  .  .  .  .  .  .  .  }
  7816  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7817  .  .  .  .  .  .  .  .  .  NamePos: source.go:519:24
  7818  .  .  .  .  .  .  .  .  .  Name: "Close"
  7819  .  .  .  .  .  .  .  .  }
  7820  .  .  .  .  .  .  .  }
  7821  .  .  .  .  .  .  .  Lparen: source.go:519:29
  7822  .  .  .  .  .  .  .  Ellipsis: -
  7823  .  .  .  .  .  .  .  Rparen: source.go:519:30
  7824  .  .  .  .  .  .  }
  7825  .  .  .  .  .  }
  7826  .  .  .  .  .  6: *ast.DeclStmt {
  7827  .  .  .  .  .  .  Decl: *ast.GenDecl {
  7828  .  .  .  .  .  .  .  TokPos: source.go:522:2
  7829  .  .  .  .  .  .  .  Tok: var
  7830  .  .  .  .  .  .  .  Lparen: -
  7831  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  7832  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  7833  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  7834  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7835  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:522:6
  7836  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  7837  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7838  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  7839  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  7840  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7832)
  7841  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  7842  .  .  .  .  .  .  .  .  .  .  .  }
  7843  .  .  .  .  .  .  .  .  .  .  }
  7844  .  .  .  .  .  .  .  .  .  }
  7845  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  7846  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7847  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:522:13
  7848  .  .  .  .  .  .  .  .  .  .  .  Name: "bytes"
  7849  .  .  .  .  .  .  .  .  .  .  }
  7850  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7851  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:522:19
  7852  .  .  .  .  .  .  .  .  .  .  .  Name: "Buffer"
  7853  .  .  .  .  .  .  .  .  .  .  }
  7854  .  .  .  .  .  .  .  .  .  }
  7855  .  .  .  .  .  .  .  .  }
  7856  .  .  .  .  .  .  .  }
  7857  .  .  .  .  .  .  .  Rparen: -
  7858  .  .  .  .  .  .  }
  7859  .  .  .  .  .  }
  7860  .  .  .  .  .  7: *ast.ExprStmt {
  7861  .  .  .  .  .  .  X: *ast.CallExpr {
  7862  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7863  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7864  .  .  .  .  .  .  .  .  .  NamePos: source.go:523:2
  7865  .  .  .  .  .  .  .  .  .  Name: "buffer"
  7866  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7837)
  7867  .  .  .  .  .  .  .  .  }
  7868  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7869  .  .  .  .  .  .  .  .  .  NamePos: source.go:523:9
  7870  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  7871  .  .  .  .  .  .  .  .  }
  7872  .  .  .  .  .  .  .  }
  7873  .  .  .  .  .  .  .  Lparen: source.go:523:20
  7874  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  7875  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  7876  .  .  .  .  .  .  .  .  .  ValuePos: source.go:523:21
  7877  .  .  .  .  .  .  .  .  .  Kind: STRING
  7878  .  .  .  .  .  .  .  .  .  Value: "\"[\""
  7879  .  .  .  .  .  .  .  .  }
  7880  .  .  .  .  .  .  .  }
  7881  .  .  .  .  .  .  .  Ellipsis: -
  7882  .  .  .  .  .  .  .  Rparen: source.go:523:24
  7883  .  .  .  .  .  .  }
  7884  .  .  .  .  .  }
  7885  .  .  .  .  .  8: *ast.AssignStmt {
  7886  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  7887  .  .  .  .  .  .  .  0: *ast.Ident {
  7888  .  .  .  .  .  .  .  .  NamePos: source.go:525:2
  7889  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  7890  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7891  .  .  .  .  .  .  .  .  .  Kind: var
  7892  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  7893  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7885)
  7894  .  .  .  .  .  .  .  .  }
  7895  .  .  .  .  .  .  .  }
  7896  .  .  .  .  .  .  }
  7897  .  .  .  .  .  .  TokPos: source.go:525:29
  7898  .  .  .  .  .  .  Tok: :=
  7899  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7900  .  .  .  .  .  .  .  0: *ast.Ident {
  7901  .  .  .  .  .  .  .  .  NamePos: source.go:525:32
  7902  .  .  .  .  .  .  .  .  Name: "false"
  7903  .  .  .  .  .  .  .  }
  7904  .  .  .  .  .  .  }
  7905  .  .  .  .  .  }
  7906  .  .  .  .  .  9: *ast.ForStmt {
  7907  .  .  .  .  .  .  For: source.go:526:2
  7908  .  .  .  .  .  .  Cond: *ast.CallExpr {
  7909  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7910  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7911  .  .  .  .  .  .  .  .  .  NamePos: source.go:526:6
  7912  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  7913  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7693)
  7914  .  .  .  .  .  .  .  .  }
  7915  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7916  .  .  .  .  .  .  .  .  .  NamePos: source.go:526:22
  7917  .  .  .  .  .  .  .  .  .  Name: "HasNext"
  7918  .  .  .  .  .  .  .  .  }
  7919  .  .  .  .  .  .  .  }
  7920  .  .  .  .  .  .  .  Lparen: source.go:526:29
  7921  .  .  .  .  .  .  .  Ellipsis: -
  7922  .  .  .  .  .  .  .  Rparen: source.go:526:30
  7923  .  .  .  .  .  .  }
  7924  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7925  .  .  .  .  .  .  .  Lbrace: source.go:526:32
  7926  .  .  .  .  .  .  .  List: []ast.Stmt (len = 5) {
  7927  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  7928  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  7929  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  7930  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:527:3
  7931  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  7932  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7933  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  7934  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  7935  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7927)
  7936  .  .  .  .  .  .  .  .  .  .  .  }
  7937  .  .  .  .  .  .  .  .  .  .  }
  7938  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  7939  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:527:18
  7940  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  7941  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  7942  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  7943  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  7944  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 7927)
  7945  .  .  .  .  .  .  .  .  .  .  .  }
  7946  .  .  .  .  .  .  .  .  .  .  }
  7947  .  .  .  .  .  .  .  .  .  }
  7948  .  .  .  .  .  .  .  .  .  TokPos: source.go:527:22
  7949  .  .  .  .  .  .  .  .  .  Tok: :=
  7950  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  7951  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7952  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7953  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7954  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:527:25
  7955  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  7956  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7693)
  7957  .  .  .  .  .  .  .  .  .  .  .  .  }
  7958  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7959  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:527:41
  7960  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Next"
  7961  .  .  .  .  .  .  .  .  .  .  .  .  }
  7962  .  .  .  .  .  .  .  .  .  .  .  }
  7963  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:527:45
  7964  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  7965  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:527:46
  7966  .  .  .  .  .  .  .  .  .  .  }
  7967  .  .  .  .  .  .  .  .  .  }
  7968  .  .  .  .  .  .  .  .  }
  7969  .  .  .  .  .  .  .  .  1: *ast.IfStmt {
  7970  .  .  .  .  .  .  .  .  .  If: source.go:528:3
  7971  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  7972  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7973  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:528:6
  7974  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  7975  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7941)
  7976  .  .  .  .  .  .  .  .  .  .  }
  7977  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:528:10
  7978  .  .  .  .  .  .  .  .  .  .  Op: !=
  7979  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  7980  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:528:13
  7981  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  7982  .  .  .  .  .  .  .  .  .  .  }
  7983  .  .  .  .  .  .  .  .  .  }
  7984  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  7985  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:528:17
  7986  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  7987  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  7988  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:529:4
  7989  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  7990  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  7991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  7992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  7993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:529:11
  7994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  7995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  7996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  7997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:529:16
  7998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  7999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:529:21
  8002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:529:22
  8007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7941)
  8009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:529:26
  8012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  8013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:529:31
  8016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:529:32
  8018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:529:33
  8022  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8023  .  .  .  .  .  .  .  .  .  .  .  .  }
  8024  .  .  .  .  .  .  .  .  .  .  .  }
  8025  .  .  .  .  .  .  .  .  .  .  }
  8026  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:530:3
  8027  .  .  .  .  .  .  .  .  .  }
  8028  .  .  .  .  .  .  .  .  }
  8029  .  .  .  .  .  .  .  .  2: *ast.IfStmt {
  8030  .  .  .  .  .  .  .  .  .  If: source.go:532:3
  8031  .  .  .  .  .  .  .  .  .  Cond: *ast.Ident {
  8032  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:532:6
  8033  .  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  8034  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7890)
  8035  .  .  .  .  .  .  .  .  .  }
  8036  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8037  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:532:33
  8038  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  8039  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  8040  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8041  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:533:4
  8044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7837)
  8046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:533:11
  8049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  8050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8051  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8052  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:533:22
  8053  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:533:23
  8056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\",\""
  8058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8059  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8060  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8061  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:533:26
  8062  .  .  .  .  .  .  .  .  .  .  .  .  }
  8063  .  .  .  .  .  .  .  .  .  .  .  }
  8064  .  .  .  .  .  .  .  .  .  .  }
  8065  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:534:3
  8066  .  .  .  .  .  .  .  .  .  }
  8067  .  .  .  .  .  .  .  .  }
  8068  .  .  .  .  .  .  .  .  3: *ast.ExprStmt {
  8069  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8070  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8071  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8072  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:536:3
  8073  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8074  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7837)
  8075  .  .  .  .  .  .  .  .  .  .  .  }
  8076  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8077  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:536:10
  8078  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  8079  .  .  .  .  .  .  .  .  .  .  .  }
  8080  .  .  .  .  .  .  .  .  .  .  }
  8081  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:536:21
  8082  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8083  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8084  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8085  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:537:4
  8087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  8088  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8089  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:537:8
  8091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Sprintf"
  8092  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8093  .  .  .  .  .  .  .  .  .  .  .  .  }
  8094  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:537:15
  8095  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
  8096  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:538:5
  8098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "`{\"Key\":\"%s\", \"Record\":%s}`"
  8100  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8101  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  8102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:539:5
  8104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  8105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7932)
  8106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:539:19
  8109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  8110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8111  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8112  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {
  8113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:539:24
  8115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  8116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7932)
  8117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:539:38
  8120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
  8121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8122  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8123  .  .  .  .  .  .  .  .  .  .  .  .  }
  8124  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8125  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:540:4
  8126  .  .  .  .  .  .  .  .  .  .  .  }
  8127  .  .  .  .  .  .  .  .  .  .  }
  8128  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8129  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:541:3
  8130  .  .  .  .  .  .  .  .  .  }
  8131  .  .  .  .  .  .  .  .  }
  8132  .  .  .  .  .  .  .  .  4: *ast.AssignStmt {
  8133  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  8134  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8135  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:542:3
  8136  .  .  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  8137  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7890)
  8138  .  .  .  .  .  .  .  .  .  .  }
  8139  .  .  .  .  .  .  .  .  .  }
  8140  .  .  .  .  .  .  .  .  .  TokPos: source.go:542:30
  8141  .  .  .  .  .  .  .  .  .  Tok: =
  8142  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8143  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8144  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:542:32
  8145  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
  8146  .  .  .  .  .  .  .  .  .  .  }
  8147  .  .  .  .  .  .  .  .  .  }
  8148  .  .  .  .  .  .  .  .  }
  8149  .  .  .  .  .  .  .  }
  8150  .  .  .  .  .  .  .  Rbrace: source.go:543:2
  8151  .  .  .  .  .  .  }
  8152  .  .  .  .  .  }
  8153  .  .  .  .  .  10: *ast.ExprStmt {
  8154  .  .  .  .  .  .  X: *ast.CallExpr {
  8155  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8156  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8157  .  .  .  .  .  .  .  .  .  NamePos: source.go:544:2
  8158  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8159  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7837)
  8160  .  .  .  .  .  .  .  .  }
  8161  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8162  .  .  .  .  .  .  .  .  .  NamePos: source.go:544:9
  8163  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  8164  .  .  .  .  .  .  .  .  }
  8165  .  .  .  .  .  .  .  }
  8166  .  .  .  .  .  .  .  Lparen: source.go:544:20
  8167  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8168  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8169  .  .  .  .  .  .  .  .  .  ValuePos: source.go:544:21
  8170  .  .  .  .  .  .  .  .  .  Kind: STRING
  8171  .  .  .  .  .  .  .  .  .  Value: "\"]\""
  8172  .  .  .  .  .  .  .  .  }
  8173  .  .  .  .  .  .  .  }
  8174  .  .  .  .  .  .  .  Ellipsis: -
  8175  .  .  .  .  .  .  .  Rparen: source.go:544:24
  8176  .  .  .  .  .  .  }
  8177  .  .  .  .  .  }
  8178  .  .  .  .  .  11: *ast.ExprStmt {
  8179  .  .  .  .  .  .  X: *ast.CallExpr {
  8180  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8181  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8182  .  .  .  .  .  .  .  .  .  NamePos: source.go:546:2
  8183  .  .  .  .  .  .  .  .  .  Name: "fmt"
  8184  .  .  .  .  .  .  .  .  }
  8185  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8186  .  .  .  .  .  .  .  .  .  NamePos: source.go:546:6
  8187  .  .  .  .  .  .  .  .  .  Name: "Printf"
  8188  .  .  .  .  .  .  .  .  }
  8189  .  .  .  .  .  .  .  }
  8190  .  .  .  .  .  .  .  Lparen: source.go:546:12
  8191  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  8192  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8193  .  .  .  .  .  .  .  .  .  ValuePos: source.go:546:13
  8194  .  .  .  .  .  .  .  .  .  Kind: STRING
  8195  .  .  .  .  .  .  .  .  .  Value: "\"- getMarblesByRange queryResult:\\n%s\\n\""
  8196  .  .  .  .  .  .  .  .  }
  8197  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  8198  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8199  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8200  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:546:55
  8201  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8202  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7837)
  8203  .  .  .  .  .  .  .  .  .  .  }
  8204  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8205  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:546:62
  8206  .  .  .  .  .  .  .  .  .  .  .  Name: "String"
  8207  .  .  .  .  .  .  .  .  .  .  }
  8208  .  .  .  .  .  .  .  .  .  }
  8209  .  .  .  .  .  .  .  .  .  Lparen: source.go:546:68
  8210  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8211  .  .  .  .  .  .  .  .  .  Rparen: source.go:546:69
  8212  .  .  .  .  .  .  .  .  }
  8213  .  .  .  .  .  .  .  }
  8214  .  .  .  .  .  .  .  Ellipsis: -
  8215  .  .  .  .  .  .  .  Rparen: source.go:546:70
  8216  .  .  .  .  .  .  }
  8217  .  .  .  .  .  }
  8218  .  .  .  .  .  12: *ast.ReturnStmt {
  8219  .  .  .  .  .  .  Return: source.go:548:2
  8220  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  8221  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8222  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8223  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8224  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:548:9
  8225  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  8226  .  .  .  .  .  .  .  .  .  }
  8227  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8228  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:548:14
  8229  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  8230  .  .  .  .  .  .  .  .  .  }
  8231  .  .  .  .  .  .  .  .  }
  8232  .  .  .  .  .  .  .  .  Lparen: source.go:548:21
  8233  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8234  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8235  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8236  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8237  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:548:22
  8238  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8239  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 7837)
  8240  .  .  .  .  .  .  .  .  .  .  .  }
  8241  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8242  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:548:29
  8243  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Bytes"
  8244  .  .  .  .  .  .  .  .  .  .  .  }
  8245  .  .  .  .  .  .  .  .  .  .  }
  8246  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:548:34
  8247  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8248  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:548:35
  8249  .  .  .  .  .  .  .  .  .  }
  8250  .  .  .  .  .  .  .  .  }
  8251  .  .  .  .  .  .  .  .  Ellipsis: -
  8252  .  .  .  .  .  .  .  .  Rparen: source.go:548:36
  8253  .  .  .  .  .  .  .  }
  8254  .  .  .  .  .  .  }
  8255  .  .  .  .  .  }
  8256  .  .  .  .  }
  8257  .  .  .  .  Rbrace: source.go:549:1
  8258  .  .  .  }
  8259  .  .  }
  8260  .  .  13: *ast.FuncDecl {
  8261  .  .  .  Recv: *ast.FieldList {
  8262  .  .  .  .  Opening: source.go:570:6
  8263  .  .  .  .  List: []*ast.Field (len = 1) {
  8264  .  .  .  .  .  0: *ast.Field {
  8265  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  8266  .  .  .  .  .  .  .  0: *ast.Ident {
  8267  .  .  .  .  .  .  .  .  NamePos: source.go:570:7
  8268  .  .  .  .  .  .  .  .  Name: "t"
  8269  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8270  .  .  .  .  .  .  .  .  .  Kind: var
  8271  .  .  .  .  .  .  .  .  .  Name: "t"
  8272  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8264)
  8273  .  .  .  .  .  .  .  .  }
  8274  .  .  .  .  .  .  .  }
  8275  .  .  .  .  .  .  }
  8276  .  .  .  .  .  .  Type: *ast.StarExpr {
  8277  .  .  .  .  .  .  .  Star: source.go:570:9
  8278  .  .  .  .  .  .  .  X: *ast.Ident {
  8279  .  .  .  .  .  .  .  .  NamePos: source.go:570:10
  8280  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  8281  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  8282  .  .  .  .  .  .  .  }
  8283  .  .  .  .  .  .  }
  8284  .  .  .  .  .  }
  8285  .  .  .  .  }
  8286  .  .  .  .  Closing: source.go:570:25
  8287  .  .  .  }
  8288  .  .  .  Name: *ast.Ident {
  8289  .  .  .  .  NamePos: source.go:570:27
  8290  .  .  .  .  Name: "queryMarblesByOwner"
  8291  .  .  .  }
  8292  .  .  .  Type: *ast.FuncType {
  8293  .  .  .  .  Func: source.go:570:1
  8294  .  .  .  .  Params: *ast.FieldList {
  8295  .  .  .  .  .  Opening: source.go:570:46
  8296  .  .  .  .  .  List: []*ast.Field (len = 2) {
  8297  .  .  .  .  .  .  0: *ast.Field {
  8298  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  8299  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8300  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:47
  8301  .  .  .  .  .  .  .  .  .  Name: "stub"
  8302  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8303  .  .  .  .  .  .  .  .  .  .  Kind: var
  8304  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  8305  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8297)
  8306  .  .  .  .  .  .  .  .  .  }
  8307  .  .  .  .  .  .  .  .  }
  8308  .  .  .  .  .  .  .  }
  8309  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  8310  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8311  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:52
  8312  .  .  .  .  .  .  .  .  .  Name: "shim"
  8313  .  .  .  .  .  .  .  .  }
  8314  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8315  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:57
  8316  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  8317  .  .  .  .  .  .  .  .  }
  8318  .  .  .  .  .  .  .  }
  8319  .  .  .  .  .  .  }
  8320  .  .  .  .  .  .  1: *ast.Field {
  8321  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  8322  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8323  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:81
  8324  .  .  .  .  .  .  .  .  .  Name: "args"
  8325  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8326  .  .  .  .  .  .  .  .  .  .  Kind: var
  8327  .  .  .  .  .  .  .  .  .  .  Name: "args"
  8328  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8320)
  8329  .  .  .  .  .  .  .  .  .  }
  8330  .  .  .  .  .  .  .  .  }
  8331  .  .  .  .  .  .  .  }
  8332  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  8333  .  .  .  .  .  .  .  .  Lbrack: source.go:570:86
  8334  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  8335  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:88
  8336  .  .  .  .  .  .  .  .  .  Name: "string"
  8337  .  .  .  .  .  .  .  .  }
  8338  .  .  .  .  .  .  .  }
  8339  .  .  .  .  .  .  }
  8340  .  .  .  .  .  }
  8341  .  .  .  .  .  Closing: source.go:570:94
  8342  .  .  .  .  }
  8343  .  .  .  .  Results: *ast.FieldList {
  8344  .  .  .  .  .  Opening: -
  8345  .  .  .  .  .  List: []*ast.Field (len = 1) {
  8346  .  .  .  .  .  .  0: *ast.Field {
  8347  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  8348  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8349  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:96
  8350  .  .  .  .  .  .  .  .  .  Name: "pb"
  8351  .  .  .  .  .  .  .  .  }
  8352  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8353  .  .  .  .  .  .  .  .  .  NamePos: source.go:570:99
  8354  .  .  .  .  .  .  .  .  .  Name: "Response"
  8355  .  .  .  .  .  .  .  .  }
  8356  .  .  .  .  .  .  .  }
  8357  .  .  .  .  .  .  }
  8358  .  .  .  .  .  }
  8359  .  .  .  .  .  Closing: -
  8360  .  .  .  .  }
  8361  .  .  .  }
  8362  .  .  .  Body: *ast.BlockStmt {
  8363  .  .  .  .  Lbrace: source.go:570:108
  8364  .  .  .  .  List: []ast.Stmt (len = 6) {
  8365  .  .  .  .  .  0: *ast.IfStmt {
  8366  .  .  .  .  .  .  If: source.go:574:2
  8367  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  8368  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8369  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  8370  .  .  .  .  .  .  .  .  .  NamePos: source.go:574:5
  8371  .  .  .  .  .  .  .  .  .  Name: "len"
  8372  .  .  .  .  .  .  .  .  }
  8373  .  .  .  .  .  .  .  .  Lparen: source.go:574:8
  8374  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8375  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8376  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:574:9
  8377  .  .  .  .  .  .  .  .  .  .  Name: "args"
  8378  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8325)
  8379  .  .  .  .  .  .  .  .  .  }
  8380  .  .  .  .  .  .  .  .  }
  8381  .  .  .  .  .  .  .  .  Ellipsis: -
  8382  .  .  .  .  .  .  .  .  Rparen: source.go:574:13
  8383  .  .  .  .  .  .  .  }
  8384  .  .  .  .  .  .  .  OpPos: source.go:574:15
  8385  .  .  .  .  .  .  .  Op: <
  8386  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  8387  .  .  .  .  .  .  .  .  ValuePos: source.go:574:17
  8388  .  .  .  .  .  .  .  .  Kind: INT
  8389  .  .  .  .  .  .  .  .  Value: "1"
  8390  .  .  .  .  .  .  .  }
  8391  .  .  .  .  .  .  }
  8392  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8393  .  .  .  .  .  .  .  Lbrace: source.go:574:19
  8394  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  8395  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  8396  .  .  .  .  .  .  .  .  .  Return: source.go:575:3
  8397  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  8398  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8399  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8400  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8401  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:575:10
  8402  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  8403  .  .  .  .  .  .  .  .  .  .  .  .  }
  8404  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8405  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:575:15
  8406  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  8407  .  .  .  .  .  .  .  .  .  .  .  .  }
  8408  .  .  .  .  .  .  .  .  .  .  .  }
  8409  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:575:20
  8410  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8411  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8412  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:575:21
  8413  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8414  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting 1\""
  8415  .  .  .  .  .  .  .  .  .  .  .  .  }
  8416  .  .  .  .  .  .  .  .  .  .  .  }
  8417  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8418  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:575:65
  8419  .  .  .  .  .  .  .  .  .  .  }
  8420  .  .  .  .  .  .  .  .  .  }
  8421  .  .  .  .  .  .  .  .  }
  8422  .  .  .  .  .  .  .  }
  8423  .  .  .  .  .  .  .  Rbrace: source.go:576:2
  8424  .  .  .  .  .  .  }
  8425  .  .  .  .  .  }
  8426  .  .  .  .  .  1: *ast.AssignStmt {
  8427  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  8428  .  .  .  .  .  .  .  0: *ast.Ident {
  8429  .  .  .  .  .  .  .  .  NamePos: source.go:578:2
  8430  .  .  .  .  .  .  .  .  Name: "owner"
  8431  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8432  .  .  .  .  .  .  .  .  .  Kind: var
  8433  .  .  .  .  .  .  .  .  .  Name: "owner"
  8434  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8426)
  8435  .  .  .  .  .  .  .  .  }
  8436  .  .  .  .  .  .  .  }
  8437  .  .  .  .  .  .  }
  8438  .  .  .  .  .  .  TokPos: source.go:578:8
  8439  .  .  .  .  .  .  Tok: :=
  8440  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8441  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8442  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8443  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8444  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:578:11
  8445  .  .  .  .  .  .  .  .  .  .  Name: "strings"
  8446  .  .  .  .  .  .  .  .  .  }
  8447  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8448  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:578:19
  8449  .  .  .  .  .  .  .  .  .  .  Name: "ToLower"
  8450  .  .  .  .  .  .  .  .  .  }
  8451  .  .  .  .  .  .  .  .  }
  8452  .  .  .  .  .  .  .  .  Lparen: source.go:578:26
  8453  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8454  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  8455  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8456  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:578:27
  8457  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
  8458  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8325)
  8459  .  .  .  .  .  .  .  .  .  .  }
  8460  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:578:31
  8461  .  .  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  8462  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:578:32
  8463  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
  8464  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
  8465  .  .  .  .  .  .  .  .  .  .  }
  8466  .  .  .  .  .  .  .  .  .  .  Rbrack: source.go:578:33
  8467  .  .  .  .  .  .  .  .  .  }
  8468  .  .  .  .  .  .  .  .  }
  8469  .  .  .  .  .  .  .  .  Ellipsis: -
  8470  .  .  .  .  .  .  .  .  Rparen: source.go:578:34
  8471  .  .  .  .  .  .  .  }
  8472  .  .  .  .  .  .  }
  8473  .  .  .  .  .  }
  8474  .  .  .  .  .  2: *ast.AssignStmt {
  8475  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  8476  .  .  .  .  .  .  .  0: *ast.Ident {
  8477  .  .  .  .  .  .  .  .  NamePos: source.go:580:2
  8478  .  .  .  .  .  .  .  .  Name: "queryString"
  8479  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8480  .  .  .  .  .  .  .  .  .  Kind: var
  8481  .  .  .  .  .  .  .  .  .  Name: "queryString"
  8482  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8474)
  8483  .  .  .  .  .  .  .  .  }
  8484  .  .  .  .  .  .  .  }
  8485  .  .  .  .  .  .  }
  8486  .  .  .  .  .  .  TokPos: source.go:580:14
  8487  .  .  .  .  .  .  Tok: :=
  8488  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8489  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8490  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8491  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8492  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:580:17
  8493  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  8494  .  .  .  .  .  .  .  .  .  }
  8495  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8496  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:580:21
  8497  .  .  .  .  .  .  .  .  .  .  Name: "Sprintf"
  8498  .  .  .  .  .  .  .  .  .  }
  8499  .  .  .  .  .  .  .  .  }
  8500  .  .  .  .  .  .  .  .  Lparen: source.go:580:28
  8501  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  8502  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8503  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:580:29
  8504  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8505  .  .  .  .  .  .  .  .  .  .  Value: "\"{\\\"selector\\\":{\\\"docType\\\":\\\"marble\\\",\\\"owner\\\":\\\"%s\\\"}}\""
  8506  .  .  .  .  .  .  .  .  .  }
  8507  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8508  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:580:89
  8509  .  .  .  .  .  .  .  .  .  .  Name: "owner"
  8510  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8431)
  8511  .  .  .  .  .  .  .  .  .  }
  8512  .  .  .  .  .  .  .  .  }
  8513  .  .  .  .  .  .  .  .  Ellipsis: -
  8514  .  .  .  .  .  .  .  .  Rparen: source.go:580:94
  8515  .  .  .  .  .  .  .  }
  8516  .  .  .  .  .  .  }
  8517  .  .  .  .  .  }
  8518  .  .  .  .  .  3: *ast.AssignStmt {
  8519  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  8520  .  .  .  .  .  .  .  0: *ast.Ident {
  8521  .  .  .  .  .  .  .  .  NamePos: source.go:582:2
  8522  .  .  .  .  .  .  .  .  Name: "queryResults"
  8523  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8524  .  .  .  .  .  .  .  .  .  Kind: var
  8525  .  .  .  .  .  .  .  .  .  Name: "queryResults"
  8526  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8518)
  8527  .  .  .  .  .  .  .  .  }
  8528  .  .  .  .  .  .  .  }
  8529  .  .  .  .  .  .  .  1: *ast.Ident {
  8530  .  .  .  .  .  .  .  .  NamePos: source.go:582:16
  8531  .  .  .  .  .  .  .  .  Name: "err"
  8532  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8533  .  .  .  .  .  .  .  .  .  Kind: var
  8534  .  .  .  .  .  .  .  .  .  Name: "err"
  8535  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8518)
  8536  .  .  .  .  .  .  .  .  }
  8537  .  .  .  .  .  .  .  }
  8538  .  .  .  .  .  .  }
  8539  .  .  .  .  .  .  TokPos: source.go:582:20
  8540  .  .  .  .  .  .  Tok: :=
  8541  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8542  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8543  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  8544  .  .  .  .  .  .  .  .  .  NamePos: source.go:582:23
  8545  .  .  .  .  .  .  .  .  .  Name: "getQueryResultForQueryString"
  8546  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8547  .  .  .  .  .  .  .  .  .  .  Kind: func
  8548  .  .  .  .  .  .  .  .  .  .  Name: "getQueryResultForQueryString"
  8549  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
  8550  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
  8551  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:6
  8552  .  .  .  .  .  .  .  .  .  .  .  .  Name: "getQueryResultForQueryString"
  8553  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8546)
  8554  .  .  .  .  .  .  .  .  .  .  .  }
  8555  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
  8556  .  .  .  .  .  .  .  .  .  .  .  .  Func: source.go:617:1
  8557  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
  8558  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:617:34
  8559  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
  8560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  8561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  8562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:35
  8564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  8565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  8568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8560)
  8569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8572  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  8573  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8574  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:40
  8575  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  8576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:45
  8579  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  8580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8583  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
  8584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  8585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:69
  8587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryString"
  8588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryString"
  8591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8583)
  8592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  8596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:81
  8597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  8598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8600  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8601  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:617:87
  8602  .  .  .  .  .  .  .  .  .  .  .  .  }
  8603  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
  8604  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: source.go:617:89
  8605  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
  8606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  8607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  8608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: source.go:617:90
  8609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  8610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:92
  8611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "byte"
  8612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
  8616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  8617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:617:98
  8618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "error"
  8619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8621  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8622  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: source.go:617:103
  8623  .  .  .  .  .  .  .  .  .  .  .  .  }
  8624  .  .  .  .  .  .  .  .  .  .  .  }
  8625  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8626  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:617:105
  8627  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 11) {
  8628  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  8629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8632  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:619:2
  8633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  8634  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:619:6
  8637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
  8638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:619:12
  8641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  8642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:619:13
  8644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"- getQueryResultForQueryString queryString:\\n%s\\n\""
  8646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:619:66
  8649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryString"
  8650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8588)
  8651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:619:77
  8655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8656  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8657  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.AssignStmt {
  8658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  8659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:621:2
  8661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  8662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  8665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8657)
  8666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:621:19
  8670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8657)
  8675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:621:23
  8679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
  8680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:621:26
  8685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  8686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8565)
  8687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:621:31
  8690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateDataQueryResult"
  8691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:621:56
  8694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  8695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:621:57
  8697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"collectionMarbles\""
  8699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:621:78
  8702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryString"
  8703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8588)
  8704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:621:89
  8708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8710  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8711  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {
  8712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: source.go:622:2
  8713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  8714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:622:5
  8716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8671)
  8718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:622:9
  8720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  8721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  8722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:622:12
  8723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  8724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:622:16
  8728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  8729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  8730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:623:3
  8731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
  8732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:623:10
  8734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  8735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:623:15
  8738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8671)
  8740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:624:2
  8745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8746  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8747  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.DeferStmt {
  8748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Defer: source.go:625:2
  8749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Call: *ast.CallExpr {
  8750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:625:8
  8753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  8754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8662)
  8755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:625:24
  8758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Close"
  8759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:625:29
  8762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:625:30
  8764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8765  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8766  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.DeclStmt {
  8767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *ast.GenDecl {
  8768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:628:2
  8769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: var
  8770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: -
  8771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  8772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  8773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  8774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:628:6
  8776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8772)
  8781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  8782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  8786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:628:13
  8788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bytes"
  8789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:628:19
  8792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Buffer"
  8793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: -
  8798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8799  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8800  .  .  .  .  .  .  .  .  .  .  .  .  .  5: *ast.ExprStmt {
  8801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:629:2
  8805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  8807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:629:9
  8810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  8811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:629:20
  8814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:629:21
  8817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"[\""
  8819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:629:24
  8823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8824  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8825  .  .  .  .  .  .  .  .  .  .  .  .  .  6: *ast.AssignStmt {
  8826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  8827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:631:2
  8829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  8830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  8833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8825)
  8834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:631:29
  8838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
  8839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:631:32
  8842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "false"
  8843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8845  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8846  .  .  .  .  .  .  .  .  .  .  .  .  .  7: *ast.ForStmt {
  8847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  For: source.go:632:2
  8848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.CallExpr {
  8849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:632:6
  8852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  8853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8662)
  8854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:632:22
  8857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "HasNext"
  8858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:632:29
  8861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:632:30
  8863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:632:32
  8866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 11) {
  8867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  8868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  8869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:633:3
  8871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  8872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  8875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8867)
  8876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8879  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:633:18
  8880  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8881  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  8882  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  8883  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8884  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 8867)
  8885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:633:22
  8889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
  8890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  8891  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  8892  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8893  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8894  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:633:25
  8895  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "resultsIterator"
  8896  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8662)
  8897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:633:41
  8900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Next"
  8901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8903  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:633:45
  8904  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:633:46
  8906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8909  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {
  8910  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: source.go:634:3
  8911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  8912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:634:6
  8914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8915  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8881)
  8916  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8917  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:634:10
  8918  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  8919  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  8920  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:634:13
  8921  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  8922  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8923  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8924  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8925  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:634:17
  8926  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  8927  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  8928  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:635:4
  8929  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
  8930  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  8931  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:635:11
  8932  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  8933  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8934  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  8935  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:635:16
  8936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  8937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8881)
  8938  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8939  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8940  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:636:3
  8943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {
  8946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: source.go:638:3
  8947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  8948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:638:6
  8950  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  8951  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8830)
  8952  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:638:33
  8954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==
  8955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  8956  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:638:36
  8957  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
  8958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
  8961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: source.go:638:41
  8962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  8963  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
  8964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:639:4
  8968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  8970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  8972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:639:11
  8973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  8974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8975  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8976  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:639:22
  8977  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  8978  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  8979  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:639:23
  8980  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  8981  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\",\""
  8982  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8983  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  8985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:639:26
  8986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:640:3
  8990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  8992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.ExprStmt {
  8993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  8994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  8995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  8996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:641:3
  8997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  8998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  8999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:641:10
  9002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:641:21
  9006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:641:22
  9009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"{\\\"Key\\\":\""
  9011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:641:33
  9015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.ExprStmt {
  9018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:642:3
  9022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:642:10
  9027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9029  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9030  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:642:21
  9031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:642:22
  9034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\\"\""
  9036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:642:26
  9040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  5: *ast.ExprStmt {
  9043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:643:3
  9047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:643:10
  9052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:643:21
  9056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  9058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:643:22
  9060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  9061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8872)
  9062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:643:36
  9065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Key"
  9066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:643:39
  9071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9073  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  6: *ast.ExprStmt {
  9074  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9075  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9076  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9077  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:644:3
  9078  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9080  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9081  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9082  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:644:10
  9083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:644:21
  9087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9088  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9089  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:644:22
  9090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\\\"\""
  9092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:644:26
  9096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  7: *ast.ExprStmt {
  9099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:646:3
  9103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:646:10
  9108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:646:21
  9112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:646:22
  9115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\", \\\"Record\\\":\""
  9117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:646:37
  9121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  8: *ast.ExprStmt {
  9124  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:648:3
  9128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:648:10
  9133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:648:21
  9137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  9140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:648:22
  9141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
  9142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:648:28
  9144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  9146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:648:29
  9148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "queryResponse"
  9149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8872)
  9150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:648:43
  9153  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Value"
  9154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9157  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9158  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:648:48
  9159  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9160  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9161  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:648:49
  9163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9165  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  9: *ast.ExprStmt {
  9166  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9169  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:649:3
  9170  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9172  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9173  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:649:10
  9175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:649:21
  9179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:649:22
  9182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"}\""
  9184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:649:25
  9188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  10: *ast.AssignStmt {
  9191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  9192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:650:3
  9194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bArrayMemberAlreadyWritten"
  9195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8830)
  9196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: source.go:650:30
  9199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
  9200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  9201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:650:32
  9203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "true"
  9204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:651:2
  9209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9210  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9211  .  .  .  .  .  .  .  .  .  .  .  .  .  8: *ast.ExprStmt {
  9212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9215  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:652:2
  9216  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9217  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9218  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9219  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9220  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:652:9
  9221  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "WriteString"
  9222  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9223  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9224  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:652:20
  9225  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:652:21
  9228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"]\""
  9230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9231  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9232  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:652:24
  9234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9235  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9236  .  .  .  .  .  .  .  .  .  .  .  .  .  9: *ast.ExprStmt {
  9237  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9238  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9239  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9240  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:654:2
  9241  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  9242  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:654:6
  9245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Printf"
  9246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:654:12
  9249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  9250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:654:13
  9252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"- getQueryResultForQueryString queryResult:\\n%s\\n\""
  9254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  9256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:654:66
  9259  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9260  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9263  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:654:73
  9264  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "String"
  9265  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9266  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9267  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:654:79
  9268  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9269  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:654:80
  9270  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9271  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9272  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9273  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:654:81
  9274  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9275  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9276  .  .  .  .  .  .  .  .  .  .  .  .  .  10: *ast.ReturnStmt {
  9277  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: source.go:656:2
  9278  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
  9279  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9280  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9281  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9282  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:656:9
  9283  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "buffer"
  9284  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8777)
  9285  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9286  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:656:16
  9288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Bytes"
  9289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9290  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:656:21
  9292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:656:22
  9294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  9296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:656:25
  9297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  9298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9300  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9301  .  .  .  .  .  .  .  .  .  .  .  .  }
  9302  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: source.go:657:1
  9303  .  .  .  .  .  .  .  .  .  .  .  }
  9304  .  .  .  .  .  .  .  .  .  .  }
  9305  .  .  .  .  .  .  .  .  .  }
  9306  .  .  .  .  .  .  .  .  }
  9307  .  .  .  .  .  .  .  .  Lparen: source.go:582:51
  9308  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  9309  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9310  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:582:52
  9311  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  9312  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8302)
  9313  .  .  .  .  .  .  .  .  .  }
  9314  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  9315  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:582:58
  9316  .  .  .  .  .  .  .  .  .  .  Name: "queryString"
  9317  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8479)
  9318  .  .  .  .  .  .  .  .  .  }
  9319  .  .  .  .  .  .  .  .  }
  9320  .  .  .  .  .  .  .  .  Ellipsis: -
  9321  .  .  .  .  .  .  .  .  Rparen: source.go:582:69
  9322  .  .  .  .  .  .  .  }
  9323  .  .  .  .  .  .  }
  9324  .  .  .  .  .  }
  9325  .  .  .  .  .  4: *ast.IfStmt {
  9326  .  .  .  .  .  .  If: source.go:583:2
  9327  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  9328  .  .  .  .  .  .  .  X: *ast.Ident {
  9329  .  .  .  .  .  .  .  .  NamePos: source.go:583:5
  9330  .  .  .  .  .  .  .  .  Name: "err"
  9331  .  .  .  .  .  .  .  .  Obj: *(obj @ 8532)
  9332  .  .  .  .  .  .  .  }
  9333  .  .  .  .  .  .  .  OpPos: source.go:583:9
  9334  .  .  .  .  .  .  .  Op: !=
  9335  .  .  .  .  .  .  .  Y: *ast.Ident {
  9336  .  .  .  .  .  .  .  .  NamePos: source.go:583:12
  9337  .  .  .  .  .  .  .  .  Name: "nil"
  9338  .  .  .  .  .  .  .  }
  9339  .  .  .  .  .  .  }
  9340  .  .  .  .  .  .  Body: *ast.BlockStmt {
  9341  .  .  .  .  .  .  .  Lbrace: source.go:583:16
  9342  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  9343  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  9344  .  .  .  .  .  .  .  .  .  Return: source.go:584:3
  9345  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  9346  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9347  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9348  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9349  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:584:10
  9350  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  9351  .  .  .  .  .  .  .  .  .  .  .  .  }
  9352  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9353  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:584:15
  9354  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  9355  .  .  .  .  .  .  .  .  .  .  .  .  }
  9356  .  .  .  .  .  .  .  .  .  .  .  }
  9357  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:584:20
  9358  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9359  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9360  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9361  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9362  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:584:21
  9363  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  9364  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8532)
  9365  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9366  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9367  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:584:25
  9368  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  9369  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9370  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9371  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:584:30
  9372  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9373  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:584:31
  9374  .  .  .  .  .  .  .  .  .  .  .  .  }
  9375  .  .  .  .  .  .  .  .  .  .  .  }
  9376  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9377  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:584:32
  9378  .  .  .  .  .  .  .  .  .  .  }
  9379  .  .  .  .  .  .  .  .  .  }
  9380  .  .  .  .  .  .  .  .  }
  9381  .  .  .  .  .  .  .  }
  9382  .  .  .  .  .  .  .  Rbrace: source.go:585:2
  9383  .  .  .  .  .  .  }
  9384  .  .  .  .  .  }
  9385  .  .  .  .  .  5: *ast.ReturnStmt {
  9386  .  .  .  .  .  .  Return: source.go:586:2
  9387  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  9388  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9389  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9390  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9391  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:586:9
  9392  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  9393  .  .  .  .  .  .  .  .  .  }
  9394  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9395  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:586:14
  9396  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  9397  .  .  .  .  .  .  .  .  .  }
  9398  .  .  .  .  .  .  .  .  }
  9399  .  .  .  .  .  .  .  .  Lparen: source.go:586:21
  9400  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9401  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9402  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:586:22
  9403  .  .  .  .  .  .  .  .  .  .  Name: "queryResults"
  9404  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8523)
  9405  .  .  .  .  .  .  .  .  .  }
  9406  .  .  .  .  .  .  .  .  }
  9407  .  .  .  .  .  .  .  .  Ellipsis: -
  9408  .  .  .  .  .  .  .  .  Rparen: source.go:586:34
  9409  .  .  .  .  .  .  .  }
  9410  .  .  .  .  .  .  }
  9411  .  .  .  .  .  }
  9412  .  .  .  .  }
  9413  .  .  .  .  Rbrace: source.go:587:1
  9414  .  .  .  }
  9415  .  .  }
  9416  .  .  14: *ast.FuncDecl {
  9417  .  .  .  Recv: *ast.FieldList {
  9418  .  .  .  .  Opening: source.go:596:6
  9419  .  .  .  .  List: []*ast.Field (len = 1) {
  9420  .  .  .  .  .  0: *ast.Field {
  9421  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9422  .  .  .  .  .  .  .  0: *ast.Ident {
  9423  .  .  .  .  .  .  .  .  NamePos: source.go:596:7
  9424  .  .  .  .  .  .  .  .  Name: "t"
  9425  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9426  .  .  .  .  .  .  .  .  .  Kind: var
  9427  .  .  .  .  .  .  .  .  .  Name: "t"
  9428  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9420)
  9429  .  .  .  .  .  .  .  .  }
  9430  .  .  .  .  .  .  .  }
  9431  .  .  .  .  .  .  }
  9432  .  .  .  .  .  .  Type: *ast.StarExpr {
  9433  .  .  .  .  .  .  .  Star: source.go:596:9
  9434  .  .  .  .  .  .  .  X: *ast.Ident {
  9435  .  .  .  .  .  .  .  .  NamePos: source.go:596:10
  9436  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  9437  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  9438  .  .  .  .  .  .  .  }
  9439  .  .  .  .  .  .  }
  9440  .  .  .  .  .  }
  9441  .  .  .  .  }
  9442  .  .  .  .  Closing: source.go:596:25
  9443  .  .  .  }
  9444  .  .  .  Name: *ast.Ident {
  9445  .  .  .  .  NamePos: source.go:596:27
  9446  .  .  .  .  Name: "queryMarbles"
  9447  .  .  .  }
  9448  .  .  .  Type: *ast.FuncType {
  9449  .  .  .  .  Func: source.go:596:1
  9450  .  .  .  .  Params: *ast.FieldList {
  9451  .  .  .  .  .  Opening: source.go:596:39
  9452  .  .  .  .  .  List: []*ast.Field (len = 2) {
  9453  .  .  .  .  .  .  0: *ast.Field {
  9454  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9455  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9456  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:40
  9457  .  .  .  .  .  .  .  .  .  Name: "stub"
  9458  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9459  .  .  .  .  .  .  .  .  .  .  Kind: var
  9460  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  9461  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9453)
  9462  .  .  .  .  .  .  .  .  .  }
  9463  .  .  .  .  .  .  .  .  }
  9464  .  .  .  .  .  .  .  }
  9465  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  9466  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9467  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:45
  9468  .  .  .  .  .  .  .  .  .  Name: "shim"
  9469  .  .  .  .  .  .  .  .  }
  9470  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9471  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:50
  9472  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  9473  .  .  .  .  .  .  .  .  }
  9474  .  .  .  .  .  .  .  }
  9475  .  .  .  .  .  .  }
  9476  .  .  .  .  .  .  1: *ast.Field {
  9477  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9478  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9479  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:74
  9480  .  .  .  .  .  .  .  .  .  Name: "args"
  9481  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9482  .  .  .  .  .  .  .  .  .  .  Kind: var
  9483  .  .  .  .  .  .  .  .  .  .  Name: "args"
  9484  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9476)
  9485  .  .  .  .  .  .  .  .  .  }
  9486  .  .  .  .  .  .  .  .  }
  9487  .  .  .  .  .  .  .  }
  9488  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  9489  .  .  .  .  .  .  .  .  Lbrack: source.go:596:79
  9490  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  9491  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:81
  9492  .  .  .  .  .  .  .  .  .  Name: "string"
  9493  .  .  .  .  .  .  .  .  }
  9494  .  .  .  .  .  .  .  }
  9495  .  .  .  .  .  .  }
  9496  .  .  .  .  .  }
  9497  .  .  .  .  .  Closing: source.go:596:87
  9498  .  .  .  .  }
  9499  .  .  .  .  Results: *ast.FieldList {
  9500  .  .  .  .  .  Opening: -
  9501  .  .  .  .  .  List: []*ast.Field (len = 1) {
  9502  .  .  .  .  .  .  0: *ast.Field {
  9503  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  9504  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9505  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:89
  9506  .  .  .  .  .  .  .  .  .  Name: "pb"
  9507  .  .  .  .  .  .  .  .  }
  9508  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9509  .  .  .  .  .  .  .  .  .  NamePos: source.go:596:92
  9510  .  .  .  .  .  .  .  .  .  Name: "Response"
  9511  .  .  .  .  .  .  .  .  }
  9512  .  .  .  .  .  .  .  }
  9513  .  .  .  .  .  .  }
  9514  .  .  .  .  .  }
  9515  .  .  .  .  .  Closing: -
  9516  .  .  .  .  }
  9517  .  .  .  }
  9518  .  .  .  Body: *ast.BlockStmt {
  9519  .  .  .  .  Lbrace: source.go:596:101
  9520  .  .  .  .  List: []ast.Stmt (len = 5) {
  9521  .  .  .  .  .  0: *ast.IfStmt {
  9522  .  .  .  .  .  .  If: source.go:600:2
  9523  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  9524  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9525  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  9526  .  .  .  .  .  .  .  .  .  NamePos: source.go:600:5
  9527  .  .  .  .  .  .  .  .  .  Name: "len"
  9528  .  .  .  .  .  .  .  .  }
  9529  .  .  .  .  .  .  .  .  Lparen: source.go:600:8
  9530  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9531  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9532  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:600:9
  9533  .  .  .  .  .  .  .  .  .  .  Name: "args"
  9534  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9481)
  9535  .  .  .  .  .  .  .  .  .  }
  9536  .  .  .  .  .  .  .  .  }
  9537  .  .  .  .  .  .  .  .  Ellipsis: -
  9538  .  .  .  .  .  .  .  .  Rparen: source.go:600:13
  9539  .  .  .  .  .  .  .  }
  9540  .  .  .  .  .  .  .  OpPos: source.go:600:15
  9541  .  .  .  .  .  .  .  Op: <
  9542  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  9543  .  .  .  .  .  .  .  .  ValuePos: source.go:600:17
  9544  .  .  .  .  .  .  .  .  Kind: INT
  9545  .  .  .  .  .  .  .  .  Value: "1"
  9546  .  .  .  .  .  .  .  }
  9547  .  .  .  .  .  .  }
  9548  .  .  .  .  .  .  Body: *ast.BlockStmt {
  9549  .  .  .  .  .  .  .  Lbrace: source.go:600:19
  9550  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  9551  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  9552  .  .  .  .  .  .  .  .  .  Return: source.go:601:3
  9553  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  9554  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9555  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9556  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9557  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:601:10
  9558  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  9559  .  .  .  .  .  .  .  .  .  .  .  .  }
  9560  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9561  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:601:15
  9562  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  9563  .  .  .  .  .  .  .  .  .  .  .  .  }
  9564  .  .  .  .  .  .  .  .  .  .  .  }
  9565  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:601:20
  9566  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9567  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9568  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:601:21
  9569  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9570  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting 1\""
  9571  .  .  .  .  .  .  .  .  .  .  .  .  }
  9572  .  .  .  .  .  .  .  .  .  .  .  }
  9573  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9574  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:601:65
  9575  .  .  .  .  .  .  .  .  .  .  }
  9576  .  .  .  .  .  .  .  .  .  }
  9577  .  .  .  .  .  .  .  .  }
  9578  .  .  .  .  .  .  .  }
  9579  .  .  .  .  .  .  .  Rbrace: source.go:602:2
  9580  .  .  .  .  .  .  }
  9581  .  .  .  .  .  }
  9582  .  .  .  .  .  1: *ast.AssignStmt {
  9583  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  9584  .  .  .  .  .  .  .  0: *ast.Ident {
  9585  .  .  .  .  .  .  .  .  NamePos: source.go:604:2
  9586  .  .  .  .  .  .  .  .  Name: "queryString"
  9587  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9588  .  .  .  .  .  .  .  .  .  Kind: var
  9589  .  .  .  .  .  .  .  .  .  Name: "queryString"
  9590  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9582)
  9591  .  .  .  .  .  .  .  .  }
  9592  .  .  .  .  .  .  .  }
  9593  .  .  .  .  .  .  }
  9594  .  .  .  .  .  .  TokPos: source.go:604:14
  9595  .  .  .  .  .  .  Tok: :=
  9596  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  9597  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  9598  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9599  .  .  .  .  .  .  .  .  .  NamePos: source.go:604:17
  9600  .  .  .  .  .  .  .  .  .  Name: "args"
  9601  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9481)
  9602  .  .  .  .  .  .  .  .  }
  9603  .  .  .  .  .  .  .  .  Lbrack: source.go:604:21
  9604  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
  9605  .  .  .  .  .  .  .  .  .  ValuePos: source.go:604:22
  9606  .  .  .  .  .  .  .  .  .  Kind: INT
  9607  .  .  .  .  .  .  .  .  .  Value: "0"
  9608  .  .  .  .  .  .  .  .  }
  9609  .  .  .  .  .  .  .  .  Rbrack: source.go:604:23
  9610  .  .  .  .  .  .  .  }
  9611  .  .  .  .  .  .  }
  9612  .  .  .  .  .  }
  9613  .  .  .  .  .  2: *ast.AssignStmt {
  9614  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
  9615  .  .  .  .  .  .  .  0: *ast.Ident {
  9616  .  .  .  .  .  .  .  .  NamePos: source.go:606:2
  9617  .  .  .  .  .  .  .  .  Name: "queryResults"
  9618  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9619  .  .  .  .  .  .  .  .  .  Kind: var
  9620  .  .  .  .  .  .  .  .  .  Name: "queryResults"
  9621  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9613)
  9622  .  .  .  .  .  .  .  .  }
  9623  .  .  .  .  .  .  .  }
  9624  .  .  .  .  .  .  .  1: *ast.Ident {
  9625  .  .  .  .  .  .  .  .  NamePos: source.go:606:16
  9626  .  .  .  .  .  .  .  .  Name: "err"
  9627  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9628  .  .  .  .  .  .  .  .  .  Kind: var
  9629  .  .  .  .  .  .  .  .  .  Name: "err"
  9630  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9613)
  9631  .  .  .  .  .  .  .  .  }
  9632  .  .  .  .  .  .  .  }
  9633  .  .  .  .  .  .  }
  9634  .  .  .  .  .  .  TokPos: source.go:606:20
  9635  .  .  .  .  .  .  Tok: :=
  9636  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  9637  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9638  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  9639  .  .  .  .  .  .  .  .  .  NamePos: source.go:606:23
  9640  .  .  .  .  .  .  .  .  .  Name: "getQueryResultForQueryString"
  9641  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 8546)
  9642  .  .  .  .  .  .  .  .  }
  9643  .  .  .  .  .  .  .  .  Lparen: source.go:606:51
  9644  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  9645  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9646  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:606:52
  9647  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  9648  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9458)
  9649  .  .  .  .  .  .  .  .  .  }
  9650  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  9651  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:606:58
  9652  .  .  .  .  .  .  .  .  .  .  Name: "queryString"
  9653  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9587)
  9654  .  .  .  .  .  .  .  .  .  }
  9655  .  .  .  .  .  .  .  .  }
  9656  .  .  .  .  .  .  .  .  Ellipsis: -
  9657  .  .  .  .  .  .  .  .  Rparen: source.go:606:69
  9658  .  .  .  .  .  .  .  }
  9659  .  .  .  .  .  .  }
  9660  .  .  .  .  .  }
  9661  .  .  .  .  .  3: *ast.IfStmt {
  9662  .  .  .  .  .  .  If: source.go:607:2
  9663  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  9664  .  .  .  .  .  .  .  X: *ast.Ident {
  9665  .  .  .  .  .  .  .  .  NamePos: source.go:607:5
  9666  .  .  .  .  .  .  .  .  Name: "err"
  9667  .  .  .  .  .  .  .  .  Obj: *(obj @ 9627)
  9668  .  .  .  .  .  .  .  }
  9669  .  .  .  .  .  .  .  OpPos: source.go:607:9
  9670  .  .  .  .  .  .  .  Op: !=
  9671  .  .  .  .  .  .  .  Y: *ast.Ident {
  9672  .  .  .  .  .  .  .  .  NamePos: source.go:607:12
  9673  .  .  .  .  .  .  .  .  Name: "nil"
  9674  .  .  .  .  .  .  .  }
  9675  .  .  .  .  .  .  }
  9676  .  .  .  .  .  .  Body: *ast.BlockStmt {
  9677  .  .  .  .  .  .  .  Lbrace: source.go:607:16
  9678  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  9679  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  9680  .  .  .  .  .  .  .  .  .  Return: source.go:608:3
  9681  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  9682  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9683  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9684  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9685  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:608:10
  9686  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  9687  .  .  .  .  .  .  .  .  .  .  .  .  }
  9688  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9689  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:608:15
  9690  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  9691  .  .  .  .  .  .  .  .  .  .  .  .  }
  9692  .  .  .  .  .  .  .  .  .  .  .  }
  9693  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:608:20
  9694  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9695  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9696  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:608:21
  9699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  9700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9627)
  9701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:608:25
  9704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  9705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9706  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  9707  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:608:30
  9708  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9709  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:608:31
  9710  .  .  .  .  .  .  .  .  .  .  .  .  }
  9711  .  .  .  .  .  .  .  .  .  .  .  }
  9712  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9713  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:608:32
  9714  .  .  .  .  .  .  .  .  .  .  }
  9715  .  .  .  .  .  .  .  .  .  }
  9716  .  .  .  .  .  .  .  .  }
  9717  .  .  .  .  .  .  .  }
  9718  .  .  .  .  .  .  .  Rbrace: source.go:609:2
  9719  .  .  .  .  .  .  }
  9720  .  .  .  .  .  }
  9721  .  .  .  .  .  4: *ast.ReturnStmt {
  9722  .  .  .  .  .  .  Return: source.go:610:2
  9723  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  9724  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9725  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9726  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9727  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:610:9
  9728  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  9729  .  .  .  .  .  .  .  .  .  }
  9730  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9731  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:610:14
  9732  .  .  .  .  .  .  .  .  .  .  Name: "Success"
  9733  .  .  .  .  .  .  .  .  .  }
  9734  .  .  .  .  .  .  .  .  }
  9735  .  .  .  .  .  .  .  .  Lparen: source.go:610:21
  9736  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9737  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9738  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:610:22
  9739  .  .  .  .  .  .  .  .  .  .  Name: "queryResults"
  9740  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9618)
  9741  .  .  .  .  .  .  .  .  .  }
  9742  .  .  .  .  .  .  .  .  }
  9743  .  .  .  .  .  .  .  .  Ellipsis: -
  9744  .  .  .  .  .  .  .  .  Rparen: source.go:610:34
  9745  .  .  .  .  .  .  .  }
  9746  .  .  .  .  .  .  }
  9747  .  .  .  .  .  }
  9748  .  .  .  .  }
  9749  .  .  .  .  Rbrace: source.go:611:1
  9750  .  .  .  }
  9751  .  .  }
  9752  .  .  15: *(obj @ 8549)
  9753  .  .  16: *ast.FuncDecl {
  9754  .  .  .  Recv: *ast.FieldList {
  9755  .  .  .  .  Opening: source.go:663:6
  9756  .  .  .  .  List: []*ast.Field (len = 1) {
  9757  .  .  .  .  .  0: *ast.Field {
  9758  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9759  .  .  .  .  .  .  .  0: *ast.Ident {
  9760  .  .  .  .  .  .  .  .  NamePos: source.go:663:7
  9761  .  .  .  .  .  .  .  .  Name: "t"
  9762  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9763  .  .  .  .  .  .  .  .  .  Kind: var
  9764  .  .  .  .  .  .  .  .  .  Name: "t"
  9765  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9757)
  9766  .  .  .  .  .  .  .  .  }
  9767  .  .  .  .  .  .  .  }
  9768  .  .  .  .  .  .  }
  9769  .  .  .  .  .  .  Type: *ast.StarExpr {
  9770  .  .  .  .  .  .  .  Star: source.go:663:9
  9771  .  .  .  .  .  .  .  X: *ast.Ident {
  9772  .  .  .  .  .  .  .  .  NamePos: source.go:663:10
  9773  .  .  .  .  .  .  .  .  Name: "SimpleChaincode"
  9774  .  .  .  .  .  .  .  .  Obj: *(obj @ 76)
  9775  .  .  .  .  .  .  .  }
  9776  .  .  .  .  .  .  }
  9777  .  .  .  .  .  }
  9778  .  .  .  .  }
  9779  .  .  .  .  Closing: source.go:663:25
  9780  .  .  .  }
  9781  .  .  .  Name: *ast.Ident {
  9782  .  .  .  .  NamePos: source.go:663:27
  9783  .  .  .  .  Name: "getMarbleHash"
  9784  .  .  .  }
  9785  .  .  .  Type: *ast.FuncType {
  9786  .  .  .  .  Func: source.go:663:1
  9787  .  .  .  .  Params: *ast.FieldList {
  9788  .  .  .  .  .  Opening: source.go:663:40
  9789  .  .  .  .  .  List: []*ast.Field (len = 2) {
  9790  .  .  .  .  .  .  0: *ast.Field {
  9791  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9792  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9793  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:41
  9794  .  .  .  .  .  .  .  .  .  Name: "stub"
  9795  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9796  .  .  .  .  .  .  .  .  .  .  Kind: var
  9797  .  .  .  .  .  .  .  .  .  .  Name: "stub"
  9798  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9790)
  9799  .  .  .  .  .  .  .  .  .  }
  9800  .  .  .  .  .  .  .  .  }
  9801  .  .  .  .  .  .  .  }
  9802  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  9803  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9804  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:46
  9805  .  .  .  .  .  .  .  .  .  Name: "shim"
  9806  .  .  .  .  .  .  .  .  }
  9807  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9808  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:51
  9809  .  .  .  .  .  .  .  .  .  Name: "ChaincodeStubInterface"
  9810  .  .  .  .  .  .  .  .  }
  9811  .  .  .  .  .  .  .  }
  9812  .  .  .  .  .  .  }
  9813  .  .  .  .  .  .  1: *ast.Field {
  9814  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9815  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9816  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:75
  9817  .  .  .  .  .  .  .  .  .  Name: "args"
  9818  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9819  .  .  .  .  .  .  .  .  .  .  Kind: var
  9820  .  .  .  .  .  .  .  .  .  .  Name: "args"
  9821  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9813)
  9822  .  .  .  .  .  .  .  .  .  }
  9823  .  .  .  .  .  .  .  .  }
  9824  .  .  .  .  .  .  .  }
  9825  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  9826  .  .  .  .  .  .  .  .  Lbrack: source.go:663:80
  9827  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  9828  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:82
  9829  .  .  .  .  .  .  .  .  .  Name: "string"
  9830  .  .  .  .  .  .  .  .  }
  9831  .  .  .  .  .  .  .  }
  9832  .  .  .  .  .  .  }
  9833  .  .  .  .  .  }
  9834  .  .  .  .  .  Closing: source.go:663:88
  9835  .  .  .  .  }
  9836  .  .  .  .  Results: *ast.FieldList {
  9837  .  .  .  .  .  Opening: -
  9838  .  .  .  .  .  List: []*ast.Field (len = 1) {
  9839  .  .  .  .  .  .  0: *ast.Field {
  9840  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  9841  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9842  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:90
  9843  .  .  .  .  .  .  .  .  .  Name: "pb"
  9844  .  .  .  .  .  .  .  .  }
  9845  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9846  .  .  .  .  .  .  .  .  .  NamePos: source.go:663:93
  9847  .  .  .  .  .  .  .  .  .  Name: "Response"
  9848  .  .  .  .  .  .  .  .  }
  9849  .  .  .  .  .  .  .  }
  9850  .  .  .  .  .  .  }
  9851  .  .  .  .  .  }
  9852  .  .  .  .  .  Closing: -
  9853  .  .  .  .  }
  9854  .  .  .  }
  9855  .  .  .  Body: *ast.BlockStmt {
  9856  .  .  .  .  Lbrace: source.go:663:102
  9857  .  .  .  .  List: []ast.Stmt (len = 8) {
  9858  .  .  .  .  .  0: *ast.DeclStmt {
  9859  .  .  .  .  .  .  Decl: *ast.GenDecl {
  9860  .  .  .  .  .  .  .  TokPos: source.go:664:2
  9861  .  .  .  .  .  .  .  Tok: var
  9862  .  .  .  .  .  .  .  Lparen: -
  9863  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  9864  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  9865  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
  9866  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9867  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:664:6
  9868  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  9869  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9870  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  9871  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
  9872  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9864)
  9873  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  9874  .  .  .  .  .  .  .  .  .  .  .  }
  9875  .  .  .  .  .  .  .  .  .  .  }
  9876  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  9877  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:664:12
  9878  .  .  .  .  .  .  .  .  .  .  .  Name: "collection"
  9879  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9880  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  9881  .  .  .  .  .  .  .  .  .  .  .  .  Name: "collection"
  9882  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9864)
  9883  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  9884  .  .  .  .  .  .  .  .  .  .  .  }
  9885  .  .  .  .  .  .  .  .  .  .  }
  9886  .  .  .  .  .  .  .  .  .  }
  9887  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  9888  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:664:23
  9889  .  .  .  .  .  .  .  .  .  .  Name: "string"
  9890  .  .  .  .  .  .  .  .  .  }
  9891  .  .  .  .  .  .  .  .  }
  9892  .  .  .  .  .  .  .  }
  9893  .  .  .  .  .  .  .  Rparen: -
  9894  .  .  .  .  .  .  }
  9895  .  .  .  .  .  }
  9896  .  .  .  .  .  1: *ast.DeclStmt {
  9897  .  .  .  .  .  .  Decl: *ast.GenDecl {
  9898  .  .  .  .  .  .  .  TokPos: source.go:665:2
  9899  .  .  .  .  .  .  .  Tok: var
  9900  .  .  .  .  .  .  .  Lparen: -
  9901  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
  9902  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
  9903  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  9904  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9905  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:665:6
  9906  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  9907  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  9908  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  9909  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
  9910  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9902)
  9911  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
  9912  .  .  .  .  .  .  .  .  .  .  .  }
  9913  .  .  .  .  .  .  .  .  .  .  }
  9914  .  .  .  .  .  .  .  .  .  }
  9915  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  9916  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:665:10
  9917  .  .  .  .  .  .  .  .  .  .  Name: "error"
  9918  .  .  .  .  .  .  .  .  .  }
  9919  .  .  .  .  .  .  .  .  }
  9920  .  .  .  .  .  .  .  }
  9921  .  .  .  .  .  .  .  Rparen: -
  9922  .  .  .  .  .  .  }
  9923  .  .  .  .  .  }
  9924  .  .  .  .  .  2: *ast.IfStmt {
  9925  .  .  .  .  .  .  If: source.go:667:2
  9926  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
  9927  .  .  .  .  .  .  .  X: *ast.CallExpr {
  9928  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  9929  .  .  .  .  .  .  .  .  .  NamePos: source.go:667:5
  9930  .  .  .  .  .  .  .  .  .  Name: "len"
  9931  .  .  .  .  .  .  .  .  }
  9932  .  .  .  .  .  .  .  .  Lparen: source.go:667:8
  9933  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9934  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  9935  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:667:9
  9936  .  .  .  .  .  .  .  .  .  .  Name: "args"
  9937  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9818)
  9938  .  .  .  .  .  .  .  .  .  }
  9939  .  .  .  .  .  .  .  .  }
  9940  .  .  .  .  .  .  .  .  Ellipsis: -
  9941  .  .  .  .  .  .  .  .  Rparen: source.go:667:13
  9942  .  .  .  .  .  .  .  }
  9943  .  .  .  .  .  .  .  OpPos: source.go:667:15
  9944  .  .  .  .  .  .  .  Op: !=
  9945  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  9946  .  .  .  .  .  .  .  .  ValuePos: source.go:667:18
  9947  .  .  .  .  .  .  .  .  Kind: INT
  9948  .  .  .  .  .  .  .  .  Value: "2"
  9949  .  .  .  .  .  .  .  }
  9950  .  .  .  .  .  .  }
  9951  .  .  .  .  .  .  Body: *ast.BlockStmt {
  9952  .  .  .  .  .  .  .  Lbrace: source.go:667:20
  9953  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  9954  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
  9955  .  .  .  .  .  .  .  .  .  Return: source.go:668:3
  9956  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  9957  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  9958  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  9959  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9960  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:668:10
  9961  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
  9962  .  .  .  .  .  .  .  .  .  .  .  .  }
  9963  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  9964  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:668:15
  9965  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
  9966  .  .  .  .  .  .  .  .  .  .  .  .  }
  9967  .  .  .  .  .  .  .  .  .  .  .  }
  9968  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:668:20
  9969  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  9970  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  9971  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:668:21
  9972  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  9973  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Incorrect number of arguments. Expecting the collection and the name of the marble to query\""
  9974  .  .  .  .  .  .  .  .  .  .  .  .  }
  9975  .  .  .  .  .  .  .  .  .  .  .  }
  9976  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  9977  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:668:114
  9978  .  .  .  .  .  .  .  .  .  .  }
  9979  .  .  .  .  .  .  .  .  .  }
  9980  .  .  .  .  .  .  .  .  }
  9981  .  .  .  .  .  .  .  }
  9982  .  .  .  .  .  .  .  Rbrace: source.go:669:2
  9983  .  .  .  .  .  .  }
  9984  .  .  .  .  .  }
  9985  .  .  .  .  .  3: *ast.AssignStmt {
  9986  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  9987  .  .  .  .  .  .  .  0: *ast.Ident {
  9988  .  .  .  .  .  .  .  .  NamePos: source.go:671:2
  9989  .  .  .  .  .  .  .  .  Name: "collection"
  9990  .  .  .  .  .  .  .  .  Obj: *(obj @ 9879)
  9991  .  .  .  .  .  .  .  }
  9992  .  .  .  .  .  .  }
  9993  .  .  .  .  .  .  TokPos: source.go:671:13
  9994  .  .  .  .  .  .  Tok: =
  9995  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  9996  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  9997  .  .  .  .  .  .  .  .  X: *ast.Ident {
  9998  .  .  .  .  .  .  .  .  .  NamePos: source.go:671:15
  9999  .  .  .  .  .  .  .  .  .  Name: "args"
 10000  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9818)
 10001  .  .  .  .  .  .  .  .  }
 10002  .  .  .  .  .  .  .  .  Lbrack: source.go:671:19
 10003  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
 10004  .  .  .  .  .  .  .  .  .  ValuePos: source.go:671:20
 10005  .  .  .  .  .  .  .  .  .  Kind: INT
 10006  .  .  .  .  .  .  .  .  .  Value: "0"
 10007  .  .  .  .  .  .  .  .  }
 10008  .  .  .  .  .  .  .  .  Rbrack: source.go:671:21
 10009  .  .  .  .  .  .  .  }
 10010  .  .  .  .  .  .  }
 10011  .  .  .  .  .  }
 10012  .  .  .  .  .  4: *ast.AssignStmt {
 10013  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
 10014  .  .  .  .  .  .  .  0: *ast.Ident {
 10015  .  .  .  .  .  .  .  .  NamePos: source.go:672:2
 10016  .  .  .  .  .  .  .  .  Name: "name"
 10017  .  .  .  .  .  .  .  .  Obj: *(obj @ 9869)
 10018  .  .  .  .  .  .  .  }
 10019  .  .  .  .  .  .  }
 10020  .  .  .  .  .  .  TokPos: source.go:672:7
 10021  .  .  .  .  .  .  Tok: =
 10022  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
 10023  .  .  .  .  .  .  .  0: *ast.IndexExpr {
 10024  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10025  .  .  .  .  .  .  .  .  .  NamePos: source.go:672:9
 10026  .  .  .  .  .  .  .  .  .  Name: "args"
 10027  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9818)
 10028  .  .  .  .  .  .  .  .  }
 10029  .  .  .  .  .  .  .  .  Lbrack: source.go:672:13
 10030  .  .  .  .  .  .  .  .  Index: *ast.BasicLit {
 10031  .  .  .  .  .  .  .  .  .  ValuePos: source.go:672:14
 10032  .  .  .  .  .  .  .  .  .  Kind: INT
 10033  .  .  .  .  .  .  .  .  .  Value: "1"
 10034  .  .  .  .  .  .  .  .  }
 10035  .  .  .  .  .  .  .  .  Rbrack: source.go:672:15
 10036  .  .  .  .  .  .  .  }
 10037  .  .  .  .  .  .  }
 10038  .  .  .  .  .  }
 10039  .  .  .  .  .  5: *ast.AssignStmt {
 10040  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
 10041  .  .  .  .  .  .  .  0: *ast.Ident {
 10042  .  .  .  .  .  .  .  .  NamePos: source.go:675:2
 10043  .  .  .  .  .  .  .  .  Name: "hashAsbytes"
 10044  .  .  .  .  .  .  .  .  Obj: *ast.Object {
 10045  .  .  .  .  .  .  .  .  .  Kind: var
 10046  .  .  .  .  .  .  .  .  .  Name: "hashAsbytes"
 10047  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 10039)
 10048  .  .  .  .  .  .  .  .  }
 10049  .  .  .  .  .  .  .  }
 10050  .  .  .  .  .  .  .  1: *ast.Ident {
 10051  .  .  .  .  .  .  .  .  NamePos: source.go:675:15
 10052  .  .  .  .  .  .  .  .  Name: "err"
 10053  .  .  .  .  .  .  .  .  Obj: *(obj @ 9907)
 10054  .  .  .  .  .  .  .  }
 10055  .  .  .  .  .  .  }
 10056  .  .  .  .  .  .  TokPos: source.go:675:19
 10057  .  .  .  .  .  .  Tok: :=
 10058  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
 10059  .  .  .  .  .  .  .  0: *ast.CallExpr {
 10060  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 10061  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10062  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:675:22
 10063  .  .  .  .  .  .  .  .  .  .  Name: "stub"
 10064  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9795)
 10065  .  .  .  .  .  .  .  .  .  }
 10066  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 10067  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:675:27
 10068  .  .  .  .  .  .  .  .  .  .  Name: "GetPrivateDataHash"
 10069  .  .  .  .  .  .  .  .  .  }
 10070  .  .  .  .  .  .  .  .  }
 10071  .  .  .  .  .  .  .  .  Lparen: source.go:675:45
 10072  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
 10073  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
 10074  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:675:46
 10075  .  .  .  .  .  .  .  .  .  .  Name: "collection"
 10076  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9879)
 10077  .  .  .  .  .  .  .  .  .  }
 10078  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
 10079  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:675:58
 10080  .  .  .  .  .  .  .  .  .  .  Name: "name"
 10081  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9869)
 10082  .  .  .  .  .  .  .  .  .  }
 10083  .  .  .  .  .  .  .  .  }
 10084  .  .  .  .  .  .  .  .  Ellipsis: -
 10085  .  .  .  .  .  .  .  .  Rparen: source.go:675:62
 10086  .  .  .  .  .  .  .  }
 10087  .  .  .  .  .  .  }
 10088  .  .  .  .  .  }
 10089  .  .  .  .  .  6: *ast.IfStmt {
 10090  .  .  .  .  .  .  If: source.go:676:2
 10091  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
 10092  .  .  .  .  .  .  .  X: *ast.Ident {
 10093  .  .  .  .  .  .  .  .  NamePos: source.go:676:5
 10094  .  .  .  .  .  .  .  .  Name: "err"
 10095  .  .  .  .  .  .  .  .  Obj: *(obj @ 9907)
 10096  .  .  .  .  .  .  .  }
 10097  .  .  .  .  .  .  .  OpPos: source.go:676:9
 10098  .  .  .  .  .  .  .  Op: !=
 10099  .  .  .  .  .  .  .  Y: *ast.Ident {
 10100  .  .  .  .  .  .  .  .  NamePos: source.go:676:12
 10101  .  .  .  .  .  .  .  .  Name: "nil"
 10102  .  .  .  .  .  .  .  }
 10103  .  .  .  .  .  .  }
 10104  .  .  .  .  .  .  Body: *ast.BlockStmt {
 10105  .  .  .  .  .  .  .  Lbrace: source.go:676:16
 10106  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
 10107  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
 10108  .  .  .  .  .  .  .  .  .  Return: source.go:677:3
 10109  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
 10110  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
 10111  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 10112  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10113  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:677:10
 10114  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
 10115  .  .  .  .  .  .  .  .  .  .  .  .  }
 10116  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 10117  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:677:15
 10118  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
 10119  .  .  .  .  .  .  .  .  .  .  .  .  }
 10120  .  .  .  .  .  .  .  .  .  .  .  }
 10121  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:677:20
 10122  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
 10123  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
 10124  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
 10125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:677:21
 10126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
 10127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Failed to get public data hash for marble:\""
 10128  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10129  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:677:66
 10130  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
 10131  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
 10132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 10133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:677:68
 10135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
 10136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9907)
 10137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 10139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:677:72
 10140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
 10141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:677:77
 10144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
 10145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:677:78
 10146  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10147  .  .  .  .  .  .  .  .  .  .  .  .  }
 10148  .  .  .  .  .  .  .  .  .  .  .  }
 10149  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
 10150  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:677:79
 10151  .  .  .  .  .  .  .  .  .  .  }
 10152  .  .  .  .  .  .  .  .  .  }
 10153  .  .  .  .  .  .  .  .  }
 10154  .  .  .  .  .  .  .  }
 10155  .  .  .  .  .  .  .  Rbrace: source.go:678:2
 10156  .  .  .  .  .  .  }
 10157  .  .  .  .  .  .  Else: *ast.IfStmt {
 10158  .  .  .  .  .  .  .  If: source.go:678:9
 10159  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
 10160  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10161  .  .  .  .  .  .  .  .  .  NamePos: source.go:678:12
 10162  .  .  .  .  .  .  .  .  .  Name: "hashAsbytes"
 10163  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 10044)
 10164  .  .  .  .  .  .  .  .  }
 10165  .  .  .  .  .  .  .  .  OpPos: source.go:678:24
 10166  .  .  .  .  .  .  .  .  Op: ==
 10167  .  .  .  .  .  .  .  .  Y: *ast.Ident {
 10168  .  .  .  .  .  .  .  .  .  NamePos: source.go:678:27
 10169  .  .  .  .  .  .  .  .  .  Name: "nil"
 10170  .  .  .  .  .  .  .  .  }
 10171  .  .  .  .  .  .  .  }
 10172  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
 10173  .  .  .  .  .  .  .  .  Lbrace: source.go:678:31
 10174  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
 10175  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
 10176  .  .  .  .  .  .  .  .  .  .  Return: source.go:679:3
 10177  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
 10178  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
 10179  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 10180  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:679:10
 10182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "shim"
 10183  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10184  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 10185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:679:15
 10186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Error"
 10187  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10188  .  .  .  .  .  .  .  .  .  .  .  .  }
 10189  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: source.go:679:20
 10190  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
 10191  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
 10192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
 10193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: source.go:679:21
 10194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
 10195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Marble does not exist: \""
 10196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: source.go:679:47
 10198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +
 10199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
 10200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:679:49
 10201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
 10202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9869)
 10203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10204  .  .  .  .  .  .  .  .  .  .  .  .  .  }
 10205  .  .  .  .  .  .  .  .  .  .  .  .  }
 10206  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
 10207  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: source.go:679:53
 10208  .  .  .  .  .  .  .  .  .  .  .  }
 10209  .  .  .  .  .  .  .  .  .  .  }
 10210  .  .  .  .  .  .  .  .  .  }
 10211  .  .  .  .  .  .  .  .  }
 10212  .  .  .  .  .  .  .  .  Rbrace: source.go:680:2
 10213  .  .  .  .  .  .  .  }
 10214  .  .  .  .  .  .  }
 10215  .  .  .  .  .  }
 10216  .  .  .  .  .  7: *ast.ReturnStmt {
 10217  .  .  .  .  .  .  Return: source.go:682:2
 10218  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
 10219  .  .  .  .  .  .  .  0: *ast.CallExpr {
 10220  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 10221  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 10222  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:682:9
 10223  .  .  .  .  .  .  .  .  .  .  Name: "shim"
 10224  .  .  .  .  .  .  .  .  .  }
 10225  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 10226  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:682:14
 10227  .  .  .  .  .  .  .  .  .  .  Name: "Success"
 10228  .  .  .  .  .  .  .  .  .  }
 10229  .  .  .  .  .  .  .  .  }
 10230  .  .  .  .  .  .  .  .  Lparen: source.go:682:21
 10231  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
 10232  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
 10233  .  .  .  .  .  .  .  .  .  .  NamePos: source.go:682:22
 10234  .  .  .  .  .  .  .  .  .  .  Name: "hashAsbytes"
 10235  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 10044)
 10236  .  .  .  .  .  .  .  .  .  }
 10237  .  .  .  .  .  .  .  .  }
 10238  .  .  .  .  .  .  .  .  Ellipsis: -
 10239  .  .  .  .  .  .  .  .  Rparen: source.go:682:33
 10240  .  .  .  .  .  .  .  }
 10241  .  .  .  .  .  .  }
 10242  .  .  .  .  .  }
 10243  .  .  .  .  }
 10244  .  .  .  .  Rbrace: source.go:683:1
 10245  .  .  .  }
 10246  .  .  }
 10247  .  }
 10248  .  FileStart: source.go:1:1
 10249  .  FileEnd: source.go:683:3
 10250  .  Scope: *ast.Scope {
 10251  .  .  Objects: map[string]*ast.Object (len = 5) {
 10252  .  .  .  "SimpleChaincode": *(obj @ 76)
 10253  .  .  .  "marble": *(obj @ 104)
 10254  .  .  .  "marblePrivateDetails": *(obj @ 244)
 10255  .  .  .  "main": *(obj @ 335)
 10256  .  .  .  "getQueryResultForQueryString": *(obj @ 8546)
 10257  .  .  }
 10258  .  }
 10259  .  Imports: []*ast.ImportSpec (len = 6) {
 10260  .  .  0: *(obj @ 12)
 10261  .  .  1: *(obj @ 20)
 10262  .  .  2: *(obj @ 28)
 10263  .  .  3: *(obj @ 36)
 10264  .  .  4: *(obj @ 44)
 10265  .  .  5: *(obj @ 52)
 10266  .  }
 10267  .  Unresolved: []*ast.Ident (len = 229) {
 10268  .  .  0: *(obj @ 128)
 10269  .  .  1: *(obj @ 150)
 10270  .  .  2: *(obj @ 172)
 10271  .  .  3: *(obj @ 194)
 10272  .  .  4: *(obj @ 216)
 10273  .  .  5: *(obj @ 268)
 10274  .  .  6: *(obj @ 290)
 10275  .  .  7: *(obj @ 312)
 10276  .  .  8: *(obj @ 368)
 10277  .  .  9: *(obj @ 380)
 10278  .  .  10: *(obj @ 411)
 10279  .  .  11: *(obj @ 422)
 10280  .  .  12: *(obj @ 506)
 10281  .  .  13: *(obj @ 524)
 10282  .  .  14: *(obj @ 546)
 10283  .  .  15: *(obj @ 557)
 10284  .  .  16: *(obj @ 621)
 10285  .  .  17: *(obj @ 639)
 10286  .  .  18: *(obj @ 701)
 10287  .  .  19: *(obj @ 1162)
 10288  .  .  20: *(obj @ 1197)
 10289  .  .  21: *(obj @ 1279)
 10290  .  .  22: *(obj @ 1303)
 10291  .  .  23: *(obj @ 1317)
 10292  .  .  24: *(obj @ 1353)
 10293  .  .  25: *(obj @ 1396)
 10294  .  .  26: *(obj @ 1418)
 10295  .  .  27: *(obj @ 1440)
 10296  .  .  28: *(obj @ 1462)
 10297  .  .  29: *(obj @ 1484)
 10298  .  .  30: *(obj @ 1507)
 10299  .  .  31: *(obj @ 1532)
 10300  .  .  32: *(obj @ 1563)
 10301  .  .  33: *(obj @ 1637)
 10302  .  .  34: *(obj @ 1650)
 10303  .  .  35: *(obj @ 1755)
 10304  .  .  36: *(obj @ 1785)
 10305  .  .  37: *(obj @ 1816)
 10306  .  .  38: *(obj @ 1884)
 10307  .  .  39: *(obj @ 1925)
 10308  .  .  40: *(obj @ 1938)
 10309  .  .  41: *(obj @ 1958)
 10310  .  .  42: *(obj @ 1988)
 10311  .  .  43: *(obj @ 2025)
 10312  .  .  44: *(obj @ 2055)
 10313  .  .  45: *(obj @ 2092)
 10314  .  .  46: *(obj @ 2148)
 10315  .  .  47: *(obj @ 2178)
 10316  .  .  48: *(obj @ 2215)
 10317  .  .  49: *(obj @ 2271)
 10318  .  .  50: *(obj @ 2363)
 10319  .  .  51: *(obj @ 2376)
 10320  .  .  52: *(obj @ 2431)
 10321  .  .  53: *(obj @ 2442)
 10322  .  .  54: *(obj @ 2483)
 10323  .  .  55: *(obj @ 2664)
 10324  .  .  56: *(obj @ 2696)
 10325  .  .  57: *(obj @ 2709)
 10326  .  .  58: *(obj @ 2808)
 10327  .  .  59: *(obj @ 2821)
 10328  .  .  60: *(obj @ 2961)
 10329  .  .  61: *(obj @ 2993)
 10330  .  .  62: *(obj @ 3006)
 10331  .  .  63: *(obj @ 3105)
 10332  .  .  64: *(obj @ 3118)
 10333  .  .  65: *(obj @ 3219)
 10334  .  .  66: *(obj @ 3268)
 10335  .  .  67: *(obj @ 3281)
 10336  .  .  68: *(obj @ 3336)
 10337  .  .  69: *(obj @ 3392)
 10338  .  .  70: *(obj @ 3418)
 10339  .  .  71: *(obj @ 3429)
 10340  .  .  72: *(obj @ 3493)
 10341  .  .  73: *(obj @ 3517)
 10342  .  .  74: *(obj @ 3531)
 10343  .  .  75: *(obj @ 3577)
 10344  .  .  76: *(obj @ 3605)
 10345  .  .  77: *(obj @ 3618)
 10346  .  .  78: *(obj @ 3649)
 10347  .  .  79: *(obj @ 3762)
 10348  .  .  80: *(obj @ 3840)
 10349  .  .  81: *(obj @ 3875)
 10350  .  .  82: *(obj @ 3924)
 10351  .  .  83: *(obj @ 3956)
 10352  .  .  84: *(obj @ 4032)
 10353  .  .  85: *(obj @ 4056)
 10354  .  .  86: *(obj @ 4070)
 10355  .  .  87: *(obj @ 4116)
 10356  .  .  88: *(obj @ 4144)
 10357  .  .  89: *(obj @ 4157)
 10358  .  .  90: *(obj @ 4188)
 10359  .  .  91: *(obj @ 4301)
 10360  .  .  92: *(obj @ 4379)
 10361  .  .  93: *(obj @ 4414)
 10362  .  .  94: *(obj @ 4463)
 10363  .  .  95: *(obj @ 4495)
 10364  .  .  96: *(obj @ 4571)
 10365  .  .  97: *(obj @ 4595)
 10366  .  .  98: *(obj @ 4609)
 10367  .  .  99: *(obj @ 4629)
 10368  .  .  100: *(obj @ 4684)
 10369  .  .  101: *(obj @ 4708)
 10370  .  .  102: *(obj @ 4739)
 10371  .  .  103: *(obj @ 4817)
 10372  .  .  104: *(obj @ 4830)
 10373  .  .  105: *(obj @ 4935)
 10374  .  .  106: *(obj @ 4965)
 10375  .  .  107: *(obj @ 4996)
 10376  .  .  108: *(obj @ 5064)
 10377  .  .  109: *(obj @ 5105)
 10378  .  .  110: *(obj @ 5118)
 10379  .  .  111: *(obj @ 5138)
 10380  .  .  112: *(obj @ 5168)
 10381  .  .  113: *(obj @ 5205)
 10382  .  .  114: *(obj @ 5297)
 10383  .  .  115: *(obj @ 5310)
 10384  .  .  116: *(obj @ 5360)
 10385  .  .  117: *(obj @ 5373)
 10386  .  .  118: *(obj @ 5457)
 10387  .  .  119: *(obj @ 5471)
 10388  .  .  120: *(obj @ 5512)
 10389  .  .  121: *(obj @ 5525)
 10390  .  .  122: *(obj @ 5545)
 10391  .  .  123: *(obj @ 5628)
 10392  .  .  124: *(obj @ 5641)
 10393  .  .  125: *(obj @ 5751)
 10394  .  .  126: *(obj @ 5800)
 10395  .  .  127: *(obj @ 5813)
 10396  .  .  128: *(obj @ 5901)
 10397  .  .  129: *(obj @ 5914)
 10398  .  .  130: *(obj @ 6017)
 10399  .  .  131: *(obj @ 6030)
 10400  .  .  132: *(obj @ 6072)
 10401  .  .  133: *(obj @ 6083)
 10402  .  .  134: *(obj @ 6147)
 10403  .  .  135: *(obj @ 6171)
 10404  .  .  136: *(obj @ 6185)
 10405  .  .  137: *(obj @ 6205)
 10406  .  .  138: *(obj @ 6260)
 10407  .  .  139: *(obj @ 6282)
 10408  .  .  140: *(obj @ 6306)
 10409  .  .  141: *(obj @ 6337)
 10410  .  .  142: *(obj @ 6415)
 10411  .  .  143: *(obj @ 6428)
 10412  .  .  144: *(obj @ 6533)
 10413  .  .  145: *(obj @ 6563)
 10414  .  .  146: *(obj @ 6594)
 10415  .  .  147: *(obj @ 6662)
 10416  .  .  148: *(obj @ 6703)
 10417  .  .  149: *(obj @ 6716)
 10418  .  .  150: *(obj @ 6736)
 10419  .  .  151: *(obj @ 6766)
 10420  .  .  152: *(obj @ 6803)
 10421  .  .  153: *(obj @ 6833)
 10422  .  .  154: *(obj @ 6870)
 10423  .  .  155: *(obj @ 6962)
 10424  .  .  156: *(obj @ 6975)
 10425  .  .  157: *(obj @ 7030)
 10426  .  .  158: *(obj @ 7043)
 10427  .  .  159: *(obj @ 7125)
 10428  .  .  160: *(obj @ 7166)
 10429  .  .  161: *(obj @ 7179)
 10430  .  .  162: *(obj @ 7272)
 10431  .  .  163: *(obj @ 7356)
 10432  .  .  164: *(obj @ 7369)
 10433  .  .  165: *(obj @ 7409)
 10434  .  .  166: *(obj @ 7435)
 10435  .  .  167: *(obj @ 7446)
 10436  .  .  168: *(obj @ 7510)
 10437  .  .  169: *(obj @ 7534)
 10438  .  .  170: *(obj @ 7548)
 10439  .  .  171: *(obj @ 7569)
 10440  .  .  172: *(obj @ 7600)
 10441  .  .  173: *(obj @ 7757)
 10442  .  .  174: *(obj @ 7770)
 10443  .  .  175: *(obj @ 7846)
 10444  .  .  176: *(obj @ 7900)
 10445  .  .  177: *(obj @ 7979)
 10446  .  .  178: *(obj @ 7992)
 10447  .  .  179: *(obj @ 8085)
 10448  .  .  180: *(obj @ 8143)
 10449  .  .  181: *(obj @ 8181)
 10450  .  .  182: *(obj @ 8223)
 10451  .  .  183: *(obj @ 8310)
 10452  .  .  184: *(obj @ 8334)
 10453  .  .  185: *(obj @ 8348)
 10454  .  .  186: *(obj @ 8369)
 10455  .  .  187: *(obj @ 8400)
 10456  .  .  188: *(obj @ 8443)
 10457  .  .  189: *(obj @ 8491)
 10458  .  .  190: *(obj @ 9335)
 10459  .  .  191: *(obj @ 9348)
 10460  .  .  192: *(obj @ 9390)
 10461  .  .  193: *(obj @ 9466)
 10462  .  .  194: *(obj @ 9490)
 10463  .  .  195: *(obj @ 9504)
 10464  .  .  196: *(obj @ 9525)
 10465  .  .  197: *(obj @ 9556)
 10466  .  .  198: *(obj @ 9671)
 10467  .  .  199: *(obj @ 9684)
 10468  .  .  200: *(obj @ 9726)
 10469  .  .  201: *(obj @ 8573)
 10470  .  .  202: *(obj @ 8595)
 10471  .  .  203: *(obj @ 8609)
 10472  .  .  204: *(obj @ 8616)
 10473  .  .  205: *(obj @ 8631)
 10474  .  .  206: *(obj @ 8721)
 10475  .  .  207: *(obj @ 8732)
 10476  .  .  208: *(obj @ 8786)
 10477  .  .  209: *(obj @ 8840)
 10478  .  .  210: *(obj @ 8919)
 10479  .  .  211: *(obj @ 8930)
 10480  .  .  212: *(obj @ 8955)
 10481  .  .  213: *(obj @ 9139)
 10482  .  .  214: *(obj @ 9201)
 10483  .  .  215: *(obj @ 9239)
 10484  .  .  216: *(obj @ 9295)
 10485  .  .  217: *(obj @ 9803)
 10486  .  .  218: *(obj @ 9827)
 10487  .  .  219: *(obj @ 9841)
 10488  .  .  220: *(obj @ 9887)
 10489  .  .  221: *(obj @ 9915)
 10490  .  .  222: *(obj @ 9928)
 10491  .  .  223: *(obj @ 9959)
 10492  .  .  224: *(obj @ 10099)
 10493  .  .  225: *(obj @ 10112)
 10494  .  .  226: *(obj @ 10167)
 10495  .  .  227: *(obj @ 10180)
 10496  .  .  228: *(obj @ 10221)
 10497  .  }
 10498  .  GoVersion: ""
 10499  }
